<?xml version="1.0"?>
<!--
Copyright (c) Microsoft Corporation. All rights reserved.

Licensed under the MIT License. See LICENSE.txt in the project root for license information.
-->

<doc>
  <assembly>
    <name>Microsoft.Graphics.Canvas</name>
  </assembly>

  <members>

    <member name="T:Microsoft.Graphics.Canvas.Effects.EdgeDetectionEffect" NoComposition="true">
      <summary>
        Filters out the content of an image leaving lines at the edges of contrasting sections.
      </summary>
      <remarks>
        <p>This Windows Runtime type corresponds to the
           <a href="http://msdn.microsoft.com/en-us/library/windows/desktop/dn890763.aspx">D2D Edge detection effect</a>.</p>
      </remarks>
    </member>
    <member name="M:Microsoft.Graphics.Canvas.Effects.EdgeDetectionEffect.#ctor">
      <summary>Initializes a new instance of the EdgeDetectionEffect class.</summary>
    </member>
    <member name="P:Microsoft.Graphics.Canvas.Effects.EdgeDetectionEffect.Source">
      <summary>Gets or sets the input source for EdgeDetection effect.</summary>
      <remarks>
        This property is initialized to null.
      </remarks>
    </member>
    <member name="P:Microsoft.Graphics.Canvas.Effects.EdgeDetectionEffect.Amount">
      <summary>Adjusts the sensitivity of the edge detection filter.
               Default value 0.5, range 0 to 1.</summary>
    </member>
    <member name="P:Microsoft.Graphics.Canvas.Effects.EdgeDetectionEffect.BlurAmount">
      <summary>Specifies the amount of blur to apply before edge detection.
               Blur is used to remove high frequencies and reduce phantom edges.
               Default value 0, range 0 to 10.</summary>
    </member>
    <member name="P:Microsoft.Graphics.Canvas.Effects.EdgeDetectionEffect.Mode">
      <summary>Specifies what type of filter kernel to use for edge detection.
               Default value <see cref="F:Microsoft.Graphics.Canvas.Effects.EdgeDetectionEffectMode.Sobel"/>.</summary>
    </member>
    <member name="P:Microsoft.Graphics.Canvas.Effects.EdgeDetectionEffect.OverlayEdges">
      <summary>If false, the output image is fully opaque.
               If true, input opacity is preserved.
               Default value false.</summary>
      <remarks>Edge detection only applies to the RGB channels -
               the alpha channel is ignored for purposes of detecting edges.</remarks>
    </member>
    <member name="P:Microsoft.Graphics.Canvas.Effects.EdgeDetectionEffect.AlphaMode">
      <summary>Specifies the treatment of alpha. Default value Premultiplied.</summary>
      <remarks>
        <p>
          Effect inputs and outputs are assumed to be in
          <a href="PremultipliedAlpha.htm">premultiplied alpha</a> format, so when this 
          property is set to Premultiplied, edge detection is applied directly to the 
          input values with no extra conversions.
        </p>
        <p>
          If AlphaMode set to Straight, input values will be unpremultiplied, then 
          edge detection applied, and finally the result converted back to premultiplied 
          format.
        </p>
      </remarks>
    </member>

    <member name="T:Microsoft.Graphics.Canvas.Effects.EdgeDetectionEffectMode">
      <summary>
        <p>Specifies what type of filter kernel to use for edge detection.</p>
      </summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.Effects.EdgeDetectionEffectMode.Sobel">
      <summary>Indicates the Sobel operator should be used for edge detection.</summary>
    </member>
    <member name="F:Microsoft.Graphics.Canvas.Effects.EdgeDetectionEffectMode.Prewitt">
      <summary>Indicates the Prewitt operator should be used for edge detection.</summary>
    </member>

    <inherittemplate name="EffectTemplate" replacement="EdgeDetectionEffect" />
    <inherittemplate name="ICanvasEffectTemplate" replacement="EdgeDetectionEffect" />

  </members>
</doc>
