// Copyright (c) Microsoft Corporation. All rights reserved.
//
// Licensed under the MIT License. See LICENSE.txt in the project root for license information.

namespace Microsoft.Graphics.Canvas
{
    runtimeclass CanvasCommandList;

    [version(VERSION), uuid(B3D44E68-D931-4B5B-B957-0888980A7D50), exclusiveto(CanvasCommandList)]
    interface ICanvasCommandListFactory : IInspectable
    {
        HRESULT Create(
            [in]          ICanvasResourceCreator* resourceCreator,
            [out, retval] CanvasCommandList** commandList);
    }

    [version(VERSION), uuid(B71E73CF-2FE7-4D3A-BBB8-19F016F5BE1B), exclusiveto(CanvasCommandList)]
    interface ICanvasCommandList : IInspectable
        requires ICanvasImage
    {
        //
        // Creates a drawing session; if this command list has already been used
        // then this will fail with E_INVALIDARG.
        //
        HRESULT CreateDrawingSession([out, retval] CanvasDrawingSession** drawingSession);

        [propget]
        HRESULT Device([out, retval] CanvasDevice** value);
    }

    [STANDARD_ATTRIBUTES, activatable(ICanvasCommandListFactory, VERSION)]
    runtimeclass CanvasCommandList
    {
        [default] interface ICanvasCommandList;
        interface Windows.Foundation.IClosable;
    }
}

