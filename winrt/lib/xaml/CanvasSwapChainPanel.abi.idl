// Copyright (c) Microsoft Corporation. All rights reserved.
//
// Licensed under the MIT License. See LICENSE.txt in the project root for license information.

namespace Microsoft.Graphics.Canvas.UI.Xaml
{
    //
    // This control is only useful once it has a CanvasSwapChain associated with it.
    // Without one, it behaves like a XAML SwapChainPanel with no IDXGISwapChain
    // associated.
    //

    runtimeclass CanvasSwapChainPanel;

    [version(VERSION), uuid(DBDCCB96-147E-4A82-AF3A-C91C7800DAA7), exclusiveto(CanvasSwapChainPanel)]
    interface ICanvasSwapChainPanel : IInspectable
    {
        [propput] HRESULT SwapChain([in] Microsoft.Graphics.Canvas.CanvasSwapChain* value);
        [propget] HRESULT SwapChain([out, retval] Microsoft.Graphics.Canvas.CanvasSwapChain** value);

        //
        // Removes the control from the visual tree.
        //
        HRESULT RemoveFromVisualTree();
    };

    [version(VERSION), activatable(VERSION), marshaling_behavior(agile), threading(both)]
#ifdef WINUI
    runtimeclass CanvasSwapChainPanel : Microsoft.UI.Xaml.Controls.SwapChainPanel
#else
    runtimeclass CanvasSwapChainPanel : Windows.UI.Xaml.Controls.SwapChainPanel
#endif
    {
        [default] interface ICanvasSwapChainPanel;
    }
}
