// Copyright (c) Microsoft Corporation. All rights reserved.
//
// Licensed under the MIT License. See LICENSE.txt in the project root for license information.

// This file was automatically generated. Please do not edit it manually.

namespace Microsoft.Graphics.Canvas.Effects
{
    [version(VERSION)]
    typedef enum BlendEffectMode
    {
        Multiply = 0,
        Screen = 1,
        Darken = 2,
        Lighten = 3,
        Dissolve = 4,
        ColorBurn = 5,
        LinearBurn = 6,
        DarkerColor = 7,
        LighterColor = 8,
        ColorDodge = 9,
        LinearDodge = 10,
        Overlay = 11,
        SoftLight = 12,
        HardLight = 13,
        VividLight = 14,
        LinearLight = 15,
        PinLight = 16,
        HardMix = 17,
        Difference = 18,
        Exclusion = 19,
        Hue = 20,
        Saturation = 21,
        Color = 22,
        Luminosity = 23,
        Subtract = 24,
        Division = 25
    } BlendEffectMode;

    runtimeclass BlendEffect;

    [version(VERSION), uuid(5673248E-7266-5E49-B2AB-2589D5D875C3), exclusiveto(BlendEffect)]
    interface IBlendEffect : IInspectable
        requires ICanvasEffect
    {
        [propget]
        HRESULT Mode([out, retval] BlendEffectMode* value);

        [propput]
        HRESULT Mode([in] BlendEffectMode value);

        [propget]
        HRESULT Background([out, retval] IGRAPHICSEFFECTSOURCE** source);

        [propput]
        HRESULT Background([in] IGRAPHICSEFFECTSOURCE* source);

        [propget]
        HRESULT Foreground([out, retval] IGRAPHICSEFFECTSOURCE** source);

        [propput]
        HRESULT Foreground([in] IGRAPHICSEFFECTSOURCE* source);

    };

    [STANDARD_ATTRIBUTES, activatable(VERSION)]
    runtimeclass BlendEffect
    {
        [default] interface IBlendEffect;
    }
}
