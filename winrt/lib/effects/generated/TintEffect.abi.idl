// Copyright (c) Microsoft Corporation. All rights reserved.
//
// Licensed under the MIT License. See LICENSE.txt in the project root for license information.

// This file was automatically generated. Please do not edit it manually.

#if (defined _WIN32_WINNT_WIN10) && (WINVER >= _WIN32_WINNT_WIN10)

namespace Microsoft.Graphics.Canvas.Effects
{
    runtimeclass TintEffect;

    [version(VERSION), uuid(729A21EA-C61E-5308-9EAE-D638AA1F5B8C), exclusiveto(TintEffect)]
    interface ITintEffect : IInspectable
        requires ICanvasEffect
    {
        [propget]
        HRESULT Color([out, retval] Windows.UI.Color* value);

        [propput]
        HRESULT Color([in] Windows.UI.Color value);

        [propget]
        HRESULT ClampOutput([out, retval] boolean* value);

        [propput]
        HRESULT ClampOutput([in] boolean value);

        [propget]
        HRESULT ColorHdr([out, retval] NUMERICS.Vector4* value);

        [propput]
        HRESULT ColorHdr([in] NUMERICS.Vector4 value);

        [propget]
        HRESULT Source([out, retval] IGRAPHICSEFFECTSOURCE** source);

        [propput]
        HRESULT Source([in] IGRAPHICSEFFECTSOURCE* source);

    };

    [version(VERSION), uuid(65E31771-4BAF-5C8C-93F4-3B874E29F68D), exclusiveto(TintEffect)]
    interface ITintEffectStatics : IInspectable
    {
        [propget] HRESULT IsSupported([out, retval] boolean* value);
    }

    [STANDARD_ATTRIBUTES, activatable(VERSION), static(ITintEffectStatics, VERSION)]
    runtimeclass TintEffect
    {
        [default] interface ITintEffect;
    }
}

#endif // _WIN32_WINNT_WIN10
