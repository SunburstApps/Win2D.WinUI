//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "windowscontracts.idl";
import "Windows.Foundation.idl";
import "Microsoft.UI.Composition.idl";
import "Microsoft.UI.Xaml.idl";
import "Microsoft.UI.Xaml.Controls.idl";

// Forward Declare
namespace Microsoft
{
    namespace UI
    {
        namespace Composition
        {
            runtimeclass CompositionPropertySet;

            interface ICompositionAnimationBase;

            runtimeclass Visual;
        }
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Controls
            {
                runtimeclass ScrollViewer;
            }
        }
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            runtimeclass DependencyObject;

            apicontract PrivateApiContract;

            runtimeclass UIElement;

            apicontract WinUIContract;
        }
    }
}
namespace Windows
{
    namespace Foundation
    {
        interface IClosable;

        typedef struct Point Point;

        typedef struct Rect Rect;
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Hosting
            {
                apicontract HostingContract;

                typedef enum XamlSourceFocusNavigationReason XamlSourceFocusNavigationReason;

                interface IDesktopWindowXamlSource;

                interface IDesktopWindowXamlSourceFactory;

                interface IDesktopWindowXamlSourceGotFocusEventArgs;

                interface IDesktopWindowXamlSourceTakeFocusRequestedEventArgs;

                interface IElementCompositionPreview;

                interface IElementCompositionPreviewStatics;

                interface IWindowsXamlManager;

                interface IWindowsXamlManagerStatics;

                interface IXamlIsland;

                interface IXamlIslandStatics;

                interface IXamlSourceFocusNavigationRequest;

                interface IXamlSourceFocusNavigationRequestFactory;

                interface IXamlSourceFocusNavigationResult;

                interface IXamlSourceFocusNavigationResultFactory;

                runtimeclass DesktopWindowXamlSource;

                runtimeclass DesktopWindowXamlSourceGotFocusEventArgs;

                runtimeclass DesktopWindowXamlSourceTakeFocusRequestedEventArgs;

                runtimeclass ElementCompositionPreview;

                runtimeclass WindowsXamlManager;

                runtimeclass XamlIsland;

                runtimeclass XamlSourceFocusNavigationRequest;

                runtimeclass XamlSourceFocusNavigationResult;
            }
        }
    }
}

// Generic instantiations
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Hosting
            {
                declare
                {
                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSource*, Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSourceGotFocusEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSource*, Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSourceTakeFocusRequestedEventArgs*>;
                }
            }
        }
    }
}

// Type definition
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Hosting
            {
                [contractversion(1.0)]
                apicontract HostingContract
                {
                }

                [contract(Microsoft.UI.Xaml.Hosting.HostingContract, 1.0)]
                enum XamlSourceFocusNavigationReason
                {
                    Programmatic = 0,
                    Restore      = 1,
                    First        = 3,
                    Last         = 4,
                    Left         = 7,
                    Up           = 8,
                    Right        = 9,
                    Down         = 10
                };

                [contract(Microsoft.UI.Xaml.Hosting.HostingContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSource)]
                [uuid(A81014CD-55C1-506E-AA79-D9AC96DB9B8E)]
                interface IDesktopWindowXamlSource : IInspectable
                {
                    [propget] HRESULT Content([out] [retval] Microsoft.UI.Xaml.UIElement** value);
                    [propput] HRESULT Content([in] Microsoft.UI.Xaml.UIElement* value);
                    [propget] HRESULT HasFocus([out] [retval] boolean* value);
                    [eventadd] HRESULT TakeFocusRequested([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSource*, Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSourceTakeFocusRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT TakeFocusRequested([in] EventRegistrationToken token);
                    [eventadd] HRESULT GotFocus([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSource*, Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSourceGotFocusEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT GotFocus([in] EventRegistrationToken token);
                    HRESULT NavigateFocus([in] Microsoft.UI.Xaml.Hosting.XamlSourceFocusNavigationRequest* request, [out] [retval] Microsoft.UI.Xaml.Hosting.XamlSourceFocusNavigationResult** result);
                }

                [contract(Microsoft.UI.Xaml.Hosting.HostingContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSource)]
                [uuid(7D2DB617-14E7-5D49-AEEC-AE10887E595D)]
                interface IDesktopWindowXamlSourceFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSource** value);
                }

                [contract(Microsoft.UI.Xaml.Hosting.HostingContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSourceGotFocusEventArgs)]
                [uuid(CC63D863-2071-5F6B-AEF9-C0BA35F3B8DF)]
                interface IDesktopWindowXamlSourceGotFocusEventArgs : IInspectable
                {
                    [propget] HRESULT Request([out] [retval] Microsoft.UI.Xaml.Hosting.XamlSourceFocusNavigationRequest** value);
                }

                [contract(Microsoft.UI.Xaml.Hosting.HostingContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Hosting.DesktopWindowXamlSourceTakeFocusRequestedEventArgs)]
                [uuid(4F5A0E2C-4DDC-5C03-939F-6F3BDA560363)]
                interface IDesktopWindowXamlSourceTakeFocusRequestedEventArgs : IInspectable
                {
                    [propget] HRESULT Request([out] [retval] Microsoft.UI.Xaml.Hosting.XamlSourceFocusNavigationRequest** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Hosting.ElementCompositionPreview)]
                [uuid(C8AD1EF4-A93F-5A25-85BD-7C498D9856D3)]
                interface IElementCompositionPreview : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Hosting.ElementCompositionPreview)]
                [uuid(84DA5A6C-0CFA-532B-9B15-CCD986374342)]
                interface IElementCompositionPreviewStatics : IInspectable
                {
                    HRESULT GetElementVisual([in] Microsoft.UI.Xaml.UIElement* element, [out] [retval] Microsoft.UI.Composition.Visual** result);
                    HRESULT GetElementChildVisual([in] Microsoft.UI.Xaml.UIElement* element, [out] [retval] Microsoft.UI.Composition.Visual** result);
                    HRESULT SetElementChildVisual([in] Microsoft.UI.Xaml.UIElement* element, [in] Microsoft.UI.Composition.Visual* visual);
                    HRESULT GetScrollViewerManipulationPropertySet([in] Microsoft.UI.Xaml.Controls.ScrollViewer* scrollViewer, [out] [retval] Microsoft.UI.Composition.CompositionPropertySet** result);
                    HRESULT SetImplicitShowAnimation([in] Microsoft.UI.Xaml.UIElement* element, [in] Microsoft.UI.Composition.ICompositionAnimationBase* animation);
                    HRESULT SetImplicitHideAnimation([in] Microsoft.UI.Xaml.UIElement* element, [in] Microsoft.UI.Composition.ICompositionAnimationBase* animation);
                    HRESULT SetIsTranslationEnabled([in] Microsoft.UI.Xaml.UIElement* element, [in] boolean value);
                    HRESULT GetPointerPositionPropertySet([in] Microsoft.UI.Xaml.UIElement* targetElement, [out] [retval] Microsoft.UI.Composition.CompositionPropertySet** result);
                }

                [contract(Microsoft.UI.Xaml.Hosting.HostingContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Hosting.WindowsXamlManager)]
                [uuid(85A2E562-7E8F-5333-A104-A3E672A2FFEE)]
                interface IWindowsXamlManager : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.Hosting.HostingContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Hosting.WindowsXamlManager)]
                [uuid(56CB591D-DE97-539F-881D-8CCDC44FA6C4)]
                interface IWindowsXamlManagerStatics : IInspectable
                {
                    HRESULT InitializeForCurrentThread([out] [retval] Microsoft.UI.Xaml.Hosting.WindowsXamlManager** result);
                }

                [contract(Microsoft.UI.Xaml.PrivateApiContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Hosting.XamlIsland)]
                [uuid(73C343E9-379E-5420-ADFE-C7F327445F12)]
                interface IXamlIsland : IInspectable
                {
                    [propget] HRESULT Content([out] [retval] Microsoft.UI.Xaml.UIElement** value);
                    [propput] HRESULT Content([in] Microsoft.UI.Xaml.UIElement* value);
                    [propget] HRESULT FocusController([out] [retval] IInspectable** value);
                    HRESULT SetScreenOffsetOverride([in] Windows.Foundation.Point offsetOnScreen);
                    HRESULT SetFocus();
                }

                [contract(Microsoft.UI.Xaml.PrivateApiContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Hosting.XamlIsland)]
                [uuid(CA595537-A0B1-5994-A7E4-CAD866BDFCAA)]
                interface IXamlIslandStatics : IInspectable
                {
                    HRESULT GetIslandFromElement([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] Microsoft.UI.Xaml.Hosting.XamlIsland** result);
                }

                [contract(Microsoft.UI.Xaml.Hosting.HostingContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Hosting.XamlSourceFocusNavigationRequest)]
                [uuid(C883EA8B-4CE2-58BE-B547-66DEDF620312)]
                interface IXamlSourceFocusNavigationRequest : IInspectable
                {
                    [propget] HRESULT Reason([out] [retval] Microsoft.UI.Xaml.Hosting.XamlSourceFocusNavigationReason* value);
                    [propget] HRESULT HintRect([out] [retval] Windows.Foundation.Rect* value);
                    [propget] HRESULT CorrelationId([out] [retval] GUID* value);
                }

                [contract(Microsoft.UI.Xaml.Hosting.HostingContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Hosting.XamlSourceFocusNavigationRequest)]
                [uuid(0F0F5D94-F903-5D6F-A059-F84EDF64826C)]
                interface IXamlSourceFocusNavigationRequestFactory : IInspectable
                {
                    HRESULT CreateInstance([in] Microsoft.UI.Xaml.Hosting.XamlSourceFocusNavigationReason reason, [out] [retval] Microsoft.UI.Xaml.Hosting.XamlSourceFocusNavigationRequest** value);
                    HRESULT CreateInstanceWithHintRect([in] Microsoft.UI.Xaml.Hosting.XamlSourceFocusNavigationReason reason, [in] Windows.Foundation.Rect hintRect, [out] [retval] Microsoft.UI.Xaml.Hosting.XamlSourceFocusNavigationRequest** value);
                    HRESULT CreateInstanceWithHintRectAndCorrelationId([in] Microsoft.UI.Xaml.Hosting.XamlSourceFocusNavigationReason reason, [in] Windows.Foundation.Rect hintRect, [in] GUID correlationId, [out] [retval] Microsoft.UI.Xaml.Hosting.XamlSourceFocusNavigationRequest** value);
                }

                [contract(Microsoft.UI.Xaml.Hosting.HostingContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Hosting.XamlSourceFocusNavigationResult)]
                [uuid(D6BF378E-2AAC-5E5B-AC8A-6C5D9A4C1CB8)]
                interface IXamlSourceFocusNavigationResult : IInspectable
                {
                    [propget] HRESULT WasFocusMoved([out] [retval] boolean* value);
                }

                [contract(Microsoft.UI.Xaml.Hosting.HostingContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Hosting.XamlSourceFocusNavigationResult)]
                [uuid(F533F53B-5C00-5C88-9A41-3888CB86E495)]
                interface IXamlSourceFocusNavigationResultFactory : IInspectable
                {
                    HRESULT CreateInstance([in] boolean focusMoved, [out] [retval] Microsoft.UI.Xaml.Hosting.XamlSourceFocusNavigationResult** value);
                }

                [composable(Microsoft.UI.Xaml.Hosting.IDesktopWindowXamlSourceFactory, public, Microsoft.UI.Xaml.Hosting.HostingContract, 1.0)]
                [contract(Microsoft.UI.Xaml.Hosting.HostingContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass DesktopWindowXamlSource
                {
                    [default] interface Microsoft.UI.Xaml.Hosting.IDesktopWindowXamlSource;
                    [contract(Microsoft.UI.Xaml.Hosting.HostingContract, 1.0)] interface Windows.Foundation.IClosable;
                }

                [contract(Microsoft.UI.Xaml.Hosting.HostingContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass DesktopWindowXamlSourceGotFocusEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Hosting.IDesktopWindowXamlSourceGotFocusEventArgs;
                }

                [contract(Microsoft.UI.Xaml.Hosting.HostingContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass DesktopWindowXamlSourceTakeFocusRequestedEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Hosting.IDesktopWindowXamlSourceTakeFocusRequestedEventArgs;
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Hosting.IElementCompositionPreviewStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass ElementCompositionPreview
                {
                    [default] interface Microsoft.UI.Xaml.Hosting.IElementCompositionPreview;
                }

                [contract(Microsoft.UI.Xaml.Hosting.HostingContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Hosting.IWindowsXamlManagerStatics, Microsoft.UI.Xaml.Hosting.HostingContract, 1.0)]
                [threading(both)]
                runtimeclass WindowsXamlManager
                {
                    [default] interface Microsoft.UI.Xaml.Hosting.IWindowsXamlManager;
                    [contract(Microsoft.UI.Xaml.Hosting.HostingContract, 1.0)] interface Windows.Foundation.IClosable;
                }

                [activatable(Microsoft.UI.Xaml.PrivateApiContract, 1.0)]
                [contract(Microsoft.UI.Xaml.PrivateApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Hosting.IXamlIslandStatics, Microsoft.UI.Xaml.PrivateApiContract, 1.0)]
                [threading(both)]
                runtimeclass XamlIsland : Microsoft.UI.Xaml.Controls.Panel
                {
                    [default] interface Microsoft.UI.Xaml.Hosting.IXamlIsland;
                }

                [activatable(Microsoft.UI.Xaml.Hosting.IXamlSourceFocusNavigationRequestFactory, Microsoft.UI.Xaml.Hosting.HostingContract, 1.0)]
                [contract(Microsoft.UI.Xaml.Hosting.HostingContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass XamlSourceFocusNavigationRequest
                {
                    [default] interface Microsoft.UI.Xaml.Hosting.IXamlSourceFocusNavigationRequest;
                }

                [activatable(Microsoft.UI.Xaml.Hosting.IXamlSourceFocusNavigationResultFactory, Microsoft.UI.Xaml.Hosting.HostingContract, 1.0)]
                [contract(Microsoft.UI.Xaml.Hosting.HostingContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass XamlSourceFocusNavigationResult
                {
                    [default] interface Microsoft.UI.Xaml.Hosting.IXamlSourceFocusNavigationResult;
                }
            }
        }
    }
}
