//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "windowscontracts.idl";
import "Windows.Foundation.idl";
import "Microsoft.UI.Xaml.idl";

// Forward Declare
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            runtimeclass DependencyProperty;

            apicontract WinUIContract;
        }
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Media
            {
                namespace Media3D
                {
                    typedef struct Matrix3D Matrix3D;

                    interface ICompositeTransform3D;

                    interface ICompositeTransform3DStatics;

                    interface IMatrix3DHelper;

                    interface IMatrix3DHelperStatics;

                    interface IPerspectiveTransform3D;

                    interface IPerspectiveTransform3DStatics;

                    interface ITransform3D;

                    interface ITransform3DFactory;

                    runtimeclass CompositeTransform3D;

                    runtimeclass Matrix3DHelper;

                    runtimeclass PerspectiveTransform3D;

                    runtimeclass Transform3D;
                }
            }
        }
    }
}

// Generic instantiations

// Type definition
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Media
            {
                namespace Media3D
                {
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    struct Matrix3D
                    {
                        DOUBLE M11;
                        DOUBLE M12;
                        DOUBLE M13;
                        DOUBLE M14;
                        DOUBLE M21;
                        DOUBLE M22;
                        DOUBLE M23;
                        DOUBLE M24;
                        DOUBLE M31;
                        DOUBLE M32;
                        DOUBLE M33;
                        DOUBLE M34;
                        DOUBLE OffsetX;
                        DOUBLE OffsetY;
                        DOUBLE OffsetZ;
                        DOUBLE M44;
                    };

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D)]
                    [uuid(CBAF163F-C254-5DCF-8AE4-40E21CE1B4CA)]
                    interface ICompositeTransform3D : IInspectable
                    {
                        [propget] HRESULT CenterX([out] [retval] DOUBLE* value);
                        [propput] HRESULT CenterX([in] DOUBLE value);
                        [propget] HRESULT CenterY([out] [retval] DOUBLE* value);
                        [propput] HRESULT CenterY([in] DOUBLE value);
                        [propget] HRESULT CenterZ([out] [retval] DOUBLE* value);
                        [propput] HRESULT CenterZ([in] DOUBLE value);
                        [propget] HRESULT RotationX([out] [retval] DOUBLE* value);
                        [propput] HRESULT RotationX([in] DOUBLE value);
                        [propget] HRESULT RotationY([out] [retval] DOUBLE* value);
                        [propput] HRESULT RotationY([in] DOUBLE value);
                        [propget] HRESULT RotationZ([out] [retval] DOUBLE* value);
                        [propput] HRESULT RotationZ([in] DOUBLE value);
                        [propget] HRESULT ScaleX([out] [retval] DOUBLE* value);
                        [propput] HRESULT ScaleX([in] DOUBLE value);
                        [propget] HRESULT ScaleY([out] [retval] DOUBLE* value);
                        [propput] HRESULT ScaleY([in] DOUBLE value);
                        [propget] HRESULT ScaleZ([out] [retval] DOUBLE* value);
                        [propput] HRESULT ScaleZ([in] DOUBLE value);
                        [propget] HRESULT TranslateX([out] [retval] DOUBLE* value);
                        [propput] HRESULT TranslateX([in] DOUBLE value);
                        [propget] HRESULT TranslateY([out] [retval] DOUBLE* value);
                        [propput] HRESULT TranslateY([in] DOUBLE value);
                        [propget] HRESULT TranslateZ([out] [retval] DOUBLE* value);
                        [propput] HRESULT TranslateZ([in] DOUBLE value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Media3D.CompositeTransform3D)]
                    [uuid(B64D4181-6988-5D46-858A-224DB7089DC4)]
                    interface ICompositeTransform3DStatics : IInspectable
                    {
                        [propget] HRESULT CenterXProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT CenterYProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT CenterZProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT RotationXProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT RotationYProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT RotationZProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ScaleXProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ScaleYProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ScaleZProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT TranslateXProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT TranslateYProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT TranslateZProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Media3D.Matrix3DHelper)]
                    [uuid(D2909BE1-9C28-5B38-B63C-88E838644533)]
                    interface IMatrix3DHelper : IInspectable
                    {
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Media3D.Matrix3DHelper)]
                    [uuid(930E447B-265C-5DED-9E64-57B8933C55C3)]
                    interface IMatrix3DHelperStatics : IInspectable
                    {
                        [propget] HRESULT Identity([out] [retval] Microsoft.UI.Xaml.Media.Media3D.Matrix3D* value);
                        HRESULT Multiply([in] Microsoft.UI.Xaml.Media.Media3D.Matrix3D matrix1, [in] Microsoft.UI.Xaml.Media.Media3D.Matrix3D matrix2, [out] [retval] Microsoft.UI.Xaml.Media.Media3D.Matrix3D* result);
                        HRESULT FromElements([in] DOUBLE m11, [in] DOUBLE m12, [in] DOUBLE m13, [in] DOUBLE m14, [in] DOUBLE m21, [in] DOUBLE m22, [in] DOUBLE m23, [in] DOUBLE m24, [in] DOUBLE m31, [in] DOUBLE m32, [in] DOUBLE m33, [in] DOUBLE m34, [in] DOUBLE offsetX, [in] DOUBLE offsetY, [in] DOUBLE offsetZ, [in] DOUBLE m44, [out] [retval] Microsoft.UI.Xaml.Media.Media3D.Matrix3D* result);
                        HRESULT GetHasInverse([in] Microsoft.UI.Xaml.Media.Media3D.Matrix3D target, [out] [retval] boolean* result);
                        HRESULT GetIsIdentity([in] Microsoft.UI.Xaml.Media.Media3D.Matrix3D target, [out] [retval] boolean* result);
                        HRESULT Invert([in] Microsoft.UI.Xaml.Media.Media3D.Matrix3D target, [out] [retval] Microsoft.UI.Xaml.Media.Media3D.Matrix3D* result);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Media3D.PerspectiveTransform3D)]
                    [uuid(4006CC46-684E-54EA-A421-DAE5B0556B85)]
                    interface IPerspectiveTransform3D : IInspectable
                    {
                        [propget] HRESULT Depth([out] [retval] DOUBLE* value);
                        [propput] HRESULT Depth([in] DOUBLE value);
                        [propget] HRESULT OffsetX([out] [retval] DOUBLE* value);
                        [propput] HRESULT OffsetX([in] DOUBLE value);
                        [propget] HRESULT OffsetY([out] [retval] DOUBLE* value);
                        [propput] HRESULT OffsetY([in] DOUBLE value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Media3D.PerspectiveTransform3D)]
                    [uuid(3B16AA8D-0EE2-5D46-A723-DC8E5C1C0B19)]
                    interface IPerspectiveTransform3DStatics : IInspectable
                    {
                        [propget] HRESULT DepthProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT OffsetXProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT OffsetYProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Media3D.Transform3D)]
                    [uuid(AFEA4941-2E49-533C-9F8F-2C126EF9893A)]
                    interface ITransform3D : IInspectable
                    {
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Media3D.Transform3D)]
                    [uuid(9BCCE0A1-10AC-5319-BDF1-548D2E5AE504)]
                    interface ITransform3DFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Media.Media3D.Transform3D** value);
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Media3D.ICompositeTransform3DStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass CompositeTransform3D : Microsoft.UI.Xaml.Media.Media3D.Transform3D
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Media3D.ICompositeTransform3D;
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Media3D.IMatrix3DHelperStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass Matrix3DHelper
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Media3D.IMatrix3DHelper;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Media3D.IPerspectiveTransform3DStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass PerspectiveTransform3D : Microsoft.UI.Xaml.Media.Media3D.Transform3D
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Media3D.IPerspectiveTransform3D;
                    }

                    [composable(Microsoft.UI.Xaml.Media.Media3D.ITransform3DFactory, protected, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    runtimeclass Transform3D : Microsoft.UI.Xaml.DependencyObject
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Media3D.ITransform3D;
                    }
                }
            }
        }
    }
}
