//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "windowscontracts.idl";
import "Windows.Foundation.idl";
import "Microsoft.Foundation.idl";
import "Microsoft.UI.Composition.idl";
import "Microsoft.UI.Input.Experimental.idl";
import "Windows.Foundation.Numerics.idl";

// Forward Declare
namespace Microsoft
{
    namespace Foundation
    {
        apicontract LiftedContract;
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Composition
        {
            runtimeclass CompositionAnimation;

            runtimeclass Compositor;

            runtimeclass ExpressionAnimation;

            interface IVisualElement;

            runtimeclass ScalarNaturalMotionAnimation;

            runtimeclass Vector2NaturalMotionAnimation;

            runtimeclass Visual;
        }
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Input
        {
            namespace Experimental
            {
                runtimeclass ExpPointerPoint;
            }
        }
    }
}
namespace Windows
{
    namespace Foundation
    {
        namespace Numerics
        {
            typedef struct Vector3 Vector3;
        }
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Composition
        {
            namespace Interactions
            {
                typedef enum InteractionBindingAxisModes InteractionBindingAxisModes;

                typedef enum InteractionChainingMode InteractionChainingMode;

                typedef enum InteractionSourceMode InteractionSourceMode;

                typedef enum InteractionSourceRedirectionMode InteractionSourceRedirectionMode;

                typedef enum InteractionTrackerClampingOption InteractionTrackerClampingOption;

                typedef enum InteractionTrackerPositionUpdateOption InteractionTrackerPositionUpdateOption;

                typedef enum VisualInteractionSourceRedirectionMode VisualInteractionSourceRedirectionMode;

                interface ICompositionConditionalValue;

                interface ICompositionConditionalValueStatics;

                interface ICompositionInteractionSource;

                interface ICompositionInteractionSourceCollection;

                interface IInteractionSourceConfiguration;

                interface IInteractionTracker;

                interface IInteractionTracker2;

                interface IInteractionTracker3;

                interface IInteractionTracker4;

                interface IInteractionTracker5;

                interface IInteractionTrackerCustomAnimationStateEnteredArgs;

                interface IInteractionTrackerCustomAnimationStateEnteredArgs2;

                interface IInteractionTrackerIdleStateEnteredArgs;

                interface IInteractionTrackerIdleStateEnteredArgs2;

                interface IInteractionTrackerInertiaModifier;

                interface IInteractionTrackerInertiaModifierFactory;

                interface IInteractionTrackerInertiaMotion;

                interface IInteractionTrackerInertiaMotionStatics;

                interface IInteractionTrackerInertiaNaturalMotion;

                interface IInteractionTrackerInertiaNaturalMotionStatics;

                interface IInteractionTrackerInertiaRestingValue;

                interface IInteractionTrackerInertiaRestingValueStatics;

                interface IInteractionTrackerInertiaStateEnteredArgs;

                interface IInteractionTrackerInertiaStateEnteredArgs2;

                interface IInteractionTrackerInertiaStateEnteredArgs3;

                interface IInteractionTrackerInteractingStateEnteredArgs;

                interface IInteractionTrackerInteractingStateEnteredArgs2;

                interface IInteractionTrackerOwner;

                interface IInteractionTrackerRequestIgnoredArgs;

                interface IInteractionTrackerStatics;

                interface IInteractionTrackerStatics2;

                interface IInteractionTrackerValuesChangedArgs;

                interface IInteractionTrackerVector2InertiaModifier;

                interface IInteractionTrackerVector2InertiaModifierFactory;

                interface IInteractionTrackerVector2InertiaNaturalMotion;

                interface IInteractionTrackerVector2InertiaNaturalMotionStatics;

                interface IVisualInteractionSource;

                interface IVisualInteractionSource2;

                interface IVisualInteractionSource3;

                interface IVisualInteractionSourceObjectFactory;

                interface IVisualInteractionSourceStatics;

                interface IVisualInteractionSourceStatics2;

                runtimeclass CompositionConditionalValue;

                runtimeclass CompositionInteractionSourceCollection;

                runtimeclass InteractionSourceConfiguration;

                runtimeclass InteractionTracker;

                runtimeclass InteractionTrackerCustomAnimationStateEnteredArgs;

                runtimeclass InteractionTrackerIdleStateEnteredArgs;

                runtimeclass InteractionTrackerInertiaModifier;

                runtimeclass InteractionTrackerInertiaMotion;

                runtimeclass InteractionTrackerInertiaNaturalMotion;

                runtimeclass InteractionTrackerInertiaRestingValue;

                runtimeclass InteractionTrackerInertiaStateEnteredArgs;

                runtimeclass InteractionTrackerInteractingStateEnteredArgs;

                runtimeclass InteractionTrackerRequestIgnoredArgs;

                runtimeclass InteractionTrackerValuesChangedArgs;

                runtimeclass InteractionTrackerVector2InertiaModifier;

                runtimeclass InteractionTrackerVector2InertiaNaturalMotion;

                runtimeclass VisualInteractionSource;
            }
        }
    }
}

// Generic instantiations
namespace Microsoft
{
    namespace UI
    {
        namespace Composition
        {
            namespace Interactions
            {
                declare
                {
                    interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Composition.Interactions.CompositionConditionalValue*>;

                    interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Composition.Interactions.ICompositionInteractionSource*>;

                    interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaModifier*>;

                    interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Composition.Interactions.InteractionTrackerVector2InertiaModifier*>;

                    interface Windows.Foundation.Collections.IIterator<Microsoft.UI.Composition.Interactions.CompositionConditionalValue*>;

                    interface Windows.Foundation.Collections.IIterator<Microsoft.UI.Composition.Interactions.ICompositionInteractionSource*>;

                    interface Windows.Foundation.Collections.IIterator<Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaModifier*>;

                    interface Windows.Foundation.Collections.IIterator<Microsoft.UI.Composition.Interactions.InteractionTrackerVector2InertiaModifier*>;
                }
            }
        }
    }
}

// Type definition
namespace Microsoft
{
    namespace UI
    {
        namespace Composition
        {
            namespace Interactions
            {
                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [flags]
                enum InteractionBindingAxisModes
                {
                    None      = 0x0,
                    PositionX = 0x1,
                    PositionY = 0x2,
                    Scale     = 0x4
                };

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                enum InteractionChainingMode
                {
                    Auto   = 0,
                    Always = 1,
                    Never  = 2
                };

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                enum InteractionSourceMode
                {
                    Disabled              = 0,
                    EnabledWithInertia    = 1,
                    EnabledWithoutInertia = 2
                };

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                enum InteractionSourceRedirectionMode
                {
                    Disabled = 0,
                    Enabled  = 1
                };

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                enum InteractionTrackerClampingOption
                {
                    Auto     = 0,
                    Disabled = 1
                };

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                enum InteractionTrackerPositionUpdateOption
                {
                    Default                         = 0,
                    AllowActiveCustomScaleAnimation = 1
                };

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                enum VisualInteractionSourceRedirectionMode
                {
                    Off                            = 0,
                    CapableTouchpadOnly            = 1,
                    [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                    PointerWheelOnly               = 2,
                    [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                    CapableTouchpadAndPointerWheel = 3
                };

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [exclusiveto(Microsoft.UI.Composition.Interactions.CompositionConditionalValue)]
                [uuid(3743DDA0-FBE2-5ECF-9E80-4638A011F707)]
                interface ICompositionConditionalValue : IInspectable
                {
                    [propget] HRESULT Condition([out] [retval] Microsoft.UI.Composition.ExpressionAnimation** value);
                    [propput] HRESULT Condition([in] Microsoft.UI.Composition.ExpressionAnimation* value);
                    [propget] HRESULT Value([out] [retval] Microsoft.UI.Composition.ExpressionAnimation** value);
                    [propput] HRESULT Value([in] Microsoft.UI.Composition.ExpressionAnimation* value);
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [exclusiveto(Microsoft.UI.Composition.Interactions.CompositionConditionalValue)]
                [uuid(DF133C1F-A185-536C-B54B-8F369212A581)]
                interface ICompositionConditionalValueStatics : IInspectable
                {
                    HRESULT Create([in] Microsoft.UI.Composition.Compositor* compositor, [out] [retval] Microsoft.UI.Composition.Interactions.CompositionConditionalValue** result);
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [uuid(711C72C0-C406-4A12-859B-B44F651AF046)]
                interface ICompositionInteractionSource : IInspectable
                {
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [exclusiveto(Microsoft.UI.Composition.Interactions.CompositionInteractionSourceCollection)]
                [uuid(9AA1B86B-B002-5E2E-BB2B-0E2C547445E1)]
                interface ICompositionInteractionSourceCollection : IInspectable
                {
                    [propget] HRESULT Count([out] [retval] INT32* value);
                    HRESULT Add([in] Microsoft.UI.Composition.Interactions.ICompositionInteractionSource* value);
                    HRESULT Remove([in] Microsoft.UI.Composition.Interactions.ICompositionInteractionSource* value);
                    HRESULT RemoveAll();
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [exclusiveto(Microsoft.UI.Composition.Interactions.InteractionSourceConfiguration)]
                [uuid(099E0124-DADF-5BC6-A895-90387657550F)]
                interface IInteractionSourceConfiguration : IInspectable
                {
                    [propget] HRESULT PositionXSourceMode([out] [retval] Microsoft.UI.Composition.Interactions.InteractionSourceRedirectionMode* value);
                    [propput] HRESULT PositionXSourceMode([in] Microsoft.UI.Composition.Interactions.InteractionSourceRedirectionMode value);
                    [propget] HRESULT PositionYSourceMode([out] [retval] Microsoft.UI.Composition.Interactions.InteractionSourceRedirectionMode* value);
                    [propput] HRESULT PositionYSourceMode([in] Microsoft.UI.Composition.Interactions.InteractionSourceRedirectionMode value);
                    [propget] HRESULT ScaleSourceMode([out] [retval] Microsoft.UI.Composition.Interactions.InteractionSourceRedirectionMode* value);
                    [propput] HRESULT ScaleSourceMode([in] Microsoft.UI.Composition.Interactions.InteractionSourceRedirectionMode value);
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [exclusiveto(Microsoft.UI.Composition.Interactions.InteractionTracker)]
                [uuid(02D8EC1F-8F04-505E-BD1E-47B2A204DE51)]
                interface IInteractionTracker : IInspectable
                {
                    [propget] HRESULT InteractionSources([out] [retval] Microsoft.UI.Composition.Interactions.CompositionInteractionSourceCollection** value);
                    [propget] HRESULT IsPositionRoundingSuggested([out] [retval] boolean* value);
                    [propget] HRESULT MaxPosition([out] [retval] Windows.Foundation.Numerics.Vector3* value);
                    [propput] HRESULT MaxPosition([in] Windows.Foundation.Numerics.Vector3 value);
                    [propget] HRESULT MaxScale([out] [retval] FLOAT* value);
                    [propput] HRESULT MaxScale([in] FLOAT value);
                    [propget] HRESULT MinPosition([out] [retval] Windows.Foundation.Numerics.Vector3* value);
                    [propput] HRESULT MinPosition([in] Windows.Foundation.Numerics.Vector3 value);
                    [propget] HRESULT MinScale([out] [retval] FLOAT* value);
                    [propput] HRESULT MinScale([in] FLOAT value);
                    [propget] HRESULT NaturalRestingPosition([out] [retval] Windows.Foundation.Numerics.Vector3* value);
                    [propget] HRESULT NaturalRestingScale([out] [retval] FLOAT* value);
                    [propget] HRESULT Owner([out] [retval] Microsoft.UI.Composition.Interactions.IInteractionTrackerOwner** value);
                    [propget] HRESULT Position([out] [retval] Windows.Foundation.Numerics.Vector3* value);
                    [propget] HRESULT PositionInertiaDecayRate([out] [retval] Windows.Foundation.IReference<Windows.Foundation.Numerics.Vector3>** value);
                    [propput] HRESULT PositionInertiaDecayRate([in] Windows.Foundation.IReference<Windows.Foundation.Numerics.Vector3>* value);
                    [propget] HRESULT PositionVelocityInPixelsPerSecond([out] [retval] Windows.Foundation.Numerics.Vector3* value);
                    [propget] HRESULT Scale([out] [retval] FLOAT* value);
                    [propget] HRESULT ScaleInertiaDecayRate([out] [retval] Windows.Foundation.IReference<FLOAT>** value);
                    [propput] HRESULT ScaleInertiaDecayRate([in] Windows.Foundation.IReference<FLOAT>* value);
                    [propget] HRESULT ScaleVelocityInPercentPerSecond([out] [retval] FLOAT* value);
                    HRESULT AdjustPositionXIfGreaterThanThreshold([in] FLOAT adjustment, [in] FLOAT positionThreshold);
                    HRESULT AdjustPositionYIfGreaterThanThreshold([in] FLOAT adjustment, [in] FLOAT positionThreshold);
                    HRESULT ConfigurePositionXInertiaModifiers([in] Windows.Foundation.Collections.IIterable<Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaModifier*>* modifiers);
                    HRESULT ConfigurePositionYInertiaModifiers([in] Windows.Foundation.Collections.IIterable<Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaModifier*>* modifiers);
                    HRESULT ConfigureScaleInertiaModifiers([in] Windows.Foundation.Collections.IIterable<Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaModifier*>* modifiers);
                    HRESULT TryUpdatePosition([in] Windows.Foundation.Numerics.Vector3 value, [out] [retval] INT32* result);
                    HRESULT TryUpdatePositionBy([in] Windows.Foundation.Numerics.Vector3 amount, [out] [retval] INT32* result);
                    HRESULT TryUpdatePositionWithAnimation([in] Microsoft.UI.Composition.CompositionAnimation* animation, [out] [retval] INT32* result);
                    HRESULT TryUpdatePositionWithAdditionalVelocity([in] Windows.Foundation.Numerics.Vector3 velocityInPixelsPerSecond, [out] [retval] INT32* result);
                    HRESULT TryUpdateScale([in] FLOAT value, [in] Windows.Foundation.Numerics.Vector3 centerPoint, [out] [retval] INT32* result);
                    HRESULT TryUpdateScaleWithAnimation([in] Microsoft.UI.Composition.CompositionAnimation* animation, [in] Windows.Foundation.Numerics.Vector3 centerPoint, [out] [retval] INT32* result);
                    HRESULT TryUpdateScaleWithAdditionalVelocity([in] FLOAT velocityInPercentPerSecond, [in] Windows.Foundation.Numerics.Vector3 centerPoint, [out] [retval] INT32* result);
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [exclusiveto(Microsoft.UI.Composition.Interactions.InteractionTracker)]
                [uuid(396D7FB1-2FAD-5508-8591-4FF0DC5A7484)]
                interface IInteractionTracker2 : IInspectable
                {
                    HRESULT ConfigureCenterPointXInertiaModifiers([in] Windows.Foundation.Collections.IIterable<Microsoft.UI.Composition.Interactions.CompositionConditionalValue*>* conditionalValues);
                    HRESULT ConfigureCenterPointYInertiaModifiers([in] Windows.Foundation.Collections.IIterable<Microsoft.UI.Composition.Interactions.CompositionConditionalValue*>* conditionalValues);
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [exclusiveto(Microsoft.UI.Composition.Interactions.InteractionTracker)]
                [uuid(239752CF-266C-5ACB-ACC3-B3E3ECAF4D3F)]
                interface IInteractionTracker3 : IInspectable
                {
                    HRESULT ConfigureVector2PositionInertiaModifiers([in] Windows.Foundation.Collections.IIterable<Microsoft.UI.Composition.Interactions.InteractionTrackerVector2InertiaModifier*>* modifiers);
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [exclusiveto(Microsoft.UI.Composition.Interactions.InteractionTracker)]
                [uuid(A9A9CE02-53C9-5690-A575-F340B7C2FDF2)]
                interface IInteractionTracker4 : IInspectable
                {
                    [overload("TryUpdatePosition")] HRESULT TryUpdatePositionWithOption([in] Windows.Foundation.Numerics.Vector3 value, [in] Microsoft.UI.Composition.Interactions.InteractionTrackerClampingOption option, [out] [retval] INT32* result);
                    [overload("TryUpdatePositionBy")] HRESULT TryUpdatePositionByWithOption([in] Windows.Foundation.Numerics.Vector3 amount, [in] Microsoft.UI.Composition.Interactions.InteractionTrackerClampingOption option, [out] [retval] INT32* result);
                    [propget] HRESULT IsInertiaFromImpulse([out] [retval] boolean* value);
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [exclusiveto(Microsoft.UI.Composition.Interactions.InteractionTracker)]
                [uuid(DBFCD333-C3BF-5057-A45E-25EDF06EBD8F)]
                interface IInteractionTracker5 : IInspectable
                {
                    [overload("TryUpdatePosition")] HRESULT TryUpdatePositionWithOption([in] Windows.Foundation.Numerics.Vector3 value, [in] Microsoft.UI.Composition.Interactions.InteractionTrackerClampingOption option, [in] Microsoft.UI.Composition.Interactions.InteractionTrackerPositionUpdateOption posUpdateOption, [out] [retval] INT32* result);
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [exclusiveto(Microsoft.UI.Composition.Interactions.InteractionTrackerCustomAnimationStateEnteredArgs)]
                [uuid(7464035C-CFCE-56DA-9472-420F276BD0A5)]
                interface IInteractionTrackerCustomAnimationStateEnteredArgs : IInspectable
                {
                    [propget] HRESULT RequestId([out] [retval] INT32* value);
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [exclusiveto(Microsoft.UI.Composition.Interactions.InteractionTrackerCustomAnimationStateEnteredArgs)]
                [uuid(06B99FBC-D6A8-5AE3-88B8-E91621BECBD6)]
                interface IInteractionTrackerCustomAnimationStateEnteredArgs2 : IInspectable
                {
                    [propget] HRESULT IsFromBinding([out] [retval] boolean* value);
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [exclusiveto(Microsoft.UI.Composition.Interactions.InteractionTrackerIdleStateEnteredArgs)]
                [uuid(199094AB-15FD-539C-97B8-964A8196F777)]
                interface IInteractionTrackerIdleStateEnteredArgs : IInspectable
                {
                    [propget] HRESULT RequestId([out] [retval] INT32* value);
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [exclusiveto(Microsoft.UI.Composition.Interactions.InteractionTrackerIdleStateEnteredArgs)]
                [uuid(4EB213C0-931C-5164-8965-11C0186D3390)]
                interface IInteractionTrackerIdleStateEnteredArgs2 : IInspectable
                {
                    [propget] HRESULT IsFromBinding([out] [retval] boolean* value);
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [exclusiveto(Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaModifier)]
                [uuid(4D3A0C6B-C508-5029-A47A-CBF64636F010)]
                interface IInteractionTrackerInertiaModifier : IInspectable
                {
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [exclusiveto(Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaModifier)]
                [uuid(6DEE5B33-0B5A-57B1-8537-93D4FD038F9F)]
                interface IInteractionTrackerInertiaModifierFactory : IInspectable
                {
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [exclusiveto(Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaMotion)]
                [uuid(91F662C0-3141-5B5E-862F-CFC60BEE8CD6)]
                interface IInteractionTrackerInertiaMotion : IInspectable
                {
                    [propget] HRESULT Condition([out] [retval] Microsoft.UI.Composition.ExpressionAnimation** value);
                    [propput] HRESULT Condition([in] Microsoft.UI.Composition.ExpressionAnimation* value);
                    [propget] HRESULT Motion([out] [retval] Microsoft.UI.Composition.ExpressionAnimation** value);
                    [propput] HRESULT Motion([in] Microsoft.UI.Composition.ExpressionAnimation* value);
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [exclusiveto(Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaMotion)]
                [uuid(B0185A4F-0059-52C6-A660-9AED0C44FF7D)]
                interface IInteractionTrackerInertiaMotionStatics : IInspectable
                {
                    HRESULT Create([in] Microsoft.UI.Composition.Compositor* compositor, [out] [retval] Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaMotion** result);
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [exclusiveto(Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaNaturalMotion)]
                [uuid(8C7482E0-185D-56B1-B67F-FCA4FCD13CD2)]
                interface IInteractionTrackerInertiaNaturalMotion : IInspectable
                {
                    [propget] HRESULT Condition([out] [retval] Microsoft.UI.Composition.ExpressionAnimation** value);
                    [propput] HRESULT Condition([in] Microsoft.UI.Composition.ExpressionAnimation* value);
                    [propget] HRESULT NaturalMotion([out] [retval] Microsoft.UI.Composition.ScalarNaturalMotionAnimation** value);
                    [propput] HRESULT NaturalMotion([in] Microsoft.UI.Composition.ScalarNaturalMotionAnimation* value);
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [exclusiveto(Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaNaturalMotion)]
                [uuid(860EC143-F165-5298-ABF2-47369DD07F10)]
                interface IInteractionTrackerInertiaNaturalMotionStatics : IInspectable
                {
                    HRESULT Create([in] Microsoft.UI.Composition.Compositor* compositor, [out] [retval] Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaNaturalMotion** result);
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [exclusiveto(Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue)]
                [uuid(1A2B20CD-3371-53FF-A560-F4847B467D73)]
                interface IInteractionTrackerInertiaRestingValue : IInspectable
                {
                    [propget] HRESULT Condition([out] [retval] Microsoft.UI.Composition.ExpressionAnimation** value);
                    [propput] HRESULT Condition([in] Microsoft.UI.Composition.ExpressionAnimation* value);
                    [propget] HRESULT RestingValue([out] [retval] Microsoft.UI.Composition.ExpressionAnimation** value);
                    [propput] HRESULT RestingValue([in] Microsoft.UI.Composition.ExpressionAnimation* value);
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [exclusiveto(Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue)]
                [uuid(CF0F0414-7FDF-5284-AEEF-28B71B62AA4F)]
                interface IInteractionTrackerInertiaRestingValueStatics : IInspectable
                {
                    HRESULT Create([in] Microsoft.UI.Composition.Compositor* compositor, [out] [retval] Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaRestingValue** result);
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [exclusiveto(Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaStateEnteredArgs)]
                [uuid(5B76C949-A4D0-5C9D-9292-7013AE9656C7)]
                interface IInteractionTrackerInertiaStateEnteredArgs : IInspectable
                {
                    [propget] HRESULT ModifiedRestingPosition([out] [retval] Windows.Foundation.IReference<Windows.Foundation.Numerics.Vector3>** value);
                    [propget] HRESULT ModifiedRestingScale([out] [retval] Windows.Foundation.IReference<FLOAT>** value);
                    [propget] HRESULT NaturalRestingPosition([out] [retval] Windows.Foundation.Numerics.Vector3* value);
                    [propget] HRESULT NaturalRestingScale([out] [retval] FLOAT* value);
                    [propget] HRESULT PositionVelocityInPixelsPerSecond([out] [retval] Windows.Foundation.Numerics.Vector3* value);
                    [propget] HRESULT RequestId([out] [retval] INT32* value);
                    [propget] HRESULT ScaleVelocityInPercentPerSecond([out] [retval] FLOAT* value);
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [exclusiveto(Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaStateEnteredArgs)]
                [uuid(C42D7E8F-7199-57A9-8AEC-8727552B13E6)]
                interface IInteractionTrackerInertiaStateEnteredArgs2 : IInspectable
                {
                    [propget] HRESULT IsInertiaFromImpulse([out] [retval] boolean* value);
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [exclusiveto(Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaStateEnteredArgs)]
                [uuid(CE726CA0-1C04-531B-9951-4AEC996952E4)]
                interface IInteractionTrackerInertiaStateEnteredArgs3 : IInspectable
                {
                    [propget] HRESULT IsFromBinding([out] [retval] boolean* value);
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [exclusiveto(Microsoft.UI.Composition.Interactions.InteractionTrackerInteractingStateEnteredArgs)]
                [uuid(70D29B84-0931-5F17-A8A1-82F8F8782532)]
                interface IInteractionTrackerInteractingStateEnteredArgs : IInspectable
                {
                    [propget] HRESULT RequestId([out] [retval] INT32* value);
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [exclusiveto(Microsoft.UI.Composition.Interactions.InteractionTrackerInteractingStateEnteredArgs)]
                [uuid(2F1FF38D-2F51-5CEB-8D09-BDA1519F9342)]
                interface IInteractionTrackerInteractingStateEnteredArgs2 : IInspectable
                {
                    [propget] HRESULT IsFromBinding([out] [retval] boolean* value);
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [uuid(8869779D-1D2A-5816-836A-68A910507D87)]
                interface IInteractionTrackerOwner : IInspectable
                {
                    HRESULT CustomAnimationStateEntered([in] Microsoft.UI.Composition.Interactions.InteractionTracker* sender, [in] Microsoft.UI.Composition.Interactions.InteractionTrackerCustomAnimationStateEnteredArgs* args);
                    HRESULT IdleStateEntered([in] Microsoft.UI.Composition.Interactions.InteractionTracker* sender, [in] Microsoft.UI.Composition.Interactions.InteractionTrackerIdleStateEnteredArgs* args);
                    HRESULT InertiaStateEntered([in] Microsoft.UI.Composition.Interactions.InteractionTracker* sender, [in] Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaStateEnteredArgs* args);
                    HRESULT InteractingStateEntered([in] Microsoft.UI.Composition.Interactions.InteractionTracker* sender, [in] Microsoft.UI.Composition.Interactions.InteractionTrackerInteractingStateEnteredArgs* args);
                    HRESULT RequestIgnored([in] Microsoft.UI.Composition.Interactions.InteractionTracker* sender, [in] Microsoft.UI.Composition.Interactions.InteractionTrackerRequestIgnoredArgs* args);
                    HRESULT ValuesChanged([in] Microsoft.UI.Composition.Interactions.InteractionTracker* sender, [in] Microsoft.UI.Composition.Interactions.InteractionTrackerValuesChangedArgs* args);
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [exclusiveto(Microsoft.UI.Composition.Interactions.InteractionTrackerRequestIgnoredArgs)]
                [uuid(C276205E-F7A5-5BA2-AD45-D12C3C339149)]
                interface IInteractionTrackerRequestIgnoredArgs : IInspectable
                {
                    [propget] HRESULT RequestId([out] [retval] INT32* value);
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [exclusiveto(Microsoft.UI.Composition.Interactions.InteractionTracker)]
                [uuid(7AC9867A-E16E-56EF-9809-F6E404240F50)]
                interface IInteractionTrackerStatics : IInspectable
                {
                    HRESULT Create([in] Microsoft.UI.Composition.Compositor* compositor, [out] [retval] Microsoft.UI.Composition.Interactions.InteractionTracker** result);
                    HRESULT CreateWithOwner([in] Microsoft.UI.Composition.Compositor* compositor, [in] Microsoft.UI.Composition.Interactions.IInteractionTrackerOwner* owner, [out] [retval] Microsoft.UI.Composition.Interactions.InteractionTracker** result);
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [exclusiveto(Microsoft.UI.Composition.Interactions.InteractionTracker)]
                [uuid(25658E4C-B99F-5108-AAB7-1CC44F11508B)]
                interface IInteractionTrackerStatics2 : IInspectable
                {
                    HRESULT SetBindingMode([in] Microsoft.UI.Composition.Interactions.InteractionTracker* boundTracker1, [in] Microsoft.UI.Composition.Interactions.InteractionTracker* boundTracker2, [in] Microsoft.UI.Composition.Interactions.InteractionBindingAxisModes axisMode);
                    HRESULT GetBindingMode([in] Microsoft.UI.Composition.Interactions.InteractionTracker* boundTracker1, [in] Microsoft.UI.Composition.Interactions.InteractionTracker* boundTracker2, [out] [retval] Microsoft.UI.Composition.Interactions.InteractionBindingAxisModes* result);
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [exclusiveto(Microsoft.UI.Composition.Interactions.InteractionTrackerValuesChangedArgs)]
                [uuid(9B495BED-1CF7-55C1-82B9-8022CBF3C766)]
                interface IInteractionTrackerValuesChangedArgs : IInspectable
                {
                    [propget] HRESULT Position([out] [retval] Windows.Foundation.Numerics.Vector3* value);
                    [propget] HRESULT RequestId([out] [retval] INT32* value);
                    [propget] HRESULT Scale([out] [retval] FLOAT* value);
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [exclusiveto(Microsoft.UI.Composition.Interactions.InteractionTrackerVector2InertiaModifier)]
                [uuid(4B8ED310-CB61-5F0A-B99A-940CDD2C42B1)]
                interface IInteractionTrackerVector2InertiaModifier : IInspectable
                {
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [exclusiveto(Microsoft.UI.Composition.Interactions.InteractionTrackerVector2InertiaModifier)]
                [uuid(1B3FD240-BA66-5296-B801-62A2A3606613)]
                interface IInteractionTrackerVector2InertiaModifierFactory : IInspectable
                {
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [exclusiveto(Microsoft.UI.Composition.Interactions.InteractionTrackerVector2InertiaNaturalMotion)]
                [uuid(097BA1A6-E077-52D1-86D3-38E3F6619DDF)]
                interface IInteractionTrackerVector2InertiaNaturalMotion : IInspectable
                {
                    [propget] HRESULT Condition([out] [retval] Microsoft.UI.Composition.ExpressionAnimation** value);
                    [propput] HRESULT Condition([in] Microsoft.UI.Composition.ExpressionAnimation* value);
                    [propget] HRESULT NaturalMotion([out] [retval] Microsoft.UI.Composition.Vector2NaturalMotionAnimation** value);
                    [propput] HRESULT NaturalMotion([in] Microsoft.UI.Composition.Vector2NaturalMotionAnimation* value);
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [exclusiveto(Microsoft.UI.Composition.Interactions.InteractionTrackerVector2InertiaNaturalMotion)]
                [uuid(CC24AB87-9131-5286-B3CE-1EF97E0974E6)]
                interface IInteractionTrackerVector2InertiaNaturalMotionStatics : IInspectable
                {
                    HRESULT Create([in] Microsoft.UI.Composition.Compositor* compositor, [out] [retval] Microsoft.UI.Composition.Interactions.InteractionTrackerVector2InertiaNaturalMotion** result);
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [exclusiveto(Microsoft.UI.Composition.Interactions.VisualInteractionSource)]
                [uuid(CFB7245C-35A6-577D-9572-D38B3A7BCDA4)]
                interface IVisualInteractionSource : IInspectable
                {
                    [propget] HRESULT IsPositionXRailsEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsPositionXRailsEnabled([in] boolean value);
                    [propget] HRESULT IsPositionYRailsEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsPositionYRailsEnabled([in] boolean value);
                    [propget] HRESULT ManipulationRedirectionMode([out] [retval] Microsoft.UI.Composition.Interactions.VisualInteractionSourceRedirectionMode* value);
                    [propput] HRESULT ManipulationRedirectionMode([in] Microsoft.UI.Composition.Interactions.VisualInteractionSourceRedirectionMode value);
                    [propget] HRESULT PositionXChainingMode([out] [retval] Microsoft.UI.Composition.Interactions.InteractionChainingMode* value);
                    [propput] HRESULT PositionXChainingMode([in] Microsoft.UI.Composition.Interactions.InteractionChainingMode value);
                    [propget] HRESULT PositionXSourceMode([out] [retval] Microsoft.UI.Composition.Interactions.InteractionSourceMode* value);
                    [propput] HRESULT PositionXSourceMode([in] Microsoft.UI.Composition.Interactions.InteractionSourceMode value);
                    [propget] HRESULT PositionYChainingMode([out] [retval] Microsoft.UI.Composition.Interactions.InteractionChainingMode* value);
                    [propput] HRESULT PositionYChainingMode([in] Microsoft.UI.Composition.Interactions.InteractionChainingMode value);
                    [propget] HRESULT PositionYSourceMode([out] [retval] Microsoft.UI.Composition.Interactions.InteractionSourceMode* value);
                    [propput] HRESULT PositionYSourceMode([in] Microsoft.UI.Composition.Interactions.InteractionSourceMode value);
                    [propget] HRESULT ScaleChainingMode([out] [retval] Microsoft.UI.Composition.Interactions.InteractionChainingMode* value);
                    [propput] HRESULT ScaleChainingMode([in] Microsoft.UI.Composition.Interactions.InteractionChainingMode value);
                    [propget] HRESULT ScaleSourceMode([out] [retval] Microsoft.UI.Composition.Interactions.InteractionSourceMode* value);
                    [propput] HRESULT ScaleSourceMode([in] Microsoft.UI.Composition.Interactions.InteractionSourceMode value);
                    [propget] HRESULT Source([out] [retval] Microsoft.UI.Composition.Visual** value);
                    HRESULT TryRedirectForManipulation([in] Microsoft.UI.Input.Experimental.ExpPointerPoint* pointerPoint);
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [exclusiveto(Microsoft.UI.Composition.Interactions.VisualInteractionSource)]
                [uuid(FF1132BA-DC0D-519E-BE49-BE301E52306A)]
                interface IVisualInteractionSource2 : IInspectable
                {
                    [propget] HRESULT DeltaPosition([out] [retval] Windows.Foundation.Numerics.Vector3* value);
                    [propget] HRESULT DeltaScale([out] [retval] FLOAT* value);
                    [propget] HRESULT Position([out] [retval] Windows.Foundation.Numerics.Vector3* value);
                    [propget] HRESULT PositionVelocity([out] [retval] Windows.Foundation.Numerics.Vector3* value);
                    [propget] HRESULT Scale([out] [retval] FLOAT* value);
                    [propget] HRESULT ScaleVelocity([out] [retval] FLOAT* value);
                    HRESULT ConfigureCenterPointXModifiers([in] Windows.Foundation.Collections.IIterable<Microsoft.UI.Composition.Interactions.CompositionConditionalValue*>* conditionalValues);
                    HRESULT ConfigureCenterPointYModifiers([in] Windows.Foundation.Collections.IIterable<Microsoft.UI.Composition.Interactions.CompositionConditionalValue*>* conditionalValues);
                    HRESULT ConfigureDeltaPositionXModifiers([in] Windows.Foundation.Collections.IIterable<Microsoft.UI.Composition.Interactions.CompositionConditionalValue*>* conditionalValues);
                    HRESULT ConfigureDeltaPositionYModifiers([in] Windows.Foundation.Collections.IIterable<Microsoft.UI.Composition.Interactions.CompositionConditionalValue*>* conditionalValues);
                    HRESULT ConfigureDeltaScaleModifiers([in] Windows.Foundation.Collections.IIterable<Microsoft.UI.Composition.Interactions.CompositionConditionalValue*>* conditionalValues);
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [exclusiveto(Microsoft.UI.Composition.Interactions.VisualInteractionSource)]
                [uuid(D523BD66-A05D-5417-8E07-84AE3CAF9752)]
                interface IVisualInteractionSource3 : IInspectable
                {
                    [propget] HRESULT PointerWheelConfig([out] [retval] Microsoft.UI.Composition.Interactions.InteractionSourceConfiguration** value);
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [exclusiveto(Microsoft.UI.Composition.Interactions.VisualInteractionSource)]
                [uuid(FEB73102-238C-52AA-8E03-B68D5ECC44B3)]
                interface IVisualInteractionSourceObjectFactory : IInspectable
                {
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [exclusiveto(Microsoft.UI.Composition.Interactions.VisualInteractionSource)]
                [uuid(5FC9C763-E2E5-530E-87CD-B93118ADE8A3)]
                interface IVisualInteractionSourceStatics : IInspectable
                {
                    HRESULT Create([in] Microsoft.UI.Composition.Visual* source, [out] [retval] Microsoft.UI.Composition.Interactions.VisualInteractionSource** result);
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [exclusiveto(Microsoft.UI.Composition.Interactions.VisualInteractionSource)]
                [uuid(A6B494FE-12A1-5A73-B87E-4C4EF58EAC6C)]
                interface IVisualInteractionSourceStatics2 : IInspectable
                {
                    HRESULT CreateFromIVisualElement([in] Microsoft.UI.Composition.IVisualElement* source, [out] [retval] Microsoft.UI.Composition.Interactions.VisualInteractionSource** result);
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Composition.Interactions.ICompositionConditionalValueStatics, Microsoft.Foundation.LiftedContract, 1.0)]
                [threading(both)]
                runtimeclass CompositionConditionalValue : Microsoft.UI.Composition.CompositionObject
                {
                    [default] interface Microsoft.UI.Composition.Interactions.ICompositionConditionalValue;
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass CompositionInteractionSourceCollection : Microsoft.UI.Composition.CompositionObject
                {
                    [default] interface Microsoft.UI.Composition.Interactions.ICompositionInteractionSourceCollection;
                    interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Composition.Interactions.ICompositionInteractionSource*>;
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass InteractionSourceConfiguration : Microsoft.UI.Composition.CompositionObject
                {
                    [default] interface Microsoft.UI.Composition.Interactions.IInteractionSourceConfiguration;
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Composition.Interactions.IInteractionTrackerStatics, Microsoft.Foundation.LiftedContract, 1.0)]
                [static(Microsoft.UI.Composition.Interactions.IInteractionTrackerStatics2, Microsoft.Foundation.LiftedContract, 1.0)]
                [threading(both)]
                runtimeclass InteractionTracker : Microsoft.UI.Composition.CompositionObject
                {
                    [default] interface Microsoft.UI.Composition.Interactions.IInteractionTracker;
                    [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.Interactions.IInteractionTracker2;
                    [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.Interactions.IInteractionTracker3;
                    [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.Interactions.IInteractionTracker4;
                    [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.Interactions.IInteractionTracker5;
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass InteractionTrackerCustomAnimationStateEnteredArgs
                {
                    [default] interface Microsoft.UI.Composition.Interactions.IInteractionTrackerCustomAnimationStateEnteredArgs;
                    [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.Interactions.IInteractionTrackerCustomAnimationStateEnteredArgs2;
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass InteractionTrackerIdleStateEnteredArgs
                {
                    [default] interface Microsoft.UI.Composition.Interactions.IInteractionTrackerIdleStateEnteredArgs;
                    [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.Interactions.IInteractionTrackerIdleStateEnteredArgs2;
                }

                [composable(Microsoft.UI.Composition.Interactions.IInteractionTrackerInertiaModifierFactory, public, Microsoft.Foundation.LiftedContract, 1.0)]
                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass InteractionTrackerInertiaModifier : Microsoft.UI.Composition.CompositionObject
                {
                    [default] interface Microsoft.UI.Composition.Interactions.IInteractionTrackerInertiaModifier;
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Composition.Interactions.IInteractionTrackerInertiaMotionStatics, Microsoft.Foundation.LiftedContract, 1.0)]
                [threading(both)]
                runtimeclass InteractionTrackerInertiaMotion : Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaModifier
                {
                    [default] interface Microsoft.UI.Composition.Interactions.IInteractionTrackerInertiaMotion;
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Composition.Interactions.IInteractionTrackerInertiaNaturalMotionStatics, Microsoft.Foundation.LiftedContract, 1.0)]
                [threading(both)]
                runtimeclass InteractionTrackerInertiaNaturalMotion : Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaModifier
                {
                    [default] interface Microsoft.UI.Composition.Interactions.IInteractionTrackerInertiaNaturalMotion;
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Composition.Interactions.IInteractionTrackerInertiaRestingValueStatics, Microsoft.Foundation.LiftedContract, 1.0)]
                [threading(both)]
                runtimeclass InteractionTrackerInertiaRestingValue : Microsoft.UI.Composition.Interactions.InteractionTrackerInertiaModifier
                {
                    [default] interface Microsoft.UI.Composition.Interactions.IInteractionTrackerInertiaRestingValue;
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass InteractionTrackerInertiaStateEnteredArgs
                {
                    [default] interface Microsoft.UI.Composition.Interactions.IInteractionTrackerInertiaStateEnteredArgs;
                    [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.Interactions.IInteractionTrackerInertiaStateEnteredArgs2;
                    [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.Interactions.IInteractionTrackerInertiaStateEnteredArgs3;
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass InteractionTrackerInteractingStateEnteredArgs
                {
                    [default] interface Microsoft.UI.Composition.Interactions.IInteractionTrackerInteractingStateEnteredArgs;
                    [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.Interactions.IInteractionTrackerInteractingStateEnteredArgs2;
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass InteractionTrackerRequestIgnoredArgs
                {
                    [default] interface Microsoft.UI.Composition.Interactions.IInteractionTrackerRequestIgnoredArgs;
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass InteractionTrackerValuesChangedArgs
                {
                    [default] interface Microsoft.UI.Composition.Interactions.IInteractionTrackerValuesChangedArgs;
                }

                [composable(Microsoft.UI.Composition.Interactions.IInteractionTrackerVector2InertiaModifierFactory, public, Microsoft.Foundation.LiftedContract, 1.0)]
                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass InteractionTrackerVector2InertiaModifier : Microsoft.UI.Composition.CompositionObject
                {
                    [default] interface Microsoft.UI.Composition.Interactions.IInteractionTrackerVector2InertiaModifier;
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Composition.Interactions.IInteractionTrackerVector2InertiaNaturalMotionStatics, Microsoft.Foundation.LiftedContract, 1.0)]
                [threading(both)]
                runtimeclass InteractionTrackerVector2InertiaNaturalMotion : Microsoft.UI.Composition.Interactions.InteractionTrackerVector2InertiaModifier
                {
                    [default] interface Microsoft.UI.Composition.Interactions.IInteractionTrackerVector2InertiaNaturalMotion;
                }

                [composable(Microsoft.UI.Composition.Interactions.IVisualInteractionSourceObjectFactory, public, Microsoft.Foundation.LiftedContract, 1.0)]
                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Composition.Interactions.IVisualInteractionSourceStatics, Microsoft.Foundation.LiftedContract, 1.0)]
                [static(Microsoft.UI.Composition.Interactions.IVisualInteractionSourceStatics2, Microsoft.Foundation.LiftedContract, 1.0)]
                [threading(both)]
                runtimeclass VisualInteractionSource : Microsoft.UI.Composition.CompositionObject
                {
                    [default] interface Microsoft.UI.Composition.Interactions.IVisualInteractionSource;
                    [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.Interactions.IVisualInteractionSource2;
                    [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.Interactions.IVisualInteractionSource3;
                    interface Microsoft.UI.Composition.Interactions.ICompositionInteractionSource;
                }
            }
        }
    }
}
