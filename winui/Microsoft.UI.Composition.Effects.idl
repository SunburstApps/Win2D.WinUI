//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "windowscontracts.idl";
import "Windows.Foundation.idl";
import "Microsoft.Foundation.idl";
import "Windows.Foundation.Numerics.idl";
import "Windows.Graphics.Effects.idl";
import "Windows.UI.idl";

// Forward Declare
namespace Microsoft
{
    namespace Foundation
    {
        apicontract LiftedContract;
    }
}
namespace Windows
{
    namespace Foundation
    {
        namespace Numerics
        {
            typedef struct Matrix3x2 Matrix3x2;

            typedef struct Vector2 Vector2;

            typedef struct Vector3 Vector3;
        }
    }
}
namespace Windows
{
    namespace Graphics
    {
        namespace Effects
        {
            interface IGraphicsEffect;

            interface IGraphicsEffectSource;
        }
    }
}
namespace Windows
{
    namespace UI
    {
        typedef struct Color Color;
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Composition
        {
            namespace Effects
            {
                typedef enum BlendEffectMode BlendEffectMode;

                typedef enum CanvasAlphaMode CanvasAlphaMode;

                typedef enum CanvasBlend CanvasBlend;

                typedef enum CanvasComposite CanvasComposite;

                typedef enum CanvasEdgeBehavior CanvasEdgeBehavior;

                typedef enum CanvasImageInterpolation CanvasImageInterpolation;

                typedef enum EffectBorderMode EffectBorderMode;

                typedef enum EffectChannelSelect EffectChannelSelect;

                typedef enum EffectOptimization EffectOptimization;

                typedef enum SceneLightingEffectReflectanceModel SceneLightingEffectReflectanceModel;

                typedef struct Matrix5x4 Matrix5x4;

                interface IAlphaMaskEffect;

                interface IArithmeticCompositeEffect;

                interface IBlendEffect;

                interface IBorderEffect;

                interface IColorMatrixEffect;

                interface IColorSourceEffect;

                interface ICompositeStepEffect;

                interface IContrastEffect;

                interface ICrossFadeEffect;

                interface IDistantDiffuseEffect;

                interface IDistantSpecularEffect;

                interface IExposureEffect;

                interface IGammaTransferEffect;

                interface IGaussianBlurEffect;

                interface IGrayscaleEffect;

                interface IHueRotationEffect;

                interface IInvertEffect;

                interface ILinearTransferEffect;

                interface ILuminanceToAlphaEffect;

                interface IOpacityEffect;

                interface IPointDiffuseEffect;

                interface IPointSpecularEffect;

                interface IPosterizeEffect;

                interface IPremultiplyEffect;

                interface ISaturationEffect;

                interface ISceneLightingEffect;

                interface ISceneLightingEffect2;

                interface ISepiaEffect;

                interface ISpotDiffuseEffect;

                interface ISpotSpecularEffect;

                interface ITemperatureAndTintEffect;

                interface ITintEffect;

                interface ITransform2DEffect;

                interface IUnPremultiplyEffect;

                runtimeclass AlphaMaskEffect;

                runtimeclass ArithmeticCompositeEffect;

                runtimeclass BlendEffect;

                runtimeclass BorderEffect;

                runtimeclass ColorMatrixEffect;

                runtimeclass ColorSourceEffect;

                runtimeclass CompositeStepEffect;

                runtimeclass ContrastEffect;

                runtimeclass CrossFadeEffect;

                runtimeclass DistantDiffuseEffect;

                runtimeclass DistantSpecularEffect;

                runtimeclass ExposureEffect;

                runtimeclass GammaTransferEffect;

                runtimeclass GaussianBlurEffect;

                runtimeclass GrayscaleEffect;

                runtimeclass HueRotationEffect;

                runtimeclass InvertEffect;

                runtimeclass LinearTransferEffect;

                runtimeclass LuminanceToAlphaEffect;

                runtimeclass OpacityEffect;

                runtimeclass PointDiffuseEffect;

                runtimeclass PointSpecularEffect;

                runtimeclass PosterizeEffect;

                runtimeclass PremultiplyEffect;

                runtimeclass SaturationEffect;

                runtimeclass SceneLightingEffect;

                runtimeclass SepiaEffect;

                runtimeclass SpotDiffuseEffect;

                runtimeclass SpotSpecularEffect;

                runtimeclass TemperatureAndTintEffect;

                runtimeclass TintEffect;

                runtimeclass Transform2DEffect;

                runtimeclass UnPremultiplyEffect;
            }
        }
    }
}

// Generic instantiations

// Type definition
namespace Microsoft
{
    namespace UI
    {
        namespace Composition
        {
            namespace Effects
            {
                [version(0x00010000)]
                enum BlendEffectMode
                {
                    Multiply     = 0,
                    Screen       = 1,
                    Darken       = 2,
                    Lighten      = 3,
                    Dissolve     = 4,
                    ColorBurn    = 5,
                    LinearBurn   = 6,
                    DarkerColor  = 7,
                    LighterColor = 8,
                    ColorDodge   = 9,
                    LinearDodge  = 10,
                    Overlay      = 11,
                    SoftLight    = 12,
                    HardLight    = 13,
                    VividLight   = 14,
                    LinearLight  = 15,
                    PinLight     = 16,
                    HardMix      = 17,
                    Difference   = 18,
                    Exclusion    = 19,
                    Hue          = 20,
                    Saturation   = 21,
                    Color        = 22,
                    Luminosity   = 23,
                    Subtract     = 24,
                    Division     = 25
                };

                [version(0x00010000)]
                enum CanvasAlphaMode
                {
                    Premultiplied = 0,
                    Straight      = 1,
                    Ignore        = 2
                };

                [version(0x00010000)]
                enum CanvasBlend
                {
                    SourceOver = 0,
                    Copy       = 1,
                    Min        = 2,
                    Add        = 3
                };

                [version(0x00010000)]
                enum CanvasComposite
                {
                    SourceOver      = 0,
                    DestinationOver = 1,
                    SourceIn        = 2,
                    DestinationIn   = 3,
                    SourceOut       = 4,
                    DestinationOut  = 5,
                    SourceAtop      = 6,
                    DestinationAtop = 7,
                    Xor             = 8,
                    Add             = 9,
                    Copy            = 10,
                    BoundedCopy     = 11,
                    MaskInvert      = 12
                };

                [version(0x00010000)]
                enum CanvasEdgeBehavior
                {
                    Clamp  = 0,
                    Wrap   = 1,
                    Mirror = 2
                };

                [version(0x00010000)]
                enum CanvasImageInterpolation
                {
                    NearestNeighbor   = 0,
                    Linear            = 1,
                    Cubic             = 2,
                    MultiSampleLinear = 3,
                    Anisotropic       = 4,
                    HighQualityCubic  = 5
                };

                [version(0x00010000)]
                enum EffectBorderMode
                {
                    Soft = 0,
                    Hard = 1
                };

                [version(0x00010000)]
                enum EffectChannelSelect
                {
                    Red   = 0,
                    Green = 1,
                    Blue  = 2,
                    Alpha = 3
                };

                [version(0x00010000)]
                enum EffectOptimization
                {
                    Speed    = 0,
                    Balanced = 1,
                    Quality  = 2
                };

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                enum SceneLightingEffectReflectanceModel
                {
                    BlinnPhong                = 0,
                    PhysicallyBasedBlinnPhong = 1
                };

                [version(0x00010000)]
                struct Matrix5x4
                {
                    FLOAT M11;
                    FLOAT M12;
                    FLOAT M13;
                    FLOAT M14;
                    FLOAT M21;
                    FLOAT M22;
                    FLOAT M23;
                    FLOAT M24;
                    FLOAT M31;
                    FLOAT M32;
                    FLOAT M33;
                    FLOAT M34;
                    FLOAT M41;
                    FLOAT M42;
                    FLOAT M43;
                    FLOAT M44;
                    FLOAT M51;
                    FLOAT M52;
                    FLOAT M53;
                    FLOAT M54;
                };

                [exclusiveto(Microsoft.UI.Composition.Effects.AlphaMaskEffect)]
                [uuid(AEFEA128-5F3E-4ABB-BDE8-D53E55F730E4)]
                [version(0x00010000)]
                interface IAlphaMaskEffect : IInspectable
                {
                    [propget] HRESULT Source([out] [retval] Windows.Graphics.Effects.IGraphicsEffectSource** source);
                    [propput] HRESULT Source([in] Windows.Graphics.Effects.IGraphicsEffectSource* source);
                    [propget] HRESULT Mask([out] [retval] Windows.Graphics.Effects.IGraphicsEffectSource** source);
                    [propput] HRESULT Mask([in] Windows.Graphics.Effects.IGraphicsEffectSource* source);
                }

                [exclusiveto(Microsoft.UI.Composition.Effects.ArithmeticCompositeEffect)]
                [uuid(BEEB682B-D64C-5C8B-A1FB-332162ED099B)]
                [version(0x00010000)]
                interface IArithmeticCompositeEffect : IInspectable
                {
                    [propget] HRESULT ClampOutput([out] [retval] boolean* value);
                    [propput] HRESULT ClampOutput([in] boolean value);
                    [propget] HRESULT MultiplyAmount([out] [retval] FLOAT* value);
                    [propput] HRESULT MultiplyAmount([in] FLOAT value);
                    [propget] HRESULT Source1Amount([out] [retval] FLOAT* value);
                    [propput] HRESULT Source1Amount([in] FLOAT value);
                    [propget] HRESULT Source2Amount([out] [retval] FLOAT* value);
                    [propput] HRESULT Source2Amount([in] FLOAT value);
                    [propget] HRESULT Offset([out] [retval] FLOAT* value);
                    [propput] HRESULT Offset([in] FLOAT value);
                    [propget] HRESULT Source1([out] [retval] Windows.Graphics.Effects.IGraphicsEffectSource** source);
                    [propput] HRESULT Source1([in] Windows.Graphics.Effects.IGraphicsEffectSource* source);
                    [propget] HRESULT Source2([out] [retval] Windows.Graphics.Effects.IGraphicsEffectSource** source);
                    [propput] HRESULT Source2([in] Windows.Graphics.Effects.IGraphicsEffectSource* source);
                }

                [exclusiveto(Microsoft.UI.Composition.Effects.BlendEffect)]
                [uuid(5673248E-7266-5E49-B2AB-2589D5D875C2)]
                [version(0x00010000)]
                interface IBlendEffect : IInspectable
                {
                    [propget] HRESULT Mode([out] [retval] Microsoft.UI.Composition.Effects.BlendEffectMode* value);
                    [propput] HRESULT Mode([in] Microsoft.UI.Composition.Effects.BlendEffectMode value);
                    [propget] HRESULT Background([out] [retval] Windows.Graphics.Effects.IGraphicsEffectSource** source);
                    [propput] HRESULT Background([in] Windows.Graphics.Effects.IGraphicsEffectSource* source);
                    [propget] HRESULT Foreground([out] [retval] Windows.Graphics.Effects.IGraphicsEffectSource** source);
                    [propput] HRESULT Foreground([in] Windows.Graphics.Effects.IGraphicsEffectSource* source);
                }

                [exclusiveto(Microsoft.UI.Composition.Effects.BorderEffect)]
                [uuid(31602441-15DB-5B4A-98DD-BA4247548B40)]
                [version(0x00010000)]
                interface IBorderEffect : IInspectable
                {
                    [propget] HRESULT ExtendX([out] [retval] Microsoft.UI.Composition.Effects.CanvasEdgeBehavior* value);
                    [propput] HRESULT ExtendX([in] Microsoft.UI.Composition.Effects.CanvasEdgeBehavior value);
                    [propget] HRESULT ExtendY([out] [retval] Microsoft.UI.Composition.Effects.CanvasEdgeBehavior* value);
                    [propput] HRESULT ExtendY([in] Microsoft.UI.Composition.Effects.CanvasEdgeBehavior value);
                    [propget] HRESULT Source([out] [retval] Windows.Graphics.Effects.IGraphicsEffectSource** source);
                    [propput] HRESULT Source([in] Windows.Graphics.Effects.IGraphicsEffectSource* source);
                }

                [exclusiveto(Microsoft.UI.Composition.Effects.ColorMatrixEffect)]
                [uuid(E6AE54C4-883D-588E-B451-E9EBE3830436)]
                [version(0x00010000)]
                interface IColorMatrixEffect : IInspectable
                {
                    [propget] HRESULT ColorMatrix([out] [retval] Microsoft.UI.Composition.Effects.Matrix5x4* value);
                    [propput] HRESULT ColorMatrix([in] Microsoft.UI.Composition.Effects.Matrix5x4 value);
                    [propget] HRESULT AlphaMode([out] [retval] Microsoft.UI.Composition.Effects.CanvasAlphaMode* value);
                    [propput] HRESULT AlphaMode([in] Microsoft.UI.Composition.Effects.CanvasAlphaMode value);
                    [propget] HRESULT ClampOutput([out] [retval] boolean* value);
                    [propput] HRESULT ClampOutput([in] boolean value);
                    [propget] HRESULT Source([out] [retval] Windows.Graphics.Effects.IGraphicsEffectSource** source);
                    [propput] HRESULT Source([in] Windows.Graphics.Effects.IGraphicsEffectSource* source);
                }

                [exclusiveto(Microsoft.UI.Composition.Effects.ColorSourceEffect)]
                [uuid(25F942C7-7FEE-518A-BA7B-22A0060AF7F5)]
                [version(0x00010000)]
                interface IColorSourceEffect : IInspectable
                {
                    [propget] HRESULT Color([out] [retval] Windows.UI.Color* value);
                    [propput] HRESULT Color([in] Windows.UI.Color value);
                }

                [exclusiveto(Microsoft.UI.Composition.Effects.CompositeStepEffect)]
                [uuid(58360908-1B6B-4302-8ECD-CC24B26F27B0)]
                [version(0x00010000)]
                interface ICompositeStepEffect : IInspectable
                {
                    [propget] HRESULT Mode([out] [retval] Microsoft.UI.Composition.Effects.CanvasComposite* value);
                    [propput] HRESULT Mode([in] Microsoft.UI.Composition.Effects.CanvasComposite value);
                    [propget] HRESULT Destination([out] [retval] Windows.Graphics.Effects.IGraphicsEffectSource** source);
                    [propput] HRESULT Destination([in] Windows.Graphics.Effects.IGraphicsEffectSource* source);
                    [propget] HRESULT Source([out] [retval] Windows.Graphics.Effects.IGraphicsEffectSource** source);
                    [propput] HRESULT Source([in] Windows.Graphics.Effects.IGraphicsEffectSource* source);
                }

                [exclusiveto(Microsoft.UI.Composition.Effects.ContrastEffect)]
                [uuid(DA8A2B9F-594E-560A-9EAA-1F912408FE78)]
                [version(0x00010000)]
                interface IContrastEffect : IInspectable
                {
                    [propget] HRESULT Contrast([out] [retval] FLOAT* value);
                    [propput] HRESULT Contrast([in] FLOAT value);
                    [propget] HRESULT ClampSource([out] [retval] boolean* value);
                    [propput] HRESULT ClampSource([in] boolean value);
                    [propget] HRESULT Source([out] [retval] Windows.Graphics.Effects.IGraphicsEffectSource** source);
                    [propput] HRESULT Source([in] Windows.Graphics.Effects.IGraphicsEffectSource* source);
                }

                [exclusiveto(Microsoft.UI.Composition.Effects.CrossFadeEffect)]
                [uuid(2A451393-CCC3-4C7E-B9BC-5AD9F9538C08)]
                [version(0x00010000)]
                interface ICrossFadeEffect : IInspectable
                {
                    [propget] HRESULT Weight([out] [retval] FLOAT* value);
                    [propput] HRESULT Weight([in] FLOAT value);
                    [propget] HRESULT Source1([out] [retval] Windows.Graphics.Effects.IGraphicsEffectSource** source);
                    [propput] HRESULT Source1([in] Windows.Graphics.Effects.IGraphicsEffectSource* source);
                    [propget] HRESULT Source2([out] [retval] Windows.Graphics.Effects.IGraphicsEffectSource** source);
                    [propput] HRESULT Source2([in] Windows.Graphics.Effects.IGraphicsEffectSource* source);
                }

                [exclusiveto(Microsoft.UI.Composition.Effects.DistantDiffuseEffect)]
                [uuid(D501B10B-B445-50F4-8B8F-CDECFCDD1320)]
                [version(0x00010000)]
                interface IDistantDiffuseEffect : IInspectable
                {
                    [propget] HRESULT Azimuth([out] [retval] FLOAT* value);
                    [propput] HRESULT Azimuth([in] FLOAT value);
                    [propget] HRESULT Elevation([out] [retval] FLOAT* value);
                    [propput] HRESULT Elevation([in] FLOAT value);
                    [propget] HRESULT DiffuseAmount([out] [retval] FLOAT* value);
                    [propput] HRESULT DiffuseAmount([in] FLOAT value);
                    [propget] HRESULT HeightMapScale([out] [retval] FLOAT* value);
                    [propput] HRESULT HeightMapScale([in] FLOAT value);
                    [propget] HRESULT LightColor([out] [retval] Windows.UI.Color* value);
                    [propput] HRESULT LightColor([in] Windows.UI.Color value);
                    [propget] HRESULT HeightMapKernelSize([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                    [propput] HRESULT HeightMapKernelSize([in] Windows.Foundation.Numerics.Vector2 value);
                    [propget] HRESULT HeightMapInterpolationMode([out] [retval] Microsoft.UI.Composition.Effects.CanvasImageInterpolation* value);
                    [propput] HRESULT HeightMapInterpolationMode([in] Microsoft.UI.Composition.Effects.CanvasImageInterpolation value);
                    [propget] HRESULT Source([out] [retval] Windows.Graphics.Effects.IGraphicsEffectSource** source);
                    [propput] HRESULT Source([in] Windows.Graphics.Effects.IGraphicsEffectSource* source);
                }

                [exclusiveto(Microsoft.UI.Composition.Effects.DistantSpecularEffect)]
                [uuid(A7A828DF-3072-545F-8D75-86C100F03230)]
                [version(0x00010000)]
                interface IDistantSpecularEffect : IInspectable
                {
                    [propget] HRESULT Azimuth([out] [retval] FLOAT* value);
                    [propput] HRESULT Azimuth([in] FLOAT value);
                    [propget] HRESULT Elevation([out] [retval] FLOAT* value);
                    [propput] HRESULT Elevation([in] FLOAT value);
                    [propget] HRESULT SpecularExponent([out] [retval] FLOAT* value);
                    [propput] HRESULT SpecularExponent([in] FLOAT value);
                    [propget] HRESULT SpecularAmount([out] [retval] FLOAT* value);
                    [propput] HRESULT SpecularAmount([in] FLOAT value);
                    [propget] HRESULT HeightMapScale([out] [retval] FLOAT* value);
                    [propput] HRESULT HeightMapScale([in] FLOAT value);
                    [propget] HRESULT LightColor([out] [retval] Windows.UI.Color* value);
                    [propput] HRESULT LightColor([in] Windows.UI.Color value);
                    [propget] HRESULT HeightMapKernelSize([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                    [propput] HRESULT HeightMapKernelSize([in] Windows.Foundation.Numerics.Vector2 value);
                    [propget] HRESULT HeightMapInterpolationMode([out] [retval] Microsoft.UI.Composition.Effects.CanvasImageInterpolation* value);
                    [propput] HRESULT HeightMapInterpolationMode([in] Microsoft.UI.Composition.Effects.CanvasImageInterpolation value);
                    [propget] HRESULT Source([out] [retval] Windows.Graphics.Effects.IGraphicsEffectSource** source);
                    [propput] HRESULT Source([in] Windows.Graphics.Effects.IGraphicsEffectSource* source);
                }

                [exclusiveto(Microsoft.UI.Composition.Effects.ExposureEffect)]
                [uuid(B9E20A03-2232-5FD3-B408-15784B79DBBF)]
                [version(0x00010000)]
                interface IExposureEffect : IInspectable
                {
                    [propget] HRESULT Exposure([out] [retval] FLOAT* value);
                    [propput] HRESULT Exposure([in] FLOAT value);
                    [propget] HRESULT Source([out] [retval] Windows.Graphics.Effects.IGraphicsEffectSource** source);
                    [propput] HRESULT Source([in] Windows.Graphics.Effects.IGraphicsEffectSource* source);
                }

                [exclusiveto(Microsoft.UI.Composition.Effects.GammaTransferEffect)]
                [uuid(B4576B6B-6C3E-534A-8576-D46DF4FCE93C)]
                [version(0x00010000)]
                interface IGammaTransferEffect : IInspectable
                {
                    [propget] HRESULT RedAmplitude([out] [retval] FLOAT* value);
                    [propput] HRESULT RedAmplitude([in] FLOAT value);
                    [propget] HRESULT RedExponent([out] [retval] FLOAT* value);
                    [propput] HRESULT RedExponent([in] FLOAT value);
                    [propget] HRESULT RedOffset([out] [retval] FLOAT* value);
                    [propput] HRESULT RedOffset([in] FLOAT value);
                    [propget] HRESULT RedDisable([out] [retval] boolean* value);
                    [propput] HRESULT RedDisable([in] boolean value);
                    [propget] HRESULT GreenAmplitude([out] [retval] FLOAT* value);
                    [propput] HRESULT GreenAmplitude([in] FLOAT value);
                    [propget] HRESULT GreenExponent([out] [retval] FLOAT* value);
                    [propput] HRESULT GreenExponent([in] FLOAT value);
                    [propget] HRESULT GreenOffset([out] [retval] FLOAT* value);
                    [propput] HRESULT GreenOffset([in] FLOAT value);
                    [propget] HRESULT GreenDisable([out] [retval] boolean* value);
                    [propput] HRESULT GreenDisable([in] boolean value);
                    [propget] HRESULT BlueAmplitude([out] [retval] FLOAT* value);
                    [propput] HRESULT BlueAmplitude([in] FLOAT value);
                    [propget] HRESULT BlueExponent([out] [retval] FLOAT* value);
                    [propput] HRESULT BlueExponent([in] FLOAT value);
                    [propget] HRESULT BlueOffset([out] [retval] FLOAT* value);
                    [propput] HRESULT BlueOffset([in] FLOAT value);
                    [propget] HRESULT BlueDisable([out] [retval] boolean* value);
                    [propput] HRESULT BlueDisable([in] boolean value);
                    [propget] HRESULT AlphaAmplitude([out] [retval] FLOAT* value);
                    [propput] HRESULT AlphaAmplitude([in] FLOAT value);
                    [propget] HRESULT AlphaExponent([out] [retval] FLOAT* value);
                    [propput] HRESULT AlphaExponent([in] FLOAT value);
                    [propget] HRESULT AlphaOffset([out] [retval] FLOAT* value);
                    [propput] HRESULT AlphaOffset([in] FLOAT value);
                    [propget] HRESULT AlphaDisable([out] [retval] boolean* value);
                    [propput] HRESULT AlphaDisable([in] boolean value);
                    [propget] HRESULT ClampOutput([out] [retval] boolean* value);
                    [propput] HRESULT ClampOutput([in] boolean value);
                    [propget] HRESULT Source([out] [retval] Windows.Graphics.Effects.IGraphicsEffectSource** source);
                    [propput] HRESULT Source([in] Windows.Graphics.Effects.IGraphicsEffectSource* source);
                }

                [exclusiveto(Microsoft.UI.Composition.Effects.GaussianBlurEffect)]
                [uuid(CC3FF255-A83D-5AED-8187-70F64BBD9E50)]
                [version(0x00010000)]
                interface IGaussianBlurEffect : IInspectable
                {
                    [propget] HRESULT BlurAmount([out] [retval] FLOAT* value);
                    [propput] HRESULT BlurAmount([in] FLOAT value);
                    [propget] HRESULT Optimization([out] [retval] Microsoft.UI.Composition.Effects.EffectOptimization* value);
                    [propput] HRESULT Optimization([in] Microsoft.UI.Composition.Effects.EffectOptimization value);
                    [propget] HRESULT BorderMode([out] [retval] Microsoft.UI.Composition.Effects.EffectBorderMode* value);
                    [propput] HRESULT BorderMode([in] Microsoft.UI.Composition.Effects.EffectBorderMode value);
                    [propget] HRESULT Source([out] [retval] Windows.Graphics.Effects.IGraphicsEffectSource** source);
                    [propput] HRESULT Source([in] Windows.Graphics.Effects.IGraphicsEffectSource* source);
                }

                [exclusiveto(Microsoft.UI.Composition.Effects.GrayscaleEffect)]
                [uuid(78E13B83-0638-53F8-B0B3-5B0B320A9AD1)]
                [version(0x00010000)]
                interface IGrayscaleEffect : IInspectable
                {
                    [propget] HRESULT Source([out] [retval] Windows.Graphics.Effects.IGraphicsEffectSource** source);
                    [propput] HRESULT Source([in] Windows.Graphics.Effects.IGraphicsEffectSource* source);
                }

                [exclusiveto(Microsoft.UI.Composition.Effects.HueRotationEffect)]
                [uuid(C172EBF2-E35F-58AE-AD2C-561ECEAF2693)]
                [version(0x00010000)]
                interface IHueRotationEffect : IInspectable
                {
                    [propget] HRESULT Angle([out] [retval] FLOAT* value);
                    [propput] HRESULT Angle([in] FLOAT value);
                    [propget] HRESULT Source([out] [retval] Windows.Graphics.Effects.IGraphicsEffectSource** source);
                    [propput] HRESULT Source([in] Windows.Graphics.Effects.IGraphicsEffectSource* source);
                }

                [exclusiveto(Microsoft.UI.Composition.Effects.InvertEffect)]
                [uuid(D4ADCDFC-0F60-524D-936A-7F2736AD33D7)]
                [version(0x00010000)]
                interface IInvertEffect : IInspectable
                {
                    [propget] HRESULT Source([out] [retval] Windows.Graphics.Effects.IGraphicsEffectSource** source);
                    [propput] HRESULT Source([in] Windows.Graphics.Effects.IGraphicsEffectSource* source);
                }

                [exclusiveto(Microsoft.UI.Composition.Effects.LinearTransferEffect)]
                [uuid(0CDF2CD0-1CE5-5C97-A09C-F14361B96E46)]
                [version(0x00010000)]
                interface ILinearTransferEffect : IInspectable
                {
                    [propget] HRESULT RedOffset([out] [retval] FLOAT* value);
                    [propput] HRESULT RedOffset([in] FLOAT value);
                    [propget] HRESULT RedSlope([out] [retval] FLOAT* value);
                    [propput] HRESULT RedSlope([in] FLOAT value);
                    [propget] HRESULT RedDisable([out] [retval] boolean* value);
                    [propput] HRESULT RedDisable([in] boolean value);
                    [propget] HRESULT GreenOffset([out] [retval] FLOAT* value);
                    [propput] HRESULT GreenOffset([in] FLOAT value);
                    [propget] HRESULT GreenSlope([out] [retval] FLOAT* value);
                    [propput] HRESULT GreenSlope([in] FLOAT value);
                    [propget] HRESULT GreenDisable([out] [retval] boolean* value);
                    [propput] HRESULT GreenDisable([in] boolean value);
                    [propget] HRESULT BlueOffset([out] [retval] FLOAT* value);
                    [propput] HRESULT BlueOffset([in] FLOAT value);
                    [propget] HRESULT BlueSlope([out] [retval] FLOAT* value);
                    [propput] HRESULT BlueSlope([in] FLOAT value);
                    [propget] HRESULT BlueDisable([out] [retval] boolean* value);
                    [propput] HRESULT BlueDisable([in] boolean value);
                    [propget] HRESULT AlphaOffset([out] [retval] FLOAT* value);
                    [propput] HRESULT AlphaOffset([in] FLOAT value);
                    [propget] HRESULT AlphaSlope([out] [retval] FLOAT* value);
                    [propput] HRESULT AlphaSlope([in] FLOAT value);
                    [propget] HRESULT AlphaDisable([out] [retval] boolean* value);
                    [propput] HRESULT AlphaDisable([in] boolean value);
                    [propget] HRESULT ClampOutput([out] [retval] boolean* value);
                    [propput] HRESULT ClampOutput([in] boolean value);
                    [propget] HRESULT Source([out] [retval] Windows.Graphics.Effects.IGraphicsEffectSource** source);
                    [propput] HRESULT Source([in] Windows.Graphics.Effects.IGraphicsEffectSource* source);
                }

                [exclusiveto(Microsoft.UI.Composition.Effects.LuminanceToAlphaEffect)]
                [uuid(32983357-0FD9-52B7-B63B-001F6FF4618B)]
                [version(0x00010000)]
                interface ILuminanceToAlphaEffect : IInspectable
                {
                    [propget] HRESULT Source([out] [retval] Windows.Graphics.Effects.IGraphicsEffectSource** source);
                    [propput] HRESULT Source([in] Windows.Graphics.Effects.IGraphicsEffectSource* source);
                }

                [exclusiveto(Microsoft.UI.Composition.Effects.OpacityEffect)]
                [uuid(C20AE33A-1844-4650-811C-63CA823B86B5)]
                [version(0x00010000)]
                interface IOpacityEffect : IInspectable
                {
                    [propget] HRESULT Opacity([out] [retval] FLOAT* value);
                    [propput] HRESULT Opacity([in] FLOAT value);
                    [propget] HRESULT Source([out] [retval] Windows.Graphics.Effects.IGraphicsEffectSource** source);
                    [propput] HRESULT Source([in] Windows.Graphics.Effects.IGraphicsEffectSource* source);
                }

                [exclusiveto(Microsoft.UI.Composition.Effects.PointDiffuseEffect)]
                [uuid(6CCE09EC-F847-5661-AF4B-531DD3DD7D6D)]
                [version(0x00010000)]
                interface IPointDiffuseEffect : IInspectable
                {
                    [propget] HRESULT LightPosition([out] [retval] Windows.Foundation.Numerics.Vector3* value);
                    [propput] HRESULT LightPosition([in] Windows.Foundation.Numerics.Vector3 value);
                    [propget] HRESULT DiffuseAmount([out] [retval] FLOAT* value);
                    [propput] HRESULT DiffuseAmount([in] FLOAT value);
                    [propget] HRESULT HeightMapScale([out] [retval] FLOAT* value);
                    [propput] HRESULT HeightMapScale([in] FLOAT value);
                    [propget] HRESULT LightColor([out] [retval] Windows.UI.Color* value);
                    [propput] HRESULT LightColor([in] Windows.UI.Color value);
                    [propget] HRESULT HeightMapKernelSize([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                    [propput] HRESULT HeightMapKernelSize([in] Windows.Foundation.Numerics.Vector2 value);
                    [propget] HRESULT HeightMapInterpolationMode([out] [retval] Microsoft.UI.Composition.Effects.CanvasImageInterpolation* value);
                    [propput] HRESULT HeightMapInterpolationMode([in] Microsoft.UI.Composition.Effects.CanvasImageInterpolation value);
                    [propget] HRESULT Source([out] [retval] Windows.Graphics.Effects.IGraphicsEffectSource** source);
                    [propput] HRESULT Source([in] Windows.Graphics.Effects.IGraphicsEffectSource* source);
                }

                [exclusiveto(Microsoft.UI.Composition.Effects.PointSpecularEffect)]
                [uuid(EC8AFE9B-8501-5286-A43C-1AFFF7420AD5)]
                [version(0x00010000)]
                interface IPointSpecularEffect : IInspectable
                {
                    [propget] HRESULT LightPosition([out] [retval] Windows.Foundation.Numerics.Vector3* value);
                    [propput] HRESULT LightPosition([in] Windows.Foundation.Numerics.Vector3 value);
                    [propget] HRESULT SpecularExponent([out] [retval] FLOAT* value);
                    [propput] HRESULT SpecularExponent([in] FLOAT value);
                    [propget] HRESULT SpecularAmount([out] [retval] FLOAT* value);
                    [propput] HRESULT SpecularAmount([in] FLOAT value);
                    [propget] HRESULT HeightMapScale([out] [retval] FLOAT* value);
                    [propput] HRESULT HeightMapScale([in] FLOAT value);
                    [propget] HRESULT LightColor([out] [retval] Windows.UI.Color* value);
                    [propput] HRESULT LightColor([in] Windows.UI.Color value);
                    [propget] HRESULT HeightMapKernelSize([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                    [propput] HRESULT HeightMapKernelSize([in] Windows.Foundation.Numerics.Vector2 value);
                    [propget] HRESULT HeightMapInterpolationMode([out] [retval] Microsoft.UI.Composition.Effects.CanvasImageInterpolation* value);
                    [propput] HRESULT HeightMapInterpolationMode([in] Microsoft.UI.Composition.Effects.CanvasImageInterpolation value);
                    [propget] HRESULT Source([out] [retval] Windows.Graphics.Effects.IGraphicsEffectSource** source);
                    [propput] HRESULT Source([in] Windows.Graphics.Effects.IGraphicsEffectSource* source);
                }

                [exclusiveto(Microsoft.UI.Composition.Effects.PosterizeEffect)]
                [uuid(2F631A3B-C89A-507C-9756-299B61434FA3)]
                [version(0x00010000)]
                interface IPosterizeEffect : IInspectable
                {
                    [propget] HRESULT RedValueCount([out] [retval] INT32* value);
                    [propput] HRESULT RedValueCount([in] INT32 value);
                    [propget] HRESULT GreenValueCount([out] [retval] INT32* value);
                    [propput] HRESULT GreenValueCount([in] INT32 value);
                    [propget] HRESULT BlueValueCount([out] [retval] INT32* value);
                    [propput] HRESULT BlueValueCount([in] INT32 value);
                    [propget] HRESULT Source([out] [retval] Windows.Graphics.Effects.IGraphicsEffectSource** source);
                    [propput] HRESULT Source([in] Windows.Graphics.Effects.IGraphicsEffectSource* source);
                }

                [exclusiveto(Microsoft.UI.Composition.Effects.PremultiplyEffect)]
                [uuid(D2884C75-A4A1-556B-ACEF-28ED22CF067F)]
                [version(0x00010000)]
                interface IPremultiplyEffect : IInspectable
                {
                    [propget] HRESULT Source([out] [retval] Windows.Graphics.Effects.IGraphicsEffectSource** source);
                    [propput] HRESULT Source([in] Windows.Graphics.Effects.IGraphicsEffectSource* source);
                }

                [exclusiveto(Microsoft.UI.Composition.Effects.SaturationEffect)]
                [uuid(F85A5ED7-7212-57A6-B357-61038961C58C)]
                [version(0x00010000)]
                interface ISaturationEffect : IInspectable
                {
                    [propget] HRESULT Saturation([out] [retval] FLOAT* value);
                    [propput] HRESULT Saturation([in] FLOAT value);
                    [propget] HRESULT Source([out] [retval] Windows.Graphics.Effects.IGraphicsEffectSource** source);
                    [propput] HRESULT Source([in] Windows.Graphics.Effects.IGraphicsEffectSource* source);
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [exclusiveto(Microsoft.UI.Composition.Effects.SceneLightingEffect)]
                [uuid(EB1E7316-114C-5950-8480-20A29A3BB1EE)]
                interface ISceneLightingEffect : IInspectable
                {
                    [propget] HRESULT AmbientAmount([out] [retval] FLOAT* value);
                    [propput] HRESULT AmbientAmount([in] FLOAT value);
                    [propget] HRESULT DiffuseAmount([out] [retval] FLOAT* value);
                    [propput] HRESULT DiffuseAmount([in] FLOAT value);
                    [propget] HRESULT NormalMapSource([out] [retval] Windows.Graphics.Effects.IGraphicsEffectSource** value);
                    [propput] HRESULT NormalMapSource([in] Windows.Graphics.Effects.IGraphicsEffectSource* value);
                    [propget] HRESULT SpecularAmount([out] [retval] FLOAT* value);
                    [propput] HRESULT SpecularAmount([in] FLOAT value);
                    [propget] HRESULT SpecularShine([out] [retval] FLOAT* value);
                    [propput] HRESULT SpecularShine([in] FLOAT value);
                }

                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [exclusiveto(Microsoft.UI.Composition.Effects.SceneLightingEffect)]
                [uuid(6B6496B2-468D-50D1-BBE9-593B8263AD80)]
                interface ISceneLightingEffect2 : IInspectable
                {
                    [propget] HRESULT ReflectanceModel([out] [retval] Microsoft.UI.Composition.Effects.SceneLightingEffectReflectanceModel* value);
                    [propput] HRESULT ReflectanceModel([in] Microsoft.UI.Composition.Effects.SceneLightingEffectReflectanceModel value);
                }

                [exclusiveto(Microsoft.UI.Composition.Effects.SepiaEffect)]
                [uuid(F933471F-A7AF-5521-BE79-B0DA22976CFE)]
                [version(0x00010000)]
                interface ISepiaEffect : IInspectable
                {
                    [propget] HRESULT Intensity([out] [retval] FLOAT* value);
                    [propput] HRESULT Intensity([in] FLOAT value);
                    [propget] HRESULT AlphaMode([out] [retval] Microsoft.UI.Composition.Effects.CanvasAlphaMode* value);
                    [propput] HRESULT AlphaMode([in] Microsoft.UI.Composition.Effects.CanvasAlphaMode value);
                    [propget] HRESULT Source([out] [retval] Windows.Graphics.Effects.IGraphicsEffectSource** source);
                    [propput] HRESULT Source([in] Windows.Graphics.Effects.IGraphicsEffectSource* source);
                }

                [exclusiveto(Microsoft.UI.Composition.Effects.SpotDiffuseEffect)]
                [uuid(B3DCBE44-1DD7-5CB3-95E5-A48974CD12E7)]
                [version(0x00010000)]
                interface ISpotDiffuseEffect : IInspectable
                {
                    [propget] HRESULT LightPosition([out] [retval] Windows.Foundation.Numerics.Vector3* value);
                    [propput] HRESULT LightPosition([in] Windows.Foundation.Numerics.Vector3 value);
                    [propget] HRESULT LightTarget([out] [retval] Windows.Foundation.Numerics.Vector3* value);
                    [propput] HRESULT LightTarget([in] Windows.Foundation.Numerics.Vector3 value);
                    [propget] HRESULT Focus([out] [retval] FLOAT* value);
                    [propput] HRESULT Focus([in] FLOAT value);
                    [propget] HRESULT LimitingConeAngle([out] [retval] FLOAT* value);
                    [propput] HRESULT LimitingConeAngle([in] FLOAT value);
                    [propget] HRESULT DiffuseAmount([out] [retval] FLOAT* value);
                    [propput] HRESULT DiffuseAmount([in] FLOAT value);
                    [propget] HRESULT HeightMapScale([out] [retval] FLOAT* value);
                    [propput] HRESULT HeightMapScale([in] FLOAT value);
                    [propget] HRESULT LightColor([out] [retval] Windows.UI.Color* value);
                    [propput] HRESULT LightColor([in] Windows.UI.Color value);
                    [propget] HRESULT HeightMapKernelSize([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                    [propput] HRESULT HeightMapKernelSize([in] Windows.Foundation.Numerics.Vector2 value);
                    [propget] HRESULT HeightMapInterpolationMode([out] [retval] Microsoft.UI.Composition.Effects.CanvasImageInterpolation* value);
                    [propput] HRESULT HeightMapInterpolationMode([in] Microsoft.UI.Composition.Effects.CanvasImageInterpolation value);
                    [propget] HRESULT Source([out] [retval] Windows.Graphics.Effects.IGraphicsEffectSource** source);
                    [propput] HRESULT Source([in] Windows.Graphics.Effects.IGraphicsEffectSource* source);
                }

                [exclusiveto(Microsoft.UI.Composition.Effects.SpotSpecularEffect)]
                [uuid(83AE4CD0-80AA-5783-8572-F15E5F85329D)]
                [version(0x00010000)]
                interface ISpotSpecularEffect : IInspectable
                {
                    [propget] HRESULT LightPosition([out] [retval] Windows.Foundation.Numerics.Vector3* value);
                    [propput] HRESULT LightPosition([in] Windows.Foundation.Numerics.Vector3 value);
                    [propget] HRESULT LightTarget([out] [retval] Windows.Foundation.Numerics.Vector3* value);
                    [propput] HRESULT LightTarget([in] Windows.Foundation.Numerics.Vector3 value);
                    [propget] HRESULT Focus([out] [retval] FLOAT* value);
                    [propput] HRESULT Focus([in] FLOAT value);
                    [propget] HRESULT LimitingConeAngle([out] [retval] FLOAT* value);
                    [propput] HRESULT LimitingConeAngle([in] FLOAT value);
                    [propget] HRESULT SpecularExponent([out] [retval] FLOAT* value);
                    [propput] HRESULT SpecularExponent([in] FLOAT value);
                    [propget] HRESULT SpecularAmount([out] [retval] FLOAT* value);
                    [propput] HRESULT SpecularAmount([in] FLOAT value);
                    [propget] HRESULT HeightMapScale([out] [retval] FLOAT* value);
                    [propput] HRESULT HeightMapScale([in] FLOAT value);
                    [propget] HRESULT LightColor([out] [retval] Windows.UI.Color* value);
                    [propput] HRESULT LightColor([in] Windows.UI.Color value);
                    [propget] HRESULT HeightMapKernelSize([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                    [propput] HRESULT HeightMapKernelSize([in] Windows.Foundation.Numerics.Vector2 value);
                    [propget] HRESULT HeightMapInterpolationMode([out] [retval] Microsoft.UI.Composition.Effects.CanvasImageInterpolation* value);
                    [propput] HRESULT HeightMapInterpolationMode([in] Microsoft.UI.Composition.Effects.CanvasImageInterpolation value);
                    [propget] HRESULT Source([out] [retval] Windows.Graphics.Effects.IGraphicsEffectSource** source);
                    [propput] HRESULT Source([in] Windows.Graphics.Effects.IGraphicsEffectSource* source);
                }

                [exclusiveto(Microsoft.UI.Composition.Effects.TemperatureAndTintEffect)]
                [uuid(8AE43E02-2619-5D78-8980-4ED569549BD7)]
                [version(0x00010000)]
                interface ITemperatureAndTintEffect : IInspectable
                {
                    [propget] HRESULT Temperature([out] [retval] FLOAT* value);
                    [propput] HRESULT Temperature([in] FLOAT value);
                    [propget] HRESULT Tint([out] [retval] FLOAT* value);
                    [propput] HRESULT Tint([in] FLOAT value);
                    [propget] HRESULT Source([out] [retval] Windows.Graphics.Effects.IGraphicsEffectSource** source);
                    [propput] HRESULT Source([in] Windows.Graphics.Effects.IGraphicsEffectSource* source);
                }

                [exclusiveto(Microsoft.UI.Composition.Effects.TintEffect)]
                [uuid(44FE4B1A-D909-4848-B08F-B6E979402771)]
                [version(0x00010000)]
                interface ITintEffect : IInspectable
                {
                    [propget] HRESULT Color([out] [retval] Windows.UI.Color* value);
                    [propput] HRESULT Color([in] Windows.UI.Color value);
                    [propget] HRESULT ClampOutput([out] [retval] boolean* value);
                    [propput] HRESULT ClampOutput([in] boolean value);
                    [propget] HRESULT Source([out] [retval] Windows.Graphics.Effects.IGraphicsEffectSource** source);
                    [propput] HRESULT Source([in] Windows.Graphics.Effects.IGraphicsEffectSource* source);
                }

                [exclusiveto(Microsoft.UI.Composition.Effects.Transform2DEffect)]
                [uuid(4467D118-33E7-5B1A-87C2-0F1F0497353C)]
                [version(0x00010000)]
                interface ITransform2DEffect : IInspectable
                {
                    [propget] HRESULT InterpolationMode([out] [retval] Microsoft.UI.Composition.Effects.CanvasImageInterpolation* value);
                    [propput] HRESULT InterpolationMode([in] Microsoft.UI.Composition.Effects.CanvasImageInterpolation value);
                    [propget] HRESULT BorderMode([out] [retval] Microsoft.UI.Composition.Effects.EffectBorderMode* value);
                    [propput] HRESULT BorderMode([in] Microsoft.UI.Composition.Effects.EffectBorderMode value);
                    [propget] HRESULT TransformMatrix([out] [retval] Windows.Foundation.Numerics.Matrix3x2* value);
                    [propput] HRESULT TransformMatrix([in] Windows.Foundation.Numerics.Matrix3x2 value);
                    [propget] HRESULT Sharpness([out] [retval] FLOAT* value);
                    [propput] HRESULT Sharpness([in] FLOAT value);
                    [propget] HRESULT Source([out] [retval] Windows.Graphics.Effects.IGraphicsEffectSource** source);
                    [propput] HRESULT Source([in] Windows.Graphics.Effects.IGraphicsEffectSource* source);
                }

                [exclusiveto(Microsoft.UI.Composition.Effects.UnPremultiplyEffect)]
                [uuid(9C8B2B18-CBC1-547E-B6D5-64A1D8BBC802)]
                [version(0x00010000)]
                interface IUnPremultiplyEffect : IInspectable
                {
                    [propget] HRESULT Source([out] [retval] Windows.Graphics.Effects.IGraphicsEffectSource** source);
                    [propput] HRESULT Source([in] Windows.Graphics.Effects.IGraphicsEffectSource* source);
                }

                [marshaling_behavior(agile)]
                [version(0x00010000)]
                runtimeclass AlphaMaskEffect
                {
                    [default] interface Microsoft.UI.Composition.Effects.IAlphaMaskEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffectSource;
                }

                [marshaling_behavior(agile)]
                [version(0x00010000)]
                runtimeclass ArithmeticCompositeEffect
                {
                    [default] interface Microsoft.UI.Composition.Effects.IArithmeticCompositeEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffectSource;
                }

                [marshaling_behavior(agile)]
                [version(0x00010000)]
                runtimeclass BlendEffect
                {
                    [default] interface Microsoft.UI.Composition.Effects.IBlendEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffectSource;
                }

                [marshaling_behavior(agile)]
                [version(0x00010000)]
                runtimeclass BorderEffect
                {
                    [default] interface Microsoft.UI.Composition.Effects.IBorderEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffectSource;
                }

                [marshaling_behavior(agile)]
                [version(0x00010000)]
                runtimeclass ColorMatrixEffect
                {
                    [default] interface Microsoft.UI.Composition.Effects.IColorMatrixEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffectSource;
                }

                [marshaling_behavior(agile)]
                [version(0x00010000)]
                runtimeclass ColorSourceEffect
                {
                    [default] interface Microsoft.UI.Composition.Effects.IColorSourceEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffectSource;
                }

                [marshaling_behavior(agile)]
                [version(0x00010000)]
                runtimeclass CompositeStepEffect
                {
                    [default] interface Microsoft.UI.Composition.Effects.ICompositeStepEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffectSource;
                }

                [marshaling_behavior(agile)]
                [version(0x00010000)]
                runtimeclass ContrastEffect
                {
                    [default] interface Microsoft.UI.Composition.Effects.IContrastEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffectSource;
                }

                [marshaling_behavior(agile)]
                [version(0x00010000)]
                runtimeclass CrossFadeEffect
                {
                    [default] interface Microsoft.UI.Composition.Effects.ICrossFadeEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffectSource;
                }

                [marshaling_behavior(agile)]
                [version(0x00010000)]
                runtimeclass DistantDiffuseEffect
                {
                    [default] interface Microsoft.UI.Composition.Effects.IDistantDiffuseEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffectSource;
                }

                [marshaling_behavior(agile)]
                [version(0x00010000)]
                runtimeclass DistantSpecularEffect
                {
                    [default] interface Microsoft.UI.Composition.Effects.IDistantSpecularEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffectSource;
                }

                [marshaling_behavior(agile)]
                [version(0x00010000)]
                runtimeclass ExposureEffect
                {
                    [default] interface Microsoft.UI.Composition.Effects.IExposureEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffectSource;
                }

                [marshaling_behavior(agile)]
                [version(0x00010000)]
                runtimeclass GammaTransferEffect
                {
                    [default] interface Microsoft.UI.Composition.Effects.IGammaTransferEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffectSource;
                }

                [marshaling_behavior(agile)]
                [version(0x00010000)]
                runtimeclass GaussianBlurEffect
                {
                    [default] interface Microsoft.UI.Composition.Effects.IGaussianBlurEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffectSource;
                }

                [marshaling_behavior(agile)]
                [version(0x00010000)]
                runtimeclass GrayscaleEffect
                {
                    [default] interface Microsoft.UI.Composition.Effects.IGrayscaleEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffectSource;
                }

                [marshaling_behavior(agile)]
                [version(0x00010000)]
                runtimeclass HueRotationEffect
                {
                    [default] interface Microsoft.UI.Composition.Effects.IHueRotationEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffectSource;
                }

                [marshaling_behavior(agile)]
                [version(0x00010000)]
                runtimeclass InvertEffect
                {
                    [default] interface Microsoft.UI.Composition.Effects.IInvertEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffectSource;
                }

                [marshaling_behavior(agile)]
                [version(0x00010000)]
                runtimeclass LinearTransferEffect
                {
                    [default] interface Microsoft.UI.Composition.Effects.ILinearTransferEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffectSource;
                }

                [marshaling_behavior(agile)]
                [version(0x00010000)]
                runtimeclass LuminanceToAlphaEffect
                {
                    [default] interface Microsoft.UI.Composition.Effects.ILuminanceToAlphaEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffectSource;
                }

                [marshaling_behavior(agile)]
                [version(0x00010000)]
                runtimeclass OpacityEffect
                {
                    [default] interface Microsoft.UI.Composition.Effects.IOpacityEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffectSource;
                }

                [marshaling_behavior(agile)]
                [version(0x00010000)]
                runtimeclass PointDiffuseEffect
                {
                    [default] interface Microsoft.UI.Composition.Effects.IPointDiffuseEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffectSource;
                }

                [marshaling_behavior(agile)]
                [version(0x00010000)]
                runtimeclass PointSpecularEffect
                {
                    [default] interface Microsoft.UI.Composition.Effects.IPointSpecularEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffectSource;
                }

                [marshaling_behavior(agile)]
                [version(0x00010000)]
                runtimeclass PosterizeEffect
                {
                    [default] interface Microsoft.UI.Composition.Effects.IPosterizeEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffectSource;
                }

                [marshaling_behavior(agile)]
                [version(0x00010000)]
                runtimeclass PremultiplyEffect
                {
                    [default] interface Microsoft.UI.Composition.Effects.IPremultiplyEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffectSource;
                }

                [marshaling_behavior(agile)]
                [version(0x00010000)]
                runtimeclass SaturationEffect
                {
                    [default] interface Microsoft.UI.Composition.Effects.ISaturationEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffectSource;
                }

                [activatable(Microsoft.Foundation.LiftedContract, 1.0)]
                [contract(Microsoft.Foundation.LiftedContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass SceneLightingEffect
                {
                    [default] interface Microsoft.UI.Composition.Effects.ISceneLightingEffect;
                    [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.Effects.ISceneLightingEffect2;
                    interface Windows.Graphics.Effects.IGraphicsEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffectSource;
                }

                [marshaling_behavior(agile)]
                [version(0x00010000)]
                runtimeclass SepiaEffect
                {
                    [default] interface Microsoft.UI.Composition.Effects.ISepiaEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffectSource;
                }

                [marshaling_behavior(agile)]
                [version(0x00010000)]
                runtimeclass SpotDiffuseEffect
                {
                    [default] interface Microsoft.UI.Composition.Effects.ISpotDiffuseEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffectSource;
                }

                [marshaling_behavior(agile)]
                [version(0x00010000)]
                runtimeclass SpotSpecularEffect
                {
                    [default] interface Microsoft.UI.Composition.Effects.ISpotSpecularEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffectSource;
                }

                [marshaling_behavior(agile)]
                [version(0x00010000)]
                runtimeclass TemperatureAndTintEffect
                {
                    [default] interface Microsoft.UI.Composition.Effects.ITemperatureAndTintEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffectSource;
                }

                [marshaling_behavior(agile)]
                [version(0x00010000)]
                runtimeclass TintEffect
                {
                    [default] interface Microsoft.UI.Composition.Effects.ITintEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffectSource;
                }

                [marshaling_behavior(agile)]
                [version(0x00010000)]
                runtimeclass Transform2DEffect
                {
                    [default] interface Microsoft.UI.Composition.Effects.ITransform2DEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffectSource;
                }

                [marshaling_behavior(agile)]
                [version(0x00010000)]
                runtimeclass UnPremultiplyEffect
                {
                    [default] interface Microsoft.UI.Composition.Effects.IUnPremultiplyEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffect;
                    interface Windows.Graphics.Effects.IGraphicsEffectSource;
                }
            }
        }
    }
}
