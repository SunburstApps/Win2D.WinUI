//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "windowscontracts.idl";
import "Windows.Foundation.idl";
import "Microsoft.UI.Xaml.idl";
import "Windows.Storage.Streams.idl";
import "Windows.UI.Xaml.Interop.idl";

// Forward Declare
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            runtimeclass DependencyObject;

            runtimeclass DependencyProperty;

            interface IXamlServiceProvider;

            runtimeclass UIElement;

            apicontract WinUIContract;
        }
    }
}
namespace Windows
{
    namespace Foundation
    {
        typedef struct DateTime DateTime;

        typedef struct Point Point;

        typedef struct Rect Rect;

        typedef struct Size Size;

        typedef struct TimeSpan TimeSpan;

        runtimeclass Uri;
    }
}
namespace Windows
{
    namespace Storage
    {
        namespace Streams
        {
            interface IRandomAccessStream;
        }
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Interop
            {
                typedef struct TypeName TypeName;
            }
        }
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Markup
            {
                typedef struct XamlBinaryWriterErrorInformation XamlBinaryWriterErrorInformation;

                typedef struct XmlnsDefinition XmlnsDefinition;

                interface IComponentConnector;

                interface IDataTemplateComponent;

                interface IMarkupExtension;

                interface IMarkupExtensionFactory;

                interface IMarkupExtensionOverrides;

                interface IProvideValueTarget;

                interface IProvideValueTargetProperty;

                interface IRootObjectProvider;

                interface IUriContext;

                interface IXamlBinaryWriter;

                interface IXamlBinaryWriterStatics;

                interface IXamlBindScopeDiagnostics;

                interface IXamlBindingHelper;

                interface IXamlBindingHelperStatics;

                interface IXamlMarkupHelper;

                interface IXamlMarkupHelperStatics;

                interface IXamlMember;

                interface IXamlMetadataProvider;

                interface IXamlReader;

                interface IXamlReaderStatics;

                interface IXamlType;

                interface IXamlTypeResolver;

                runtimeclass MarkupExtension;

                runtimeclass ProvideValueTargetProperty;

                runtimeclass XamlBinaryWriter;

                runtimeclass XamlBindingHelper;

                runtimeclass XamlMarkupHelper;

                runtimeclass XamlReader;
            }
        }
    }
}

// Generic instantiations

// Type definition
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Markup
            {
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                struct XamlBinaryWriterErrorInformation
                {
                    UINT32 InputStreamIndex;
                    UINT32 LineNumber;
                    UINT32 LinePosition;
                };

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                struct XmlnsDefinition
                {
                    HSTRING XmlNamespace;
                    HSTRING Namespace;
                };

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [uuid(AD401812-B091-51D0-B915-2D682CD2AF10)]
                interface IComponentConnector : IInspectable
                {
                    HRESULT Connect([in] INT32 connectionId, [in] IInspectable* target);
                    HRESULT GetBindingConnector([in] INT32 connectionId, [in] IInspectable* target, [out] [retval] Microsoft.UI.Xaml.Markup.IComponentConnector** result);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [uuid(1743DDF7-38BA-58C9-A2A6-B0AE28713BEE)]
                interface IDataTemplateComponent : IInspectable
                {
                    HRESULT Recycle();
                    HRESULT ProcessBindings([in] IInspectable* item, [in] INT32 itemIndex, [in] INT32 phase, [out] INT32* nextPhase);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Markup.MarkupExtension)]
                [uuid(C355371E-091D-5136-AF4A-BAF5E00616BD)]
                interface IMarkupExtension : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Markup.MarkupExtension)]
                [uuid(20651AFA-5F3A-5F0C-ADB1-B6551F53A6A0)]
                interface IMarkupExtensionFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Markup.MarkupExtension** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Markup.MarkupExtension)]
                [uuid(A12AA575-5D31-5B68-A30F-8495412A351D)]
                interface IMarkupExtensionOverrides : IInspectable
                {
                    [overload("ProvideValue")] HRESULT ProvideValue([out] [retval] IInspectable** result);
                    [overload("ProvideValue")] HRESULT ProvideValueWithIXamlServiceProvider([in] Microsoft.UI.Xaml.IXamlServiceProvider* serviceProvider, [out] [retval] IInspectable** result);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [uuid(3F01FF68-3EFD-591D-A506-DE13FCAABD83)]
                interface IProvideValueTarget : IInspectable
                {
                    [propget] HRESULT TargetObject([out] [retval] IInspectable** value);
                    [propget] HRESULT TargetProperty([out] [retval] IInspectable** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Markup.ProvideValueTargetProperty)]
                [uuid(CE777B1F-B42E-59D1-870D-12FDF0629133)]
                interface IProvideValueTargetProperty : IInspectable
                {
                    [propget] HRESULT Name([out] [retval] HSTRING* value);
                    [propget] HRESULT Type([out] [retval] Windows.UI.Xaml.Interop.TypeName* value);
                    [propget] HRESULT DeclaringType([out] [retval] Windows.UI.Xaml.Interop.TypeName* value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [uuid(13D63599-352F-5EB8-81C1-BC62FB12D6DA)]
                interface IRootObjectProvider : IInspectable
                {
                    [propget] HRESULT RootObject([out] [retval] IInspectable** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [uuid(FB8605F6-8F05-52EE-A01C-3A9E118A6EA2)]
                interface IUriContext : IInspectable
                {
                    [propget] HRESULT BaseUri([out] [retval] Windows.Foundation.Uri** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Markup.XamlBinaryWriter)]
                [uuid(8FB45E3B-E689-55BF-AA11-D83B1C1CDDA1)]
                interface IXamlBinaryWriter : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Markup.XamlBinaryWriter)]
                [uuid(774907FC-C846-517F-ABCC-C3F7E8C3FFC9)]
                interface IXamlBinaryWriterStatics : IInspectable
                {
                    HRESULT Write([in] Windows.Foundation.Collections.IVector<Windows.Storage.Streams.IRandomAccessStream*>* inputStreams, [in] Windows.Foundation.Collections.IVector<Windows.Storage.Streams.IRandomAccessStream*>* outputStreams, [in] Microsoft.UI.Xaml.Markup.IXamlMetadataProvider* xamlMetadataProvider, [out] [retval] Microsoft.UI.Xaml.Markup.XamlBinaryWriterErrorInformation* result);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [uuid(3EA84E4E-FDFE-55A8-A561-EDF5697846D7)]
                interface IXamlBindScopeDiagnostics : IInspectable
                {
                    HRESULT Disable([in] INT32 lineNumber, [in] INT32 columnNumber);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Markup.XamlBindingHelper)]
                [uuid(607A9BF2-5A6D-5C89-A756-BB44F24F28F8)]
                interface IXamlBindingHelper : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Markup.XamlBindingHelper)]
                [uuid(93C7DAD3-F9C2-5372-84DC-9E9C4661D083)]
                interface IXamlBindingHelperStatics : IInspectable
                {
                    [propget] HRESULT DataTemplateComponentProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetDataTemplateComponent([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] Microsoft.UI.Xaml.Markup.IDataTemplateComponent** result);
                    HRESULT SetDataTemplateComponent([in] Microsoft.UI.Xaml.DependencyObject* element, [in] Microsoft.UI.Xaml.Markup.IDataTemplateComponent* value);
                    HRESULT SuspendRendering([in] Microsoft.UI.Xaml.UIElement* target);
                    HRESULT ResumeRendering([in] Microsoft.UI.Xaml.UIElement* target);
                    HRESULT ConvertValue([in] Windows.UI.Xaml.Interop.TypeName type, [in] IInspectable* value, [out] [retval] IInspectable** result);
                    HRESULT SetPropertyFromString([in] IInspectable* dependencyObject, [in] Microsoft.UI.Xaml.DependencyProperty* propertyToSet, [in] HSTRING value);
                    HRESULT SetPropertyFromBoolean([in] IInspectable* dependencyObject, [in] Microsoft.UI.Xaml.DependencyProperty* propertyToSet, [in] boolean value);
                    HRESULT SetPropertyFromChar16([in] IInspectable* dependencyObject, [in] Microsoft.UI.Xaml.DependencyProperty* propertyToSet, [in] WCHAR value);
                    HRESULT SetPropertyFromDateTime([in] IInspectable* dependencyObject, [in] Microsoft.UI.Xaml.DependencyProperty* propertyToSet, [in] Windows.Foundation.DateTime value);
                    HRESULT SetPropertyFromDouble([in] IInspectable* dependencyObject, [in] Microsoft.UI.Xaml.DependencyProperty* propertyToSet, [in] DOUBLE value);
                    HRESULT SetPropertyFromInt32([in] IInspectable* dependencyObject, [in] Microsoft.UI.Xaml.DependencyProperty* propertyToSet, [in] INT32 value);
                    HRESULT SetPropertyFromUInt32([in] IInspectable* dependencyObject, [in] Microsoft.UI.Xaml.DependencyProperty* propertyToSet, [in] UINT32 value);
                    HRESULT SetPropertyFromInt64([in] IInspectable* dependencyObject, [in] Microsoft.UI.Xaml.DependencyProperty* propertyToSet, [in] INT64 value);
                    HRESULT SetPropertyFromUInt64([in] IInspectable* dependencyObject, [in] Microsoft.UI.Xaml.DependencyProperty* propertyToSet, [in] UINT64 value);
                    HRESULT SetPropertyFromSingle([in] IInspectable* dependencyObject, [in] Microsoft.UI.Xaml.DependencyProperty* propertyToSet, [in] FLOAT value);
                    HRESULT SetPropertyFromPoint([in] IInspectable* dependencyObject, [in] Microsoft.UI.Xaml.DependencyProperty* propertyToSet, [in] Windows.Foundation.Point value);
                    HRESULT SetPropertyFromRect([in] IInspectable* dependencyObject, [in] Microsoft.UI.Xaml.DependencyProperty* propertyToSet, [in] Windows.Foundation.Rect value);
                    HRESULT SetPropertyFromSize([in] IInspectable* dependencyObject, [in] Microsoft.UI.Xaml.DependencyProperty* propertyToSet, [in] Windows.Foundation.Size value);
                    HRESULT SetPropertyFromTimeSpan([in] IInspectable* dependencyObject, [in] Microsoft.UI.Xaml.DependencyProperty* propertyToSet, [in] Windows.Foundation.TimeSpan value);
                    HRESULT SetPropertyFromByte([in] IInspectable* dependencyObject, [in] Microsoft.UI.Xaml.DependencyProperty* propertyToSet, [in] BYTE value);
                    HRESULT SetPropertyFromUri([in] IInspectable* dependencyObject, [in] Microsoft.UI.Xaml.DependencyProperty* propertyToSet, [in] Windows.Foundation.Uri* value);
                    HRESULT SetPropertyFromObject([in] IInspectable* dependencyObject, [in] Microsoft.UI.Xaml.DependencyProperty* propertyToSet, [in] IInspectable* value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Markup.XamlMarkupHelper)]
                [uuid(CD677310-3B06-5A13-B31A-401849570858)]
                interface IXamlMarkupHelper : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Markup.XamlMarkupHelper)]
                [uuid(D9A0F6E3-C6CC-5CB6-8999-85788701F339)]
                interface IXamlMarkupHelperStatics : IInspectable
                {
                    HRESULT UnloadObject([in] Microsoft.UI.Xaml.DependencyObject* element);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [uuid(BF3A2913-5C63-50EC-8660-61809BE7B9B9)]
                interface IXamlMember : IInspectable
                {
                    [propget] HRESULT IsAttachable([out] [retval] boolean* value);
                    [propget] HRESULT IsDependencyProperty([out] [retval] boolean* value);
                    [propget] HRESULT IsReadOnly([out] [retval] boolean* value);
                    [propget] HRESULT Name([out] [retval] HSTRING* value);
                    [propget] HRESULT TargetType([out] [retval] Microsoft.UI.Xaml.Markup.IXamlType** value);
                    [propget] HRESULT Type([out] [retval] Microsoft.UI.Xaml.Markup.IXamlType** value);
                    HRESULT GetValue([in] IInspectable* instance, [out] [retval] IInspectable** result);
                    HRESULT SetValue([in] IInspectable* instance, [in] IInspectable* value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [uuid(A96251F0-2214-5D53-8746-CE99A2593CD7)]
                interface IXamlMetadataProvider : IInspectable
                {
                    [default_overload] [overload("GetXamlType")] HRESULT GetXamlType([in] Windows.UI.Xaml.Interop.TypeName type, [out] [retval] Microsoft.UI.Xaml.Markup.IXamlType** result);
                    [overload("GetXamlType")] HRESULT GetXamlTypeByFullName([in] HSTRING fullName, [out] [retval] Microsoft.UI.Xaml.Markup.IXamlType** result);
                    HRESULT GetXmlnsDefinitions([out] UINT32* __resultSize, [out] [retval] [size_is(, *__resultSize)] Microsoft.UI.Xaml.Markup.XmlnsDefinition** result);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Markup.XamlReader)]
                [uuid(54CE54C8-38C6-50D9-AC98-4B03EDDBDE9F)]
                interface IXamlReader : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Markup.XamlReader)]
                [uuid(82A4CD9E-435E-5AEB-8C4F-300CECE45CAE)]
                interface IXamlReaderStatics : IInspectable
                {
                    HRESULT Load([in] HSTRING xaml, [out] [retval] IInspectable** result);
                    HRESULT LoadWithInitialTemplateValidation([in] HSTRING xaml, [out] [retval] IInspectable** result);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [uuid(D24219DF-7EC9-57F1-A27B-6AF251D9C5BC)]
                interface IXamlType : IInspectable
                {
                    [propget] HRESULT BaseType([out] [retval] Microsoft.UI.Xaml.Markup.IXamlType** value);
                    [propget] HRESULT ContentProperty([out] [retval] Microsoft.UI.Xaml.Markup.IXamlMember** value);
                    [propget] HRESULT FullName([out] [retval] HSTRING* value);
                    [propget] HRESULT IsArray([out] [retval] boolean* value);
                    [propget] HRESULT IsCollection([out] [retval] boolean* value);
                    [propget] HRESULT IsConstructible([out] [retval] boolean* value);
                    [propget] HRESULT IsDictionary([out] [retval] boolean* value);
                    [propget] HRESULT IsMarkupExtension([out] [retval] boolean* value);
                    [propget] HRESULT IsBindable([out] [retval] boolean* value);
                    [propget] HRESULT ItemType([out] [retval] Microsoft.UI.Xaml.Markup.IXamlType** value);
                    [propget] HRESULT KeyType([out] [retval] Microsoft.UI.Xaml.Markup.IXamlType** value);
                    [propget] HRESULT BoxedType([out] [retval] Microsoft.UI.Xaml.Markup.IXamlType** value);
                    [propget] HRESULT UnderlyingType([out] [retval] Windows.UI.Xaml.Interop.TypeName* value);
                    HRESULT ActivateInstance([out] [retval] IInspectable** result);
                    HRESULT CreateFromString([in] HSTRING value, [out] [retval] IInspectable** result);
                    HRESULT GetMember([in] HSTRING name, [out] [retval] Microsoft.UI.Xaml.Markup.IXamlMember** result);
                    HRESULT AddToVector([in] IInspectable* instance, [in] IInspectable* value);
                    HRESULT AddToMap([in] IInspectable* instance, [in] IInspectable* key, [in] IInspectable* value);
                    HRESULT RunInitializer();
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [uuid(3FA15615-CACF-547F-B1ED-89DAE8C67452)]
                interface IXamlTypeResolver : IInspectable
                {
                    HRESULT Resolve([in] HSTRING qualifiedTypeName, [out] [retval] Windows.UI.Xaml.Interop.TypeName* result);
                }

                [composable(Microsoft.UI.Xaml.Markup.IMarkupExtensionFactory, public, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass MarkupExtension
                {
                    [default] interface Microsoft.UI.Xaml.Markup.IMarkupExtension;
                    [overridable] interface Microsoft.UI.Xaml.Markup.IMarkupExtensionOverrides;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass ProvideValueTargetProperty
                {
                    [default] interface Microsoft.UI.Xaml.Markup.IProvideValueTargetProperty;
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Markup.IXamlBinaryWriterStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass XamlBinaryWriter
                {
                    [default] interface Microsoft.UI.Xaml.Markup.IXamlBinaryWriter;
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Markup.IXamlBindingHelperStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass XamlBindingHelper
                {
                    [default] interface Microsoft.UI.Xaml.Markup.IXamlBindingHelper;
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Markup.IXamlMarkupHelperStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass XamlMarkupHelper
                {
                    [default] interface Microsoft.UI.Xaml.Markup.IXamlMarkupHelper;
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Markup.IXamlReaderStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass XamlReader
                {
                    [default] interface Microsoft.UI.Xaml.Markup.IXamlReader;
                }
            }
        }
    }
}
