//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "windowscontracts.idl";
import "Windows.Foundation.idl";
import "Microsoft.UI.Composition.idl";
import "Microsoft.UI.Xaml.idl";
import "Microsoft.UI.Xaml.Controls.idl";
import "Microsoft.UI.Xaml.Controls.Primitives.idl";
import "Microsoft.UI.Xaml.Media.Media3D.idl";
import "Windows.Media.Playback.idl";
import "Windows.Storage.Streams.idl";
import "Windows.UI.idl";

// Forward Declare
namespace Microsoft
{
    namespace UI
    {
        namespace Composition
        {
            runtimeclass AnimationPropertyInfo;

            runtimeclass CompositionBrush;

            typedef enum CompositionColorSpace CompositionColorSpace;

            runtimeclass CompositionLight;

            runtimeclass Compositor;

            interface IAnimationObject;

            interface ICompositionSurface;
        }
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            typedef enum ApplicationTheme ApplicationTheme;
        }
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Controls
            {
                runtimeclass MediaElement;

                runtimeclass MediaTransportControls;
            }
        }
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Controls
            {
                namespace Primitives
                {
                    runtimeclass Popup;
                }
            }
        }
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            runtimeclass DependencyObject;

            runtimeclass DependencyProperty;

            delegate ExceptionRoutedEventHandler;
        }
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Media
            {
                namespace Media3D
                {
                    typedef struct Matrix3D Matrix3D;
                }
            }
        }
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            apicontract PrivateApiContract;

            delegate RoutedEventHandler;

            runtimeclass UIElement;

            runtimeclass UIElementWeakCollection;

            apicontract WinUIContract;

            runtimeclass Window;

            runtimeclass XamlRoot;
        }
    }
}
namespace Windows
{
    namespace Foundation
    {
        runtimeclass Deferral;

        interface IClosable;

        typedef struct Point Point;

        typedef struct Rect Rect;

        typedef struct Size Size;

        typedef struct TimeSpan TimeSpan;

        runtimeclass Uri;
    }
}
namespace Windows
{
    namespace Media
    {
        namespace Playback
        {
            typedef enum FailedMediaStreamKind FailedMediaStreamKind;
        }
    }
}
namespace Windows
{
    namespace Storage
    {
        namespace Streams
        {
            interface IInputStream;

            interface IRandomAccessStream;
        }
    }
}
namespace Windows
{
    namespace UI
    {
        typedef struct Color Color;
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Media
            {
                typedef enum AcrylicBackgroundSource AcrylicBackgroundSource;

                typedef enum AlignmentX AlignmentX;

                typedef enum AlignmentY AlignmentY;

                typedef enum AudioCategory AudioCategory;

                typedef enum AudioDeviceType AudioDeviceType;

                typedef enum BrushMappingMode BrushMappingMode;

                typedef enum ColorInterpolationMode ColorInterpolationMode;

                typedef enum ElementCompositeMode ElementCompositeMode;

                typedef enum FastPlayFallbackBehaviour FastPlayFallbackBehaviour;

                typedef enum FillRule FillRule;

                typedef enum GradientSpreadMethod GradientSpreadMethod;

                typedef enum LoadedImageSourceLoadStatus LoadedImageSourceLoadStatus;

                typedef enum MediaCanPlayResponse MediaCanPlayResponse;

                typedef enum MediaElementState MediaElementState;

                typedef enum PenLineCap PenLineCap;

                typedef enum PenLineJoin PenLineJoin;

                typedef enum RevealBrushState RevealBrushState;

                typedef enum Stereo3DVideoPackingMode Stereo3DVideoPackingMode;

                typedef enum Stereo3DVideoRenderMode Stereo3DVideoRenderMode;

                typedef enum Stretch Stretch;

                typedef enum StyleSimulations StyleSimulations;

                typedef enum SweepDirection SweepDirection;

                typedef struct Matrix Matrix;

                delegate RateChangedRoutedEventHandler;

                delegate TimelineMarkerRoutedEventHandler;

                interface IAcrylicBrush;

                interface IAcrylicBrushFactory;

                interface IAcrylicBrushStatics;

                interface IArcSegment;

                interface IArcSegmentStatics;

                interface IBezierSegment;

                interface IBezierSegmentStatics;

                interface IBitmapCache;

                interface IBrush;

                interface IBrushFactory;

                interface IBrushOverrides;

                interface IBrushStatics;

                interface ICacheMode;

                interface ICacheModeFactory;

                interface ICompositeTransform;

                interface ICompositeTransformStatics;

                interface ICompositionTarget;

                interface ICompositionTargetStatics;

                interface IEllipseGeometry;

                interface IEllipseGeometryStatics;

                interface IFontFamily;

                interface IFontFamilyFactory;

                interface IFontFamilyStatics;

                interface IGeneralTransform;

                interface IGeneralTransformFactory;

                interface IGeneralTransformOverrides;

                interface IGeometry;

                interface IGeometryFactory;

                interface IGeometryGroup;

                interface IGeometryGroupStatics;

                interface IGeometryStatics;

                interface IGradientBrush;

                interface IGradientBrushFactory;

                interface IGradientBrushStatics;

                interface IGradientStop;

                interface IGradientStopStatics;

                interface IImageBrush;

                interface IImageBrushStatics;

                interface IImageSource;

                interface IImageSourceFactory;

                interface ILineGeometry;

                interface ILineGeometryStatics;

                interface ILineSegment;

                interface ILineSegmentStatics;

                interface ILinearGradientBrush;

                interface ILinearGradientBrushFactory;

                interface ILinearGradientBrushStatics;

                interface ILoadedImageSourceLoadCompletedEventArgs;

                interface ILoadedImageSurface;

                interface ILoadedImageSurfaceStatics;

                interface IMatrix3DProjection;

                interface IMatrix3DProjectionStatics;

                interface IMatrixHelper;

                interface IMatrixHelperStatics;

                interface IMatrixTransform;

                interface IMatrixTransformStatics;

                interface IMediaTransportControlsThumbnailRequestedEventArgs;

                interface IPartialMediaFailureDetectedEventArgs;

                interface IPathFigure;

                interface IPathFigureStatics;

                interface IPathGeometry;

                interface IPathGeometryStatics;

                interface IPathSegment;

                interface IPathSegmentFactory;

                interface IPlaneProjection;

                interface IPlaneProjectionStatics;

                interface IPolyBezierSegment;

                interface IPolyBezierSegmentStatics;

                interface IPolyLineSegment;

                interface IPolyLineSegmentStatics;

                interface IPolyQuadraticBezierSegment;

                interface IPolyQuadraticBezierSegmentStatics;

                interface IProjection;

                interface IProjectionFactory;

                interface IQuadraticBezierSegment;

                interface IQuadraticBezierSegmentStatics;

                interface IRadialGradientBrush;

                interface IRadialGradientBrushFactory;

                interface IRadialGradientBrushStatics;

                interface IRateChangedRoutedEventArgs;

                interface IRectangleGeometry;

                interface IRectangleGeometryStatics;

                interface IRenderedEventArgs;

                interface IRenderingEventArgs;

                interface IRevealBackgroundBrush;

                interface IRevealBackgroundBrushFactory;

                interface IRevealBorderBrush;

                interface IRevealBorderBrushFactory;

                interface IRevealBrush;

                interface IRevealBrushProtectedFactory;

                interface IRevealBrushStatics;

                interface IRotateTransform;

                interface IRotateTransformStatics;

                interface IScaleTransform;

                interface IScaleTransformStatics;

                interface IShadow;

                interface IShadowFactory;

                interface ISkewTransform;

                interface ISkewTransformStatics;

                interface ISolidColorBrush;

                interface ISolidColorBrushFactory;

                interface ISolidColorBrushStatics;

                interface IThemeShadow;

                interface IThemeShadowFactory;

                interface ITileBrush;

                interface ITileBrushFactory;

                interface ITileBrushStatics;

                interface ITimelineMarker;

                interface ITimelineMarkerCollection;

                interface ITimelineMarkerRoutedEventArgs;

                interface ITimelineMarkerStatics;

                interface ITransform;

                interface ITransformFactory;

                interface ITransformGroup;

                interface ITransformGroupStatics;

                interface ITranslateTransform;

                interface ITranslateTransformStatics;

                interface IVisualTreeHelper;

                interface IVisualTreeHelperStatics;

                interface IXamlCompositionBrushBase;

                interface IXamlCompositionBrushBaseFactory;

                interface IXamlCompositionBrushBaseOverrides;

                interface IXamlCompositionBrushBaseOverridesPrivate;

                interface IXamlCompositionBrushBasePrivates;

                interface IXamlCompositionBrushBaseProtected;

                interface IXamlCompositionBrushBaseStatics;

                interface IXamlLight;

                interface IXamlLightFactory;

                interface IXamlLightOverrides;

                interface IXamlLightProtected;

                interface IXamlLightStatics;

                runtimeclass AcrylicBrush;

                runtimeclass ArcSegment;

                runtimeclass BezierSegment;

                runtimeclass BitmapCache;

                runtimeclass Brush;

                runtimeclass BrushCollection;

                runtimeclass CacheMode;

                runtimeclass CompositeTransform;

                runtimeclass CompositionTarget;

                runtimeclass DoubleCollection;

                runtimeclass EllipseGeometry;

                runtimeclass FontFamily;

                runtimeclass GeneralTransform;

                runtimeclass Geometry;

                runtimeclass GeometryCollection;

                runtimeclass GeometryGroup;

                runtimeclass GradientBrush;

                runtimeclass GradientStop;

                runtimeclass GradientStopCollection;

                runtimeclass ImageBrush;

                runtimeclass ImageSource;

                runtimeclass LineGeometry;

                runtimeclass LineSegment;

                runtimeclass LinearGradientBrush;

                runtimeclass LoadedImageSourceLoadCompletedEventArgs;

                runtimeclass LoadedImageSurface;

                runtimeclass Matrix3DProjection;

                runtimeclass MatrixHelper;

                runtimeclass MatrixTransform;

                runtimeclass MediaTransportControlsThumbnailRequestedEventArgs;

                runtimeclass PartialMediaFailureDetectedEventArgs;

                runtimeclass PathFigure;

                runtimeclass PathFigureCollection;

                runtimeclass PathGeometry;

                runtimeclass PathSegment;

                runtimeclass PathSegmentCollection;

                runtimeclass PlaneProjection;

                runtimeclass PointCollection;

                runtimeclass PolyBezierSegment;

                runtimeclass PolyLineSegment;

                runtimeclass PolyQuadraticBezierSegment;

                runtimeclass Projection;

                runtimeclass QuadraticBezierSegment;

                runtimeclass RadialGradientBrush;

                runtimeclass RateChangedRoutedEventArgs;

                runtimeclass RectangleGeometry;

                runtimeclass RenderedEventArgs;

                runtimeclass RenderingEventArgs;

                runtimeclass RevealBackgroundBrush;

                runtimeclass RevealBorderBrush;

                runtimeclass RevealBrush;

                runtimeclass RotateTransform;

                runtimeclass ScaleTransform;

                runtimeclass Shadow;

                runtimeclass SkewTransform;

                runtimeclass SolidColorBrush;

                runtimeclass ThemeShadow;

                runtimeclass TileBrush;

                runtimeclass TimelineMarker;

                runtimeclass TimelineMarkerCollection;

                runtimeclass TimelineMarkerRoutedEventArgs;

                runtimeclass Transform;

                runtimeclass TransformCollection;

                runtimeclass TransformGroup;

                runtimeclass TranslateTransform;

                runtimeclass VisualTreeHelper;

                runtimeclass XamlCompositionBrushBase;

                runtimeclass XamlLight;
            }
        }
    }
}

// Generic instantiations
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Media
            {
                declare
                {
                    interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Media.Brush*>;

                    interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Media.Geometry*>;

                    interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Media.GradientStop*>;

                    interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Media.PathFigure*>;

                    interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Media.PathSegment*>;

                    interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Media.TimelineMarker*>;

                    interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Media.Transform*>;

                    interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Media.XamlLight*>;

                    interface Windows.Foundation.Collections.IIterator<Microsoft.UI.Xaml.Media.Brush*>;

                    interface Windows.Foundation.Collections.IIterator<Microsoft.UI.Xaml.Media.Geometry*>;

                    interface Windows.Foundation.Collections.IIterator<Microsoft.UI.Xaml.Media.GradientStop*>;

                    interface Windows.Foundation.Collections.IIterator<Microsoft.UI.Xaml.Media.PathFigure*>;

                    interface Windows.Foundation.Collections.IIterator<Microsoft.UI.Xaml.Media.PathSegment*>;

                    interface Windows.Foundation.Collections.IIterator<Microsoft.UI.Xaml.Media.TimelineMarker*>;

                    interface Windows.Foundation.Collections.IIterator<Microsoft.UI.Xaml.Media.Transform*>;

                    interface Windows.Foundation.Collections.IIterator<Microsoft.UI.Xaml.Media.XamlLight*>;

                    interface Windows.Foundation.Collections.IObservableVector<Microsoft.UI.Xaml.Media.GradientStop*>;

                    interface Windows.Foundation.Collections.IVectorView<Microsoft.UI.Xaml.Media.Brush*>;

                    interface Windows.Foundation.Collections.IVectorView<Microsoft.UI.Xaml.Media.Geometry*>;

                    interface Windows.Foundation.Collections.IVectorView<Microsoft.UI.Xaml.Media.GradientStop*>;

                    interface Windows.Foundation.Collections.IVectorView<Microsoft.UI.Xaml.Media.PathFigure*>;

                    interface Windows.Foundation.Collections.IVectorView<Microsoft.UI.Xaml.Media.PathSegment*>;

                    interface Windows.Foundation.Collections.IVectorView<Microsoft.UI.Xaml.Media.TimelineMarker*>;

                    interface Windows.Foundation.Collections.IVectorView<Microsoft.UI.Xaml.Media.Transform*>;

                    interface Windows.Foundation.Collections.IVectorView<Microsoft.UI.Xaml.Media.XamlLight*>;

                    interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Media.Brush*>;

                    interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Media.Geometry*>;

                    interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Media.GradientStop*>;

                    interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Media.PathFigure*>;

                    interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Media.PathSegment*>;

                    interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Media.TimelineMarker*>;

                    interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Media.Transform*>;

                    interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Media.XamlLight*>;

                    interface Windows.Foundation.EventHandler<Microsoft.UI.Xaml.Media.RenderedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.MediaElement*, Microsoft.UI.Xaml.Media.PartialMediaFailureDetectedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Controls.MediaTransportControls*, Microsoft.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgs*>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Media.LoadedImageSurface*, Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs*>;
                }
            }
        }
    }
}

// Type definition
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Media
            {
                [version(0x00000001)]
                enum AcrylicBackgroundSource
                {
                    HostBackdrop = 0,
                    Backdrop     = 1
                };

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                enum AlignmentX
                {
                    Left   = 0,
                    Center = 1,
                    Right  = 2
                };

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                enum AlignmentY
                {
                    Top    = 0,
                    Center = 1,
                    Bottom = 2
                };

                [contract(Microsoft.UI.Xaml.PrivateApiContract, 1.0)]
                enum AudioCategory
                {
                    Other                  = 0,
                    ForegroundOnlyMedia    = 1,
                    BackgroundCapableMedia = 2,
                    Communications         = 3,
                    Alerts                 = 4,
                    SoundEffects           = 5,
                    GameEffects            = 6,
                    GameMedia              = 7,
                    GameChat               = 8,
                    Speech                 = 9,
                    Movie                  = 10,
                    Media                  = 11
                };

                [contract(Microsoft.UI.Xaml.PrivateApiContract, 1.0)]
                enum AudioDeviceType
                {
                    Console        = 0,
                    Multimedia     = 1,
                    Communications = 2
                };

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                enum BrushMappingMode
                {
                    Absolute              = 0,
                    RelativeToBoundingBox = 1
                };

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                enum ColorInterpolationMode
                {
                    ScRgbLinearInterpolation = 0,
                    SRgbLinearInterpolation  = 1
                };

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                enum ElementCompositeMode
                {
                    Inherit    = 0,
                    SourceOver = 1,
                    MinBlend   = 2
                };

                [contract(Microsoft.UI.Xaml.PrivateApiContract, 1.0)]
                enum FastPlayFallbackBehaviour
                {
                    Skip    = 0,
                    Hide    = 1,
                    Disable = 2
                };

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                enum FillRule
                {
                    EvenOdd = 0,
                    Nonzero = 1
                };

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                enum GradientSpreadMethod
                {
                    Pad     = 0,
                    Reflect = 1,
                    Repeat  = 2
                };

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                enum LoadedImageSourceLoadStatus
                {
                    Success       = 0,
                    NetworkError  = 1,
                    InvalidFormat = 2,
                    Other         = 3
                };

                [contract(Microsoft.UI.Xaml.PrivateApiContract, 1.0)]
                enum MediaCanPlayResponse
                {
                    NotSupported = 0,
                    Maybe        = 1,
                    Probably     = 2
                };

                [contract(Microsoft.UI.Xaml.PrivateApiContract, 1.0)]
                enum MediaElementState
                {
                    Closed    = 0,
                    Opening   = 1,
                    Buffering = 2,
                    Playing   = 3,
                    Paused    = 4,
                    Stopped   = 5
                };

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                enum PenLineCap
                {
                    Flat     = 0,
                    Square   = 1,
                    Round    = 2,
                    Triangle = 3
                };

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                enum PenLineJoin
                {
                    Miter = 0,
                    Bevel = 1,
                    Round = 2
                };

                [version(0x00000001)]
                enum RevealBrushState
                {
                    Normal      = 0,
                    PointerOver = 1,
                    Pressed     = 2
                };

                [contract(Microsoft.UI.Xaml.PrivateApiContract, 1.0)]
                enum Stereo3DVideoPackingMode
                {
                    None       = 0,
                    SideBySide = 1,
                    TopBottom  = 2
                };

                [contract(Microsoft.UI.Xaml.PrivateApiContract, 1.0)]
                enum Stereo3DVideoRenderMode
                {
                    Mono   = 0,
                    Stereo = 1
                };

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                enum Stretch
                {
                    None          = 0,
                    Fill          = 1,
                    Uniform       = 2,
                    UniformToFill = 3
                };

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                enum StyleSimulations
                {
                    None                 = 0,
                    BoldSimulation       = 1,
                    ItalicSimulation     = 2,
                    BoldItalicSimulation = 3
                };

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                enum SweepDirection
                {
                    Counterclockwise = 0,
                    Clockwise        = 1
                };

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                struct Matrix
                {
                    DOUBLE M11;
                    DOUBLE M12;
                    DOUBLE M21;
                    DOUBLE M22;
                    DOUBLE OffsetX;
                    DOUBLE OffsetY;
                };

                [contract(Microsoft.UI.Xaml.PrivateApiContract, 1.0)]
                [uuid(3AE21290-7C9D-5C94-AB84-8132A04DF2A5)]
                delegate
                    HRESULT RateChangedRoutedEventHandler([in] IInspectable* sender, [in] Microsoft.UI.Xaml.Media.RateChangedRoutedEventArgs* e);

                [contract(Microsoft.UI.Xaml.PrivateApiContract, 1.0)]
                [uuid(EADA0FFB-E81A-527D-B0DE-D263395D0D5A)]
                delegate
                    HRESULT TimelineMarkerRoutedEventHandler([in] IInspectable* sender, [in] Microsoft.UI.Xaml.Media.TimelineMarkerRoutedEventArgs* e);

                [exclusiveto(Microsoft.UI.Xaml.Media.AcrylicBrush)]
                [uuid(71EC4F17-4ECC-5FC1-8AB0-7CA397EB112B)]
                [version(0x00000001)]
                interface IAcrylicBrush : IInspectable
                {
                    [propget] HRESULT BackgroundSource([out] [retval] Microsoft.UI.Xaml.Media.AcrylicBackgroundSource* value);
                    [propput] HRESULT BackgroundSource([in] Microsoft.UI.Xaml.Media.AcrylicBackgroundSource value);
                    [propget] HRESULT TintColor([out] [retval] Windows.UI.Color* value);
                    [propput] HRESULT TintColor([in] Windows.UI.Color value);
                    [propget] HRESULT TintOpacity([out] [retval] DOUBLE* value);
                    [propput] HRESULT TintOpacity([in] DOUBLE value);
                    [propget] HRESULT TintTransitionDuration([out] [retval] Windows.Foundation.TimeSpan* value);
                    [propput] HRESULT TintTransitionDuration([in] Windows.Foundation.TimeSpan value);
                    [propget] HRESULT AlwaysUseFallback([out] [retval] boolean* value);
                    [propput] HRESULT AlwaysUseFallback([in] boolean value);
                    [propget] HRESULT TintLuminosityOpacity([out] [retval] Windows.Foundation.IReference<DOUBLE>** value);
                    [propput] HRESULT TintLuminosityOpacity([in] Windows.Foundation.IReference<DOUBLE>* value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Media.AcrylicBrush)]
                [uuid(80173353-611D-5A02-8864-1AAA279DFF1C)]
                [version(0x00000001)]
                interface IAcrylicBrushFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Media.AcrylicBrush** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Media.AcrylicBrush)]
                [uuid(7AFF3903-DC1E-51EE-8D47-06D8FC0E46FC)]
                [version(0x00000001)]
                interface IAcrylicBrushStatics : IInspectable
                {
                    [propget] HRESULT BackgroundSourceProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TintColorProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TintOpacityProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TintTransitionDurationProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AlwaysUseFallbackProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TintLuminosityOpacityProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.ArcSegment)]
                [uuid(6B7CE02B-87BE-5ACB-9D3B-C9964C6962D0)]
                interface IArcSegment : IInspectable
                {
                    [propget] HRESULT Point([out] [retval] Windows.Foundation.Point* value);
                    [propput] HRESULT Point([in] Windows.Foundation.Point value);
                    [propget] HRESULT Size([out] [retval] Windows.Foundation.Size* value);
                    [propput] HRESULT Size([in] Windows.Foundation.Size value);
                    [propget] HRESULT RotationAngle([out] [retval] DOUBLE* value);
                    [propput] HRESULT RotationAngle([in] DOUBLE value);
                    [propget] HRESULT IsLargeArc([out] [retval] boolean* value);
                    [propput] HRESULT IsLargeArc([in] boolean value);
                    [propget] HRESULT SweepDirection([out] [retval] Microsoft.UI.Xaml.Media.SweepDirection* value);
                    [propput] HRESULT SweepDirection([in] Microsoft.UI.Xaml.Media.SweepDirection value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.ArcSegment)]
                [uuid(5BA7CCB3-5BC7-5038-99C5-93DC730230CF)]
                interface IArcSegmentStatics : IInspectable
                {
                    [propget] HRESULT PointProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SizeProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT RotationAngleProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsLargeArcProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SweepDirectionProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.BezierSegment)]
                [uuid(0F36BADE-892E-51FE-B94A-3875E86FEAAE)]
                interface IBezierSegment : IInspectable
                {
                    [propget] HRESULT Point1([out] [retval] Windows.Foundation.Point* value);
                    [propput] HRESULT Point1([in] Windows.Foundation.Point value);
                    [propget] HRESULT Point2([out] [retval] Windows.Foundation.Point* value);
                    [propput] HRESULT Point2([in] Windows.Foundation.Point value);
                    [propget] HRESULT Point3([out] [retval] Windows.Foundation.Point* value);
                    [propput] HRESULT Point3([in] Windows.Foundation.Point value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.BezierSegment)]
                [uuid(98E74D5C-C97A-50B0-AE0E-D436DC9DF16D)]
                interface IBezierSegmentStatics : IInspectable
                {
                    [propget] HRESULT Point1Property([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT Point2Property([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT Point3Property([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.BitmapCache)]
                [uuid(4B3A8983-27A2-592A-BDA4-270431EAE038)]
                interface IBitmapCache : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.Brush)]
                [uuid(2DE3CB83-1329-5679-88F8-C822BC5442CB)]
                interface IBrush : IInspectable
                {
                    [propget] HRESULT Opacity([out] [retval] DOUBLE* value);
                    [propput] HRESULT Opacity([in] DOUBLE value);
                    [propget] HRESULT Transform([out] [retval] Microsoft.UI.Xaml.Media.Transform** value);
                    [propput] HRESULT Transform([in] Microsoft.UI.Xaml.Media.Transform* value);
                    [propget] HRESULT RelativeTransform([out] [retval] Microsoft.UI.Xaml.Media.Transform** value);
                    [propput] HRESULT RelativeTransform([in] Microsoft.UI.Xaml.Media.Transform* value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.Brush)]
                [uuid(B5258717-6C49-5BA5-87FD-35DF382647A5)]
                interface IBrushFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Media.Brush** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.Brush)]
                [uuid(B6B08394-BACF-53DB-9AC7-BE1C693E3513)]
                interface IBrushOverrides : IInspectable
                {
                    HRESULT PopulatePropertyInfoOverride([in] HSTRING propertyName, [in] Microsoft.UI.Composition.AnimationPropertyInfo* animationPropertyInfo);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.Brush)]
                [uuid(5B854F50-F818-5F01-91B0-28132D3F5957)]
                interface IBrushStatics : IInspectable
                {
                    [propget] HRESULT OpacityProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TransformProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT RelativeTransformProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.CacheMode)]
                [uuid(2FF1A1CB-0F48-53FD-B1DE-E2223DFB2FF6)]
                interface ICacheMode : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.CacheMode)]
                [uuid(E257811E-DCC5-51D8-829A-3E9400198A41)]
                interface ICacheModeFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Media.CacheMode** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.CompositeTransform)]
                [uuid(55C5F8F3-20E4-5B80-A046-CE4D0F62F2FE)]
                interface ICompositeTransform : IInspectable
                {
                    [propget] HRESULT CenterX([out] [retval] DOUBLE* value);
                    [propput] HRESULT CenterX([in] DOUBLE value);
                    [propget] HRESULT CenterY([out] [retval] DOUBLE* value);
                    [propput] HRESULT CenterY([in] DOUBLE value);
                    [propget] HRESULT ScaleX([out] [retval] DOUBLE* value);
                    [propput] HRESULT ScaleX([in] DOUBLE value);
                    [propget] HRESULT ScaleY([out] [retval] DOUBLE* value);
                    [propput] HRESULT ScaleY([in] DOUBLE value);
                    [propget] HRESULT SkewX([out] [retval] DOUBLE* value);
                    [propput] HRESULT SkewX([in] DOUBLE value);
                    [propget] HRESULT SkewY([out] [retval] DOUBLE* value);
                    [propput] HRESULT SkewY([in] DOUBLE value);
                    [propget] HRESULT Rotation([out] [retval] DOUBLE* value);
                    [propput] HRESULT Rotation([in] DOUBLE value);
                    [propget] HRESULT TranslateX([out] [retval] DOUBLE* value);
                    [propput] HRESULT TranslateX([in] DOUBLE value);
                    [propget] HRESULT TranslateY([out] [retval] DOUBLE* value);
                    [propput] HRESULT TranslateY([in] DOUBLE value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.CompositeTransform)]
                [uuid(7701385B-8EAB-5071-BFA5-B453E1E52B43)]
                interface ICompositeTransformStatics : IInspectable
                {
                    [propget] HRESULT CenterXProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CenterYProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ScaleXProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ScaleYProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SkewXProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SkewYProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT RotationProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TranslateXProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TranslateYProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.CompositionTarget)]
                [uuid(7D938324-E3AD-597C-93F6-520725410E68)]
                interface ICompositionTarget : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.CompositionTarget)]
                [uuid(12A4BE6F-6DB1-5165-B622-D57AB782745B)]
                interface ICompositionTargetStatics : IInspectable
                {
                    [eventadd] HRESULT Rendering([in] Windows.Foundation.EventHandler<IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Rendering([in] EventRegistrationToken token);
                    [eventadd] HRESULT Rendered([in] Windows.Foundation.EventHandler<Microsoft.UI.Xaml.Media.RenderedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Rendered([in] EventRegistrationToken token);
                    [eventadd] HRESULT SurfaceContentsLost([in] Windows.Foundation.EventHandler<IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT SurfaceContentsLost([in] EventRegistrationToken token);
                    HRESULT GetCompositorForCurrentThread([out] [retval] Microsoft.UI.Composition.Compositor** result);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.EllipseGeometry)]
                [uuid(ABABD262-D8E4-5B49-BCE9-0108A5209D45)]
                interface IEllipseGeometry : IInspectable
                {
                    [propget] HRESULT Center([out] [retval] Windows.Foundation.Point* value);
                    [propput] HRESULT Center([in] Windows.Foundation.Point value);
                    [propget] HRESULT RadiusX([out] [retval] DOUBLE* value);
                    [propput] HRESULT RadiusX([in] DOUBLE value);
                    [propget] HRESULT RadiusY([out] [retval] DOUBLE* value);
                    [propput] HRESULT RadiusY([in] DOUBLE value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.EllipseGeometry)]
                [uuid(E8A33C80-D72F-5248-A71F-4B70A0757F89)]
                interface IEllipseGeometryStatics : IInspectable
                {
                    [propget] HRESULT CenterProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT RadiusXProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT RadiusYProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.FontFamily)]
                [uuid(18FA5BC1-7294-527C-BB02-B213E0B3A2A3)]
                interface IFontFamily : IInspectable
                {
                    [propget] HRESULT Source([out] [retval] HSTRING* value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.FontFamily)]
                [uuid(61B88A77-D0F9-5E9E-8C28-EDA01FEDE22E)]
                interface IFontFamilyFactory : IInspectable
                {
                    HRESULT CreateInstanceWithName([in] HSTRING familyName, [in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Media.FontFamily** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.FontFamily)]
                [uuid(B3EADCEB-C471-58FE-93D0-D71B04A7FD54)]
                interface IFontFamilyStatics : IInspectable
                {
                    [propget] HRESULT XamlAutoFontFamily([out] [retval] Microsoft.UI.Xaml.Media.FontFamily** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.GeneralTransform)]
                [uuid(04EEDEEB-31E5-54C0-AE3F-8BD06645D339)]
                interface IGeneralTransform : IInspectable
                {
                    [propget] HRESULT Inverse([out] [retval] Microsoft.UI.Xaml.Media.GeneralTransform** value);
                    HRESULT TransformPoint([in] Windows.Foundation.Point point, [out] [retval] Windows.Foundation.Point* result);
                    HRESULT TryTransform([in] Windows.Foundation.Point inPoint, [out] Windows.Foundation.Point* outPoint, [out] [retval] boolean* returnValue);
                    HRESULT TransformBounds([in] Windows.Foundation.Rect rect, [out] [retval] Windows.Foundation.Rect* result);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.GeneralTransform)]
                [uuid(2F1025A3-5391-5D1B-8382-3CAAA1D26A96)]
                interface IGeneralTransformFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Media.GeneralTransform** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.GeneralTransform)]
                [uuid(CE8970F1-83F8-543F-9CF5-439C461601F1)]
                interface IGeneralTransformOverrides : IInspectable
                {
                    [propget] HRESULT InverseCore([out] [retval] Microsoft.UI.Xaml.Media.GeneralTransform** value);
                    HRESULT TryTransformCore([in] Windows.Foundation.Point inPoint, [out] Windows.Foundation.Point* outPoint, [out] [retval] boolean* returnValue);
                    HRESULT TransformBoundsCore([in] Windows.Foundation.Rect rect, [out] [retval] Windows.Foundation.Rect* result);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.Geometry)]
                [uuid(DC102DCC-3BE2-5414-8599-94B6E76EF39B)]
                interface IGeometry : IInspectable
                {
                    [propget] HRESULT Transform([out] [retval] Microsoft.UI.Xaml.Media.Transform** value);
                    [propput] HRESULT Transform([in] Microsoft.UI.Xaml.Media.Transform* value);
                    [propget] HRESULT Bounds([out] [retval] Windows.Foundation.Rect* value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.Geometry)]
                [uuid(4EDCD536-7949-548A-A9B1-6FF03B951CF3)]
                interface IGeometryFactory : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.GeometryGroup)]
                [uuid(B4DDE569-EA96-5883-914C-EBB7D818DD3A)]
                interface IGeometryGroup : IInspectable
                {
                    [propget] HRESULT FillRule([out] [retval] Microsoft.UI.Xaml.Media.FillRule* value);
                    [propput] HRESULT FillRule([in] Microsoft.UI.Xaml.Media.FillRule value);
                    [propget] HRESULT Children([out] [retval] Microsoft.UI.Xaml.Media.GeometryCollection** value);
                    [propput] HRESULT Children([in] Microsoft.UI.Xaml.Media.GeometryCollection* value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.GeometryGroup)]
                [uuid(56A23DA5-D015-568A-9F8B-11B125CFD9B4)]
                interface IGeometryGroupStatics : IInspectable
                {
                    [propget] HRESULT FillRuleProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ChildrenProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.Geometry)]
                [uuid(349F78D0-4978-5742-B7D2-B34EA2C95600)]
                interface IGeometryStatics : IInspectable
                {
                    [propget] HRESULT Empty([out] [retval] Microsoft.UI.Xaml.Media.Geometry** value);
                    [propget] HRESULT StandardFlatteningTolerance([out] [retval] DOUBLE* value);
                    [propget] HRESULT TransformProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.GradientBrush)]
                [uuid(77C347FA-C4C4-5174-A945-65CAB3AA1C75)]
                interface IGradientBrush : IInspectable
                {
                    [propget] HRESULT SpreadMethod([out] [retval] Microsoft.UI.Xaml.Media.GradientSpreadMethod* value);
                    [propput] HRESULT SpreadMethod([in] Microsoft.UI.Xaml.Media.GradientSpreadMethod value);
                    [propget] HRESULT MappingMode([out] [retval] Microsoft.UI.Xaml.Media.BrushMappingMode* value);
                    [propput] HRESULT MappingMode([in] Microsoft.UI.Xaml.Media.BrushMappingMode value);
                    [propget] HRESULT ColorInterpolationMode([out] [retval] Microsoft.UI.Xaml.Media.ColorInterpolationMode* value);
                    [propput] HRESULT ColorInterpolationMode([in] Microsoft.UI.Xaml.Media.ColorInterpolationMode value);
                    [propget] HRESULT GradientStops([out] [retval] Microsoft.UI.Xaml.Media.GradientStopCollection** value);
                    [propput] HRESULT GradientStops([in] Microsoft.UI.Xaml.Media.GradientStopCollection* value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.GradientBrush)]
                [uuid(64FF6177-1EDA-565B-B7AA-AC50152E3136)]
                interface IGradientBrushFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Media.GradientBrush** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.GradientBrush)]
                [uuid(4D3697D7-C6DB-501C-8FA2-DA30B8C8CA3B)]
                interface IGradientBrushStatics : IInspectable
                {
                    [propget] HRESULT SpreadMethodProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MappingModeProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ColorInterpolationModeProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT GradientStopsProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.GradientStop)]
                [uuid(48BCB039-E8E1-5743-94C3-F766011D3B5D)]
                interface IGradientStop : IInspectable
                {
                    [propget] HRESULT Color([out] [retval] Windows.UI.Color* value);
                    [propput] HRESULT Color([in] Windows.UI.Color value);
                    [propget] HRESULT Offset([out] [retval] DOUBLE* value);
                    [propput] HRESULT Offset([in] DOUBLE value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.GradientStop)]
                [uuid(0B566C1B-37DE-5BFD-B419-0F7C4C0A0523)]
                interface IGradientStopStatics : IInspectable
                {
                    [propget] HRESULT ColorProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OffsetProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.ImageBrush)]
                [uuid(EDCD91A3-A868-5BA6-9489-5B12B4C29D85)]
                interface IImageBrush : IInspectable
                {
                    [propget] HRESULT ImageSource([out] [retval] Microsoft.UI.Xaml.Media.ImageSource** value);
                    [propput] HRESULT ImageSource([in] Microsoft.UI.Xaml.Media.ImageSource* value);
                    [eventadd] HRESULT ImageFailed([in] Microsoft.UI.Xaml.ExceptionRoutedEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ImageFailed([in] EventRegistrationToken token);
                    [eventadd] HRESULT ImageOpened([in] Microsoft.UI.Xaml.RoutedEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ImageOpened([in] EventRegistrationToken token);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.ImageBrush)]
                [uuid(CE8082DC-A505-5B4F-8861-79630F52C189)]
                interface IImageBrushStatics : IInspectable
                {
                    [propget] HRESULT ImageSourceProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.ImageSource)]
                [uuid(6C2038F6-D6D5-55E9-9B9E-082F12DBFF60)]
                interface IImageSource : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.ImageSource)]
                [uuid(0B1E64A3-E353-5901-B84B-AE9842AEA5CD)]
                interface IImageSourceFactory : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.LineGeometry)]
                [uuid(467EF3C5-BC43-50ED-BB23-16BE2C63356E)]
                interface ILineGeometry : IInspectable
                {
                    [propget] HRESULT StartPoint([out] [retval] Windows.Foundation.Point* value);
                    [propput] HRESULT StartPoint([in] Windows.Foundation.Point value);
                    [propget] HRESULT EndPoint([out] [retval] Windows.Foundation.Point* value);
                    [propput] HRESULT EndPoint([in] Windows.Foundation.Point value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.LineGeometry)]
                [uuid(CE0ECBF3-9389-5304-B7C8-5E610902F258)]
                interface ILineGeometryStatics : IInspectable
                {
                    [propget] HRESULT StartPointProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT EndPointProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.LineSegment)]
                [uuid(0C618E54-D883-588C-8875-BD8DFD6A6A3E)]
                interface ILineSegment : IInspectable
                {
                    [propget] HRESULT Point([out] [retval] Windows.Foundation.Point* value);
                    [propput] HRESULT Point([in] Windows.Foundation.Point value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.LineSegment)]
                [uuid(C3EC48A9-B9C0-561F-9925-D1D1B2A6BAE6)]
                interface ILineSegmentStatics : IInspectable
                {
                    [propget] HRESULT PointProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.LinearGradientBrush)]
                [uuid(C0AB9638-1BD9-5FA4-9649-48CFA12F0D1E)]
                interface ILinearGradientBrush : IInspectable
                {
                    [propget] HRESULT StartPoint([out] [retval] Windows.Foundation.Point* value);
                    [propput] HRESULT StartPoint([in] Windows.Foundation.Point value);
                    [propget] HRESULT EndPoint([out] [retval] Windows.Foundation.Point* value);
                    [propput] HRESULT EndPoint([in] Windows.Foundation.Point value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.LinearGradientBrush)]
                [uuid(C0BA7DE3-CCFD-534C-882F-3AB39AE723F3)]
                interface ILinearGradientBrushFactory : IInspectable
                {
                    HRESULT CreateInstanceWithGradientStopCollectionAndAngle([in] Microsoft.UI.Xaml.Media.GradientStopCollection* gradientStopCollection, [in] DOUBLE angle, [out] [retval] Microsoft.UI.Xaml.Media.LinearGradientBrush** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.LinearGradientBrush)]
                [uuid(DF029E84-F6BE-5B7E-BA22-3B4E7A6BCEEE)]
                interface ILinearGradientBrushStatics : IInspectable
                {
                    [propget] HRESULT StartPointProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT EndPointProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs)]
                [uuid(4121BB7C-48E8-542D-B950-3EA7E709C0D6)]
                interface ILoadedImageSourceLoadCompletedEventArgs : IInspectable
                {
                    [propget] HRESULT Status([out] [retval] Microsoft.UI.Xaml.Media.LoadedImageSourceLoadStatus* value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.LoadedImageSurface)]
                [uuid(B5275540-1706-5851-95CC-498EE81FB183)]
                interface ILoadedImageSurface : IInspectable
                {
                    [propget] HRESULT DecodedPhysicalSize([out] [retval] Windows.Foundation.Size* value);
                    [propget] HRESULT DecodedSize([out] [retval] Windows.Foundation.Size* value);
                    [propget] HRESULT NaturalSize([out] [retval] Windows.Foundation.Size* value);
                    [eventadd] HRESULT LoadCompleted([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Media.LoadedImageSurface*, Microsoft.UI.Xaml.Media.LoadedImageSourceLoadCompletedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT LoadCompleted([in] EventRegistrationToken token);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.LoadedImageSurface)]
                [uuid(25D390C4-4E32-52C2-868F-F2EDE74EE442)]
                interface ILoadedImageSurfaceStatics : IInspectable
                {
                    [overload("StartLoadFromUri")] HRESULT StartLoadFromUriWithSize([in] Windows.Foundation.Uri* uri, [in] Windows.Foundation.Size desiredMaxSize, [out] [retval] Microsoft.UI.Xaml.Media.LoadedImageSurface** result);
                    [overload("StartLoadFromUri")] HRESULT StartLoadFromUri([in] Windows.Foundation.Uri* uri, [out] [retval] Microsoft.UI.Xaml.Media.LoadedImageSurface** result);
                    [overload("StartLoadFromStream")] HRESULT StartLoadFromStreamWithSize([in] Windows.Storage.Streams.IRandomAccessStream* stream, [in] Windows.Foundation.Size desiredMaxSize, [out] [retval] Microsoft.UI.Xaml.Media.LoadedImageSurface** result);
                    [overload("StartLoadFromStream")] HRESULT StartLoadFromStream([in] Windows.Storage.Streams.IRandomAccessStream* stream, [out] [retval] Microsoft.UI.Xaml.Media.LoadedImageSurface** result);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.Matrix3DProjection)]
                [uuid(FC3338EF-F390-5BB1-932E-3B7C08788187)]
                interface IMatrix3DProjection : IInspectable
                {
                    [propget] HRESULT ProjectionMatrix([out] [retval] Microsoft.UI.Xaml.Media.Media3D.Matrix3D* value);
                    [propput] HRESULT ProjectionMatrix([in] Microsoft.UI.Xaml.Media.Media3D.Matrix3D value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.Matrix3DProjection)]
                [uuid(A5A7E267-7A5D-58EF-A8CD-B88EBDF82207)]
                interface IMatrix3DProjectionStatics : IInspectable
                {
                    [propget] HRESULT ProjectionMatrixProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.MatrixHelper)]
                [uuid(9571FD76-CC5C-534D-AC85-CB4AC870C912)]
                interface IMatrixHelper : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.MatrixHelper)]
                [uuid(5762CF6B-4FB0-532F-8368-DE960042701F)]
                interface IMatrixHelperStatics : IInspectable
                {
                    [propget] HRESULT Identity([out] [retval] Microsoft.UI.Xaml.Media.Matrix* value);
                    HRESULT FromElements([in] DOUBLE m11, [in] DOUBLE m12, [in] DOUBLE m21, [in] DOUBLE m22, [in] DOUBLE offsetX, [in] DOUBLE offsetY, [out] [retval] Microsoft.UI.Xaml.Media.Matrix* result);
                    HRESULT GetIsIdentity([in] Microsoft.UI.Xaml.Media.Matrix target, [out] [retval] boolean* result);
                    HRESULT Transform([in] Microsoft.UI.Xaml.Media.Matrix target, [in] Windows.Foundation.Point point, [out] [retval] Windows.Foundation.Point* result);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.MatrixTransform)]
                [uuid(F03138E1-ADDD-59FA-B993-3EA69B888ACE)]
                interface IMatrixTransform : IInspectable
                {
                    [propget] HRESULT Matrix([out] [retval] Microsoft.UI.Xaml.Media.Matrix* value);
                    [propput] HRESULT Matrix([in] Microsoft.UI.Xaml.Media.Matrix value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.MatrixTransform)]
                [uuid(D7DB9DE3-5071-5115-98FB-CCAD2FD46E44)]
                interface IMatrixTransformStatics : IInspectable
                {
                    [propget] HRESULT MatrixProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.PrivateApiContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.MediaTransportControlsThumbnailRequestedEventArgs)]
                [uuid(FE0FFB86-74B0-5031-ACCC-B34D0382A637)]
                interface IMediaTransportControlsThumbnailRequestedEventArgs : IInspectable
                {
                    HRESULT SetThumbnailImage([in] Windows.Storage.Streams.IInputStream* source);
                    HRESULT GetDeferral([out] [retval] Windows.Foundation.Deferral** result);
                }

                [contract(Microsoft.UI.Xaml.PrivateApiContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.PartialMediaFailureDetectedEventArgs)]
                [uuid(40292B1E-C3B7-5BBD-8E75-8926FADA3CE6)]
                interface IPartialMediaFailureDetectedEventArgs : IInspectable
                {
                    [propget] HRESULT StreamKind([out] [retval] Windows.Media.Playback.FailedMediaStreamKind* value);
                    [propget] HRESULT ExtendedError([out] [retval] HRESULT* value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.PathFigure)]
                [uuid(0EE00712-BF65-5F27-9C06-14ABDF6656D7)]
                interface IPathFigure : IInspectable
                {
                    [propget] HRESULT Segments([out] [retval] Microsoft.UI.Xaml.Media.PathSegmentCollection** value);
                    [propput] HRESULT Segments([in] Microsoft.UI.Xaml.Media.PathSegmentCollection* value);
                    [propget] HRESULT StartPoint([out] [retval] Windows.Foundation.Point* value);
                    [propput] HRESULT StartPoint([in] Windows.Foundation.Point value);
                    [propget] HRESULT IsClosed([out] [retval] boolean* value);
                    [propput] HRESULT IsClosed([in] boolean value);
                    [propget] HRESULT IsFilled([out] [retval] boolean* value);
                    [propput] HRESULT IsFilled([in] boolean value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.PathFigure)]
                [uuid(93BC33C4-879A-5EDB-B8D7-7ECB861A7314)]
                interface IPathFigureStatics : IInspectable
                {
                    [propget] HRESULT SegmentsProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT StartPointProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsClosedProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsFilledProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.PathGeometry)]
                [uuid(11B9D95D-D3D9-5337-A05C-73A27A2B5124)]
                interface IPathGeometry : IInspectable
                {
                    [propget] HRESULT FillRule([out] [retval] Microsoft.UI.Xaml.Media.FillRule* value);
                    [propput] HRESULT FillRule([in] Microsoft.UI.Xaml.Media.FillRule value);
                    [propget] HRESULT Figures([out] [retval] Microsoft.UI.Xaml.Media.PathFigureCollection** value);
                    [propput] HRESULT Figures([in] Microsoft.UI.Xaml.Media.PathFigureCollection* value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.PathGeometry)]
                [uuid(D7F408FE-6C3A-5CCE-91CC-C5A95D4B345A)]
                interface IPathGeometryStatics : IInspectable
                {
                    [propget] HRESULT FillRuleProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FiguresProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.PathSegment)]
                [uuid(B922EBBE-08F0-57E9-8785-7E57097F3BD4)]
                interface IPathSegment : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.PathSegment)]
                [uuid(0559A4FF-AC4B-5BB7-B541-D373960E083B)]
                interface IPathSegmentFactory : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.PlaneProjection)]
                [uuid(D3E22836-0322-5D75-941C-A5FFB05192B2)]
                interface IPlaneProjection : IInspectable
                {
                    [propget] HRESULT LocalOffsetX([out] [retval] DOUBLE* value);
                    [propput] HRESULT LocalOffsetX([in] DOUBLE value);
                    [propget] HRESULT LocalOffsetY([out] [retval] DOUBLE* value);
                    [propput] HRESULT LocalOffsetY([in] DOUBLE value);
                    [propget] HRESULT LocalOffsetZ([out] [retval] DOUBLE* value);
                    [propput] HRESULT LocalOffsetZ([in] DOUBLE value);
                    [propget] HRESULT RotationX([out] [retval] DOUBLE* value);
                    [propput] HRESULT RotationX([in] DOUBLE value);
                    [propget] HRESULT RotationY([out] [retval] DOUBLE* value);
                    [propput] HRESULT RotationY([in] DOUBLE value);
                    [propget] HRESULT RotationZ([out] [retval] DOUBLE* value);
                    [propput] HRESULT RotationZ([in] DOUBLE value);
                    [propget] HRESULT CenterOfRotationX([out] [retval] DOUBLE* value);
                    [propput] HRESULT CenterOfRotationX([in] DOUBLE value);
                    [propget] HRESULT CenterOfRotationY([out] [retval] DOUBLE* value);
                    [propput] HRESULT CenterOfRotationY([in] DOUBLE value);
                    [propget] HRESULT CenterOfRotationZ([out] [retval] DOUBLE* value);
                    [propput] HRESULT CenterOfRotationZ([in] DOUBLE value);
                    [propget] HRESULT GlobalOffsetX([out] [retval] DOUBLE* value);
                    [propput] HRESULT GlobalOffsetX([in] DOUBLE value);
                    [propget] HRESULT GlobalOffsetY([out] [retval] DOUBLE* value);
                    [propput] HRESULT GlobalOffsetY([in] DOUBLE value);
                    [propget] HRESULT GlobalOffsetZ([out] [retval] DOUBLE* value);
                    [propput] HRESULT GlobalOffsetZ([in] DOUBLE value);
                    [propget] HRESULT ProjectionMatrix([out] [retval] Microsoft.UI.Xaml.Media.Media3D.Matrix3D* value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.PlaneProjection)]
                [uuid(96D86C18-90DD-564A-828A-8735E4219B1D)]
                interface IPlaneProjectionStatics : IInspectable
                {
                    [propget] HRESULT LocalOffsetXProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT LocalOffsetYProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT LocalOffsetZProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT RotationXProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT RotationYProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT RotationZProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CenterOfRotationXProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CenterOfRotationYProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CenterOfRotationZProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT GlobalOffsetXProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT GlobalOffsetYProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT GlobalOffsetZProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ProjectionMatrixProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.PolyBezierSegment)]
                [uuid(D7F760A0-B93A-562A-8118-6330ED22C307)]
                interface IPolyBezierSegment : IInspectable
                {
                    [propget] HRESULT Points([out] [retval] Microsoft.UI.Xaml.Media.PointCollection** value);
                    [propput] HRESULT Points([in] Microsoft.UI.Xaml.Media.PointCollection* value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.PolyBezierSegment)]
                [uuid(738EF089-A80F-53E0-816F-F787A4461907)]
                interface IPolyBezierSegmentStatics : IInspectable
                {
                    [propget] HRESULT PointsProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.PolyLineSegment)]
                [uuid(426EF287-0287-536F-AD9E-6A05ECBB323A)]
                interface IPolyLineSegment : IInspectable
                {
                    [propget] HRESULT Points([out] [retval] Microsoft.UI.Xaml.Media.PointCollection** value);
                    [propput] HRESULT Points([in] Microsoft.UI.Xaml.Media.PointCollection* value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.PolyLineSegment)]
                [uuid(CF54E568-101A-5349-9189-6F9A1E7F5280)]
                interface IPolyLineSegmentStatics : IInspectable
                {
                    [propget] HRESULT PointsProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment)]
                [uuid(56372F4C-C531-5C3E-B0E0-1645F5A8D872)]
                interface IPolyQuadraticBezierSegment : IInspectable
                {
                    [propget] HRESULT Points([out] [retval] Microsoft.UI.Xaml.Media.PointCollection** value);
                    [propput] HRESULT Points([in] Microsoft.UI.Xaml.Media.PointCollection* value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.PolyQuadraticBezierSegment)]
                [uuid(7EB6374D-CD30-5507-B2AB-C4E3A7DC60BF)]
                interface IPolyQuadraticBezierSegmentStatics : IInspectable
                {
                    [propget] HRESULT PointsProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.Projection)]
                [uuid(C95364B3-6058-5EE5-9E28-D38B7679FCD4)]
                interface IProjection : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.Projection)]
                [uuid(870EA34F-DB61-5B75-89AD-E0480C802937)]
                interface IProjectionFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Media.Projection** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.QuadraticBezierSegment)]
                [uuid(6048ABE4-7A12-5195-BD61-71DFD0361C38)]
                interface IQuadraticBezierSegment : IInspectable
                {
                    [propget] HRESULT Point1([out] [retval] Windows.Foundation.Point* value);
                    [propput] HRESULT Point1([in] Windows.Foundation.Point value);
                    [propget] HRESULT Point2([out] [retval] Windows.Foundation.Point* value);
                    [propput] HRESULT Point2([in] Windows.Foundation.Point value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.QuadraticBezierSegment)]
                [uuid(4D56EA65-0A1A-528A-A5B6-41DA03AC71F4)]
                interface IQuadraticBezierSegmentStatics : IInspectable
                {
                    [propget] HRESULT Point1Property([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT Point2Property([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Media.RadialGradientBrush)]
                [uuid(5D493CE1-B844-546A-B772-B3BCBA7E98EE)]
                [version(0x00000001)]
                interface IRadialGradientBrush : IInspectable
                {
                    [propget] HRESULT Center([out] [retval] Windows.Foundation.Point* value);
                    [propput] HRESULT Center([in] Windows.Foundation.Point value);
                    [propget] HRESULT RadiusX([out] [retval] DOUBLE* value);
                    [propput] HRESULT RadiusX([in] DOUBLE value);
                    [propget] HRESULT RadiusY([out] [retval] DOUBLE* value);
                    [propput] HRESULT RadiusY([in] DOUBLE value);
                    [propget] HRESULT GradientOrigin([out] [retval] Windows.Foundation.Point* value);
                    [propput] HRESULT GradientOrigin([in] Windows.Foundation.Point value);
                    [propget] HRESULT MappingMode([out] [retval] Microsoft.UI.Xaml.Media.BrushMappingMode* value);
                    [propput] HRESULT MappingMode([in] Microsoft.UI.Xaml.Media.BrushMappingMode value);
                    [propget] HRESULT InterpolationSpace([out] [retval] Microsoft.UI.Composition.CompositionColorSpace* value);
                    [propput] HRESULT InterpolationSpace([in] Microsoft.UI.Composition.CompositionColorSpace value);
                    [propget] HRESULT SpreadMethod([out] [retval] Microsoft.UI.Xaml.Media.GradientSpreadMethod* value);
                    [propput] HRESULT SpreadMethod([in] Microsoft.UI.Xaml.Media.GradientSpreadMethod value);
                    [propget] HRESULT GradientStops([out] [retval] Windows.Foundation.Collections.IObservableVector<Microsoft.UI.Xaml.Media.GradientStop*>** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Media.RadialGradientBrush)]
                [uuid(D90BA26E-9E67-54BD-A2D9-61C8F9F1D433)]
                [version(0x00000001)]
                interface IRadialGradientBrushFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Media.RadialGradientBrush** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Media.RadialGradientBrush)]
                [uuid(F275A0B8-66F9-5B7D-A415-7EDA65FE6DD3)]
                [version(0x00000001)]
                interface IRadialGradientBrushStatics : IInspectable
                {
                    [propget] HRESULT CenterProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT RadiusXProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT RadiusYProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT GradientOriginProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT InterpolationSpaceProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MappingModeProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT SpreadMethodProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.PrivateApiContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.RateChangedRoutedEventArgs)]
                [uuid(07873493-7BE3-5CA8-824F-EDCF3EA46BB7)]
                interface IRateChangedRoutedEventArgs : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.RectangleGeometry)]
                [uuid(B6143890-A5F5-54E0-AB42-D88BAB451F04)]
                interface IRectangleGeometry : IInspectable
                {
                    [propget] HRESULT Rect([out] [retval] Windows.Foundation.Rect* value);
                    [propput] HRESULT Rect([in] Windows.Foundation.Rect value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.RectangleGeometry)]
                [uuid(1AE7AC26-8A8B-55A5-B035-586E2B642919)]
                interface IRectangleGeometryStatics : IInspectable
                {
                    [propget] HRESULT RectProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.RenderedEventArgs)]
                [uuid(B268B885-118D-5B66-8099-3B6BB8644726)]
                interface IRenderedEventArgs : IInspectable
                {
                    [propget] HRESULT FrameDuration([out] [retval] Windows.Foundation.TimeSpan* value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.RenderingEventArgs)]
                [uuid(A67C8F8D-1885-5FC9-975C-901224F79B1E)]
                interface IRenderingEventArgs : IInspectable
                {
                    [propget] HRESULT RenderingTime([out] [retval] Windows.Foundation.TimeSpan* value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Media.RevealBackgroundBrush)]
                [uuid(3741D912-FC83-5C92-A22F-EFC29588B373)]
                [version(0x00000001)]
                interface IRevealBackgroundBrush : IInspectable
                {
                }

                [exclusiveto(Microsoft.UI.Xaml.Media.RevealBackgroundBrush)]
                [uuid(7E6F2B0A-E70D-529F-8097-43E023F2943B)]
                [version(0x00000001)]
                interface IRevealBackgroundBrushFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Media.RevealBackgroundBrush** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Media.RevealBorderBrush)]
                [uuid(F85DBFCB-2EC6-5C73-A8BE-3864C980B917)]
                [version(0x00000001)]
                interface IRevealBorderBrush : IInspectable
                {
                }

                [exclusiveto(Microsoft.UI.Xaml.Media.RevealBorderBrush)]
                [uuid(C677BDC2-F045-532C-BB13-3CEEE19143B2)]
                [version(0x00000001)]
                interface IRevealBorderBrushFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Media.RevealBorderBrush** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Media.RevealBrush)]
                [uuid(30347330-A703-5086-BD82-4E28CE833233)]
                [version(0x00000001)]
                interface IRevealBrush : IInspectable
                {
                    [propget] HRESULT Color([out] [retval] Windows.UI.Color* value);
                    [propput] HRESULT Color([in] Windows.UI.Color value);
                    [propget] HRESULT TargetTheme([out] [retval] Microsoft.UI.Xaml.ApplicationTheme* value);
                    [propput] HRESULT TargetTheme([in] Microsoft.UI.Xaml.ApplicationTheme value);
                    [propget] HRESULT AlwaysUseFallback([out] [retval] boolean* value);
                    [propput] HRESULT AlwaysUseFallback([in] boolean value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Media.RevealBrush)]
                [uuid(46A94F5B-8ABD-5571-B049-7F76E3F967C9)]
                [version(0x00000001)]
                interface IRevealBrushProtectedFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Media.RevealBrush** value);
                }

                [exclusiveto(Microsoft.UI.Xaml.Media.RevealBrush)]
                [uuid(F44D7CCB-7A1E-5D64-AB82-A6E5290BE8D1)]
                [version(0x00000001)]
                interface IRevealBrushStatics : IInspectable
                {
                    [propget] HRESULT ColorProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TargetThemeProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AlwaysUseFallbackProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT StateProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT SetState([in] Microsoft.UI.Xaml.UIElement* element, [in] Microsoft.UI.Xaml.Media.RevealBrushState value);
                    HRESULT GetState([in] Microsoft.UI.Xaml.UIElement* element, [out] [retval] Microsoft.UI.Xaml.Media.RevealBrushState* result);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.RotateTransform)]
                [uuid(D4686E7C-A374-5CAC-8927-0EF07C5B254D)]
                interface IRotateTransform : IInspectable
                {
                    [propget] HRESULT CenterX([out] [retval] DOUBLE* value);
                    [propput] HRESULT CenterX([in] DOUBLE value);
                    [propget] HRESULT CenterY([out] [retval] DOUBLE* value);
                    [propput] HRESULT CenterY([in] DOUBLE value);
                    [propget] HRESULT Angle([out] [retval] DOUBLE* value);
                    [propput] HRESULT Angle([in] DOUBLE value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.RotateTransform)]
                [uuid(8EC4C662-04F8-51D7-BCB2-17F10C2FAA38)]
                interface IRotateTransformStatics : IInspectable
                {
                    [propget] HRESULT CenterXProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CenterYProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AngleProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.ScaleTransform)]
                [uuid(94B064A4-34F0-5EF9-8B67-444F5699F52A)]
                interface IScaleTransform : IInspectable
                {
                    [propget] HRESULT CenterX([out] [retval] DOUBLE* value);
                    [propput] HRESULT CenterX([in] DOUBLE value);
                    [propget] HRESULT CenterY([out] [retval] DOUBLE* value);
                    [propput] HRESULT CenterY([in] DOUBLE value);
                    [propget] HRESULT ScaleX([out] [retval] DOUBLE* value);
                    [propput] HRESULT ScaleX([in] DOUBLE value);
                    [propget] HRESULT ScaleY([out] [retval] DOUBLE* value);
                    [propput] HRESULT ScaleY([in] DOUBLE value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.ScaleTransform)]
                [uuid(76485BD5-A5BF-5790-A837-8193C84DF353)]
                interface IScaleTransformStatics : IInspectable
                {
                    [propget] HRESULT CenterXProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CenterYProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ScaleXProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ScaleYProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.Shadow)]
                [uuid(CC12FD6A-50AA-5EB3-9A0E-B938B454C439)]
                interface IShadow : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.Shadow)]
                [uuid(C9115FBB-FCC3-52BF-B8EE-C348102A46E0)]
                interface IShadowFactory : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.SkewTransform)]
                [uuid(230ABAA6-A9B6-5210-873F-36BEA29D7C06)]
                interface ISkewTransform : IInspectable
                {
                    [propget] HRESULT CenterX([out] [retval] DOUBLE* value);
                    [propput] HRESULT CenterX([in] DOUBLE value);
                    [propget] HRESULT CenterY([out] [retval] DOUBLE* value);
                    [propput] HRESULT CenterY([in] DOUBLE value);
                    [propget] HRESULT AngleX([out] [retval] DOUBLE* value);
                    [propput] HRESULT AngleX([in] DOUBLE value);
                    [propget] HRESULT AngleY([out] [retval] DOUBLE* value);
                    [propput] HRESULT AngleY([in] DOUBLE value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.SkewTransform)]
                [uuid(93265150-53D0-52E3-88A3-3D93E2ED861A)]
                interface ISkewTransformStatics : IInspectable
                {
                    [propget] HRESULT CenterXProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CenterYProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AngleXProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AngleYProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.SolidColorBrush)]
                [uuid(B3865C31-37C8-55C1-8A72-D41C67642E2A)]
                interface ISolidColorBrush : IInspectable
                {
                    [propget] HRESULT Color([out] [retval] Windows.UI.Color* value);
                    [propput] HRESULT Color([in] Windows.UI.Color value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.SolidColorBrush)]
                [uuid(7B559384-4DAA-54F4-91EF-33A23FD816CA)]
                interface ISolidColorBrushFactory : IInspectable
                {
                    HRESULT CreateInstanceWithColor([in] Windows.UI.Color color, [out] [retval] Microsoft.UI.Xaml.Media.SolidColorBrush** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.SolidColorBrush)]
                [uuid(6BC16DA0-C4E6-59B8-995B-B31E48424C07)]
                interface ISolidColorBrushStatics : IInspectable
                {
                    [propget] HRESULT ColorProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.ThemeShadow)]
                [uuid(C264208A-D1F4-58AE-8A88-FC59148BEE69)]
                interface IThemeShadow : IInspectable
                {
                    [propget] HRESULT Receivers([out] [retval] Microsoft.UI.Xaml.UIElementWeakCollection** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.ThemeShadow)]
                [uuid(704A9C96-76A0-569E-8CEB-34E92A23FE11)]
                interface IThemeShadowFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Media.ThemeShadow** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.TileBrush)]
                [uuid(EE46060D-CABC-505D-883C-75D2E0E45875)]
                interface ITileBrush : IInspectable
                {
                    [propget] HRESULT AlignmentX([out] [retval] Microsoft.UI.Xaml.Media.AlignmentX* value);
                    [propput] HRESULT AlignmentX([in] Microsoft.UI.Xaml.Media.AlignmentX value);
                    [propget] HRESULT AlignmentY([out] [retval] Microsoft.UI.Xaml.Media.AlignmentY* value);
                    [propput] HRESULT AlignmentY([in] Microsoft.UI.Xaml.Media.AlignmentY value);
                    [propget] HRESULT Stretch([out] [retval] Microsoft.UI.Xaml.Media.Stretch* value);
                    [propput] HRESULT Stretch([in] Microsoft.UI.Xaml.Media.Stretch value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.TileBrush)]
                [uuid(8542E5E6-5177-506F-8A3B-AA7DA651F099)]
                interface ITileBrushFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Media.TileBrush** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.TileBrush)]
                [uuid(F402197B-9047-5F8A-90BC-6F5D8C748A5F)]
                interface ITileBrushStatics : IInspectable
                {
                    [propget] HRESULT AlignmentXProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AlignmentYProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT StretchProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.PrivateApiContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.TimelineMarker)]
                [uuid(0D8307EE-0BBB-5EE3-80A9-B953D83F1FA1)]
                interface ITimelineMarker : IInspectable
                {
                    [propget] HRESULT Time([out] [retval] Windows.Foundation.TimeSpan* value);
                    [propput] HRESULT Time([in] Windows.Foundation.TimeSpan value);
                    [propget] HRESULT Type([out] [retval] HSTRING* value);
                    [propput] HRESULT Type([in] HSTRING value);
                    [propget] HRESULT Text([out] [retval] HSTRING* value);
                    [propput] HRESULT Text([in] HSTRING value);
                }

                [contract(Microsoft.UI.Xaml.PrivateApiContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.TimelineMarkerCollection)]
                [uuid(18E3ED41-9E59-5EF1-9252-BEDEA8CC6FC5)]
                interface ITimelineMarkerCollection : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.PrivateApiContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.TimelineMarkerRoutedEventArgs)]
                [uuid(44094816-6F81-5BA1-9548-233F72F93056)]
                interface ITimelineMarkerRoutedEventArgs : IInspectable
                {
                    [propget] HRESULT Marker([out] [retval] Microsoft.UI.Xaml.Media.TimelineMarker** value);
                    [propput] HRESULT Marker([in] Microsoft.UI.Xaml.Media.TimelineMarker* value);
                }

                [contract(Microsoft.UI.Xaml.PrivateApiContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.TimelineMarker)]
                [uuid(185FA9E3-90F1-5A6D-979F-4C71EA283BF6)]
                interface ITimelineMarkerStatics : IInspectable
                {
                    [propget] HRESULT TimeProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TypeProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.Transform)]
                [uuid(92A8DEE5-1413-56B9-8CCA-3C46918FDE1B)]
                interface ITransform : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.Transform)]
                [uuid(7DA293F9-B82E-5D15-B623-C08210CBB640)]
                interface ITransformFactory : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.TransformGroup)]
                [uuid(17C55F3B-899C-588F-8BD4-40FA3A5FCB04)]
                interface ITransformGroup : IInspectable
                {
                    [propget] HRESULT Children([out] [retval] Microsoft.UI.Xaml.Media.TransformCollection** value);
                    [propput] HRESULT Children([in] Microsoft.UI.Xaml.Media.TransformCollection* value);
                    [propget] HRESULT Value([out] [retval] Microsoft.UI.Xaml.Media.Matrix* value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.TransformGroup)]
                [uuid(8F1508F6-7DCF-53D5-BBC0-D8FCD96D7399)]
                interface ITransformGroupStatics : IInspectable
                {
                    [propget] HRESULT ChildrenProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.TranslateTransform)]
                [uuid(CFA21CA9-B79F-5450-B459-A96C48CB2C8F)]
                interface ITranslateTransform : IInspectable
                {
                    [propget] HRESULT X([out] [retval] DOUBLE* value);
                    [propput] HRESULT X([in] DOUBLE value);
                    [propget] HRESULT Y([out] [retval] DOUBLE* value);
                    [propput] HRESULT Y([in] DOUBLE value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.TranslateTransform)]
                [uuid(1342EB11-5A6E-5263-AB3E-9B672A86FC0C)]
                interface ITranslateTransformStatics : IInspectable
                {
                    [propget] HRESULT XProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT YProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.VisualTreeHelper)]
                [uuid(5F69AC1E-6504-5E3F-A11C-87684C1DB814)]
                interface IVisualTreeHelper : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.VisualTreeHelper)]
                [uuid(5AECE43C-7651-5BB5-855C-2198496E455E)]
                interface IVisualTreeHelperStatics : IInspectable
                {
                    [default_overload] [overload("FindElementsInHostCoordinates")] HRESULT FindElementsInHostCoordinatesPoint([in] Windows.Foundation.Point intersectingPoint, [in] Microsoft.UI.Xaml.UIElement* subtree, [out] [retval] Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.UIElement*>** result);
                    [overload("FindElementsInHostCoordinates")] HRESULT FindElementsInHostCoordinatesRect([in] Windows.Foundation.Rect intersectingRect, [in] Microsoft.UI.Xaml.UIElement* subtree, [out] [retval] Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.UIElement*>** result);
                    [default_overload] [overload("FindElementsInHostCoordinates")] HRESULT FindAllElementsInHostCoordinatesPoint([in] Windows.Foundation.Point intersectingPoint, [in] Microsoft.UI.Xaml.UIElement* subtree, [in] boolean includeAllElements, [out] [retval] Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.UIElement*>** result);
                    [overload("FindElementsInHostCoordinates")] HRESULT FindAllElementsInHostCoordinatesRect([in] Windows.Foundation.Rect intersectingRect, [in] Microsoft.UI.Xaml.UIElement* subtree, [in] boolean includeAllElements, [out] [retval] Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.UIElement*>** result);
                    HRESULT GetChild([in] Microsoft.UI.Xaml.DependencyObject* reference, [in] INT32 childIndex, [out] [retval] Microsoft.UI.Xaml.DependencyObject** result);
                    HRESULT GetChildrenCount([in] Microsoft.UI.Xaml.DependencyObject* reference, [out] [retval] INT32* result);
                    HRESULT GetParent([in] Microsoft.UI.Xaml.DependencyObject* reference, [out] [retval] Microsoft.UI.Xaml.DependencyObject** result);
                    HRESULT DisconnectChildrenRecursive([in] Microsoft.UI.Xaml.UIElement* element);
                    HRESULT GetOpenPopups([in] Microsoft.UI.Xaml.Window* window, [out] [retval] Windows.Foundation.Collections.IVectorView<Microsoft.UI.Xaml.Controls.Primitives.Popup*>** result);
                    HRESULT GetOpenPopupsForXamlRoot([in] Microsoft.UI.Xaml.XamlRoot* xamlRoot, [out] [retval] Windows.Foundation.Collections.IVectorView<Microsoft.UI.Xaml.Controls.Primitives.Popup*>** result);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.XamlCompositionBrushBase)]
                [uuid(FEAEAD28-5CD0-5E58-BCEA-8670F832ACA9)]
                interface IXamlCompositionBrushBase : IInspectable
                {
                    [propget] HRESULT FallbackColor([out] [retval] Windows.UI.Color* value);
                    [propput] HRESULT FallbackColor([in] Windows.UI.Color value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.XamlCompositionBrushBase)]
                [uuid(B1626D56-0F6F-5416-ADA4-5C8105D3F082)]
                interface IXamlCompositionBrushBaseFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Media.XamlCompositionBrushBase** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.XamlCompositionBrushBase)]
                [uuid(8881B559-54A0-56C4-A79A-135152FB1DFA)]
                interface IXamlCompositionBrushBaseOverrides : IInspectable
                {
                    HRESULT OnConnected();
                    HRESULT OnDisconnected();
                }

                [contract(Microsoft.UI.Xaml.PrivateApiContract, 1.0)]
                [uuid(8379ABB1-27CB-5C26-B766-A56CC31939C2)]
                interface IXamlCompositionBrushBaseOverridesPrivate : IInspectable
                {
                    HRESULT OnElementConnected([in] Microsoft.UI.Xaml.DependencyObject* element);
                }

                [contract(Microsoft.UI.Xaml.PrivateApiContract, 1.0)]
                [uuid(5B4B1E3E-B69A-5476-89E8-1D559A446D1A)]
                interface IXamlCompositionBrushBasePrivates : IInspectable
                {
                    HRESULT SetBrushForXamlRoot([in] IInspectable* xamlRoot, [in] Microsoft.UI.Composition.CompositionBrush* brush);
                    HRESULT GetBrushForXamlRoot([in] IInspectable* xamlRoot, [out] [retval] Microsoft.UI.Composition.CompositionBrush** result);
                    HRESULT ClearBrushForXamlRoot([in] IInspectable* xamlRoot, [in] Microsoft.UI.Composition.CompositionBrush* brush);
                    HRESULT ClearCompositionBrushMap();
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.XamlCompositionBrushBase)]
                [uuid(6617E1A5-E27A-5B95-B03E-6758B58F92A0)]
                interface IXamlCompositionBrushBaseProtected : IInspectable
                {
                    [propget] HRESULT CompositionBrush([out] [retval] Microsoft.UI.Composition.CompositionBrush** value);
                    [propput] HRESULT CompositionBrush([in] Microsoft.UI.Composition.CompositionBrush* value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.XamlCompositionBrushBase)]
                [uuid(3EED6E16-C386-5A1C-B70D-EF1C0015E691)]
                interface IXamlCompositionBrushBaseStatics : IInspectable
                {
                    [propget] HRESULT FallbackColorProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.XamlLight)]
                [uuid(DCD20139-8CD5-5DA5-A25C-2B7B813D8D58)]
                interface IXamlLight : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.XamlLight)]
                [uuid(76DA6306-96FC-553E-BB39-9A4801D06F48)]
                interface IXamlLightFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Media.XamlLight** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.XamlLight)]
                [uuid(696D4F30-92EE-540D-AD70-33D4489514D0)]
                interface IXamlLightOverrides : IInspectable
                {
                    HRESULT GetId([out] [retval] HSTRING* result);
                    HRESULT OnConnected([in] Microsoft.UI.Xaml.UIElement* newElement);
                    HRESULT OnDisconnected([in] Microsoft.UI.Xaml.UIElement* oldElement);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.XamlLight)]
                [uuid(C307BF12-FDAF-54CA-A631-AD0E86263C6E)]
                interface IXamlLightProtected : IInspectable
                {
                    [propget] HRESULT CompositionLight([out] [retval] Microsoft.UI.Composition.CompositionLight** value);
                    [propput] HRESULT CompositionLight([in] Microsoft.UI.Composition.CompositionLight* value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Media.XamlLight)]
                [uuid(A2D8EA26-26FF-5374-B1DD-F232D5604F6A)]
                interface IXamlLightStatics : IInspectable
                {
                    HRESULT AddTargetElement([in] HSTRING lightId, [in] Microsoft.UI.Xaml.UIElement* element);
                    HRESULT RemoveTargetElement([in] HSTRING lightId, [in] Microsoft.UI.Xaml.UIElement* element);
                    HRESULT AddTargetBrush([in] HSTRING lightId, [in] Microsoft.UI.Xaml.Media.Brush* brush);
                    HRESULT RemoveTargetBrush([in] HSTRING lightId, [in] Microsoft.UI.Xaml.Media.Brush* brush);
                }

                [composable(Microsoft.UI.Xaml.Media.IAcrylicBrushFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Media.IAcrylicBrushStatics, 0x00000001)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass AcrylicBrush : Microsoft.UI.Xaml.Media.XamlCompositionBrushBase
                {
                    [default] interface Microsoft.UI.Xaml.Media.IAcrylicBrush;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Media.IArcSegmentStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass ArcSegment : Microsoft.UI.Xaml.Media.PathSegment
                {
                    [default] interface Microsoft.UI.Xaml.Media.IArcSegment;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Media.IBezierSegmentStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass BezierSegment : Microsoft.UI.Xaml.Media.PathSegment
                {
                    [default] interface Microsoft.UI.Xaml.Media.IBezierSegment;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass BitmapCache : Microsoft.UI.Xaml.Media.CacheMode
                {
                    [default] interface Microsoft.UI.Xaml.Media.IBitmapCache;
                }

                [composable(Microsoft.UI.Xaml.Media.IBrushFactory, protected, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Media.IBrushStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass Brush : Microsoft.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Xaml.Media.IBrush;
                    [overridable] interface Microsoft.UI.Xaml.Media.IBrushOverrides;
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)] interface Microsoft.UI.Composition.IAnimationObject;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass BrushCollection
                {
                    [default] interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Media.Brush*>;
                    interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Media.Brush*>;
                }

                [composable(Microsoft.UI.Xaml.Media.ICacheModeFactory, protected, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass CacheMode : Microsoft.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Xaml.Media.ICacheMode;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Media.ICompositeTransformStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass CompositeTransform : Microsoft.UI.Xaml.Media.Transform
                {
                    [default] interface Microsoft.UI.Xaml.Media.ICompositeTransform;
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Media.ICompositionTargetStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass CompositionTarget
                {
                    [default] interface Microsoft.UI.Xaml.Media.ICompositionTarget;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass DoubleCollection
                {
                    [default] interface Windows.Foundation.Collections.IVector<DOUBLE>;
                    interface Windows.Foundation.Collections.IIterable<DOUBLE>;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Media.IEllipseGeometryStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass EllipseGeometry : Microsoft.UI.Xaml.Media.Geometry
                {
                    [default] interface Microsoft.UI.Xaml.Media.IEllipseGeometry;
                }

                [composable(Microsoft.UI.Xaml.Media.IFontFamilyFactory, public, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Media.IFontFamilyStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass FontFamily
                {
                    [default] interface Microsoft.UI.Xaml.Media.IFontFamily;
                }

                [composable(Microsoft.UI.Xaml.Media.IGeneralTransformFactory, protected, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass GeneralTransform : Microsoft.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Xaml.Media.IGeneralTransform;
                    [overridable] interface Microsoft.UI.Xaml.Media.IGeneralTransformOverrides;
                }

                [composable(Microsoft.UI.Xaml.Media.IGeometryFactory, public, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Media.IGeometryStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass Geometry : Microsoft.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Xaml.Media.IGeometry;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass GeometryCollection
                {
                    [default] interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Media.Geometry*>;
                    interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Media.Geometry*>;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Media.IGeometryGroupStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass GeometryGroup : Microsoft.UI.Xaml.Media.Geometry
                {
                    [default] interface Microsoft.UI.Xaml.Media.IGeometryGroup;
                }

                [composable(Microsoft.UI.Xaml.Media.IGradientBrushFactory, protected, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Media.IGradientBrushStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass GradientBrush : Microsoft.UI.Xaml.Media.Brush
                {
                    [default] interface Microsoft.UI.Xaml.Media.IGradientBrush;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Media.IGradientStopStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass GradientStop : Microsoft.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Xaml.Media.IGradientStop;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass GradientStopCollection
                {
                    [default] interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Media.GradientStop*>;
                    interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Media.GradientStop*>;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Media.IImageBrushStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass ImageBrush : Microsoft.UI.Xaml.Media.TileBrush
                {
                    [default] interface Microsoft.UI.Xaml.Media.IImageBrush;
                }

                [composable(Microsoft.UI.Xaml.Media.IImageSourceFactory, public, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass ImageSource : Microsoft.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Xaml.Media.IImageSource;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Media.ILineGeometryStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass LineGeometry : Microsoft.UI.Xaml.Media.Geometry
                {
                    [default] interface Microsoft.UI.Xaml.Media.ILineGeometry;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Media.ILineSegmentStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass LineSegment : Microsoft.UI.Xaml.Media.PathSegment
                {
                    [default] interface Microsoft.UI.Xaml.Media.ILineSegment;
                }

                [activatable(Microsoft.UI.Xaml.Media.ILinearGradientBrushFactory, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Media.ILinearGradientBrushStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass LinearGradientBrush : Microsoft.UI.Xaml.Media.GradientBrush
                {
                    [default] interface Microsoft.UI.Xaml.Media.ILinearGradientBrush;
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass LoadedImageSourceLoadCompletedEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Media.ILoadedImageSourceLoadCompletedEventArgs;
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Media.ILoadedImageSurfaceStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass LoadedImageSurface
                {
                    [default] interface Microsoft.UI.Xaml.Media.ILoadedImageSurface;
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)] interface Windows.Foundation.IClosable;
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)] interface Microsoft.UI.Composition.ICompositionSurface;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Media.IMatrix3DProjectionStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass Matrix3DProjection : Microsoft.UI.Xaml.Media.Projection
                {
                    [default] interface Microsoft.UI.Xaml.Media.IMatrix3DProjection;
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Media.IMatrixHelperStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass MatrixHelper
                {
                    [default] interface Microsoft.UI.Xaml.Media.IMatrixHelper;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Media.IMatrixTransformStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass MatrixTransform : Microsoft.UI.Xaml.Media.Transform
                {
                    [default] interface Microsoft.UI.Xaml.Media.IMatrixTransform;
                }

                [contract(Microsoft.UI.Xaml.PrivateApiContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass MediaTransportControlsThumbnailRequestedEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Media.IMediaTransportControlsThumbnailRequestedEventArgs;
                }

                [activatable(Microsoft.UI.Xaml.PrivateApiContract, 1.0)]
                [contract(Microsoft.UI.Xaml.PrivateApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass PartialMediaFailureDetectedEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Media.IPartialMediaFailureDetectedEventArgs;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Media.IPathFigureStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass PathFigure : Microsoft.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Xaml.Media.IPathFigure;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass PathFigureCollection
                {
                    [default] interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Media.PathFigure*>;
                    interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Media.PathFigure*>;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Media.IPathGeometryStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass PathGeometry : Microsoft.UI.Xaml.Media.Geometry
                {
                    [default] interface Microsoft.UI.Xaml.Media.IPathGeometry;
                }

                [composable(Microsoft.UI.Xaml.Media.IPathSegmentFactory, public, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass PathSegment : Microsoft.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Xaml.Media.IPathSegment;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass PathSegmentCollection
                {
                    [default] interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Media.PathSegment*>;
                    interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Media.PathSegment*>;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Media.IPlaneProjectionStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass PlaneProjection : Microsoft.UI.Xaml.Media.Projection
                {
                    [default] interface Microsoft.UI.Xaml.Media.IPlaneProjection;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass PointCollection
                {
                    [default] interface Windows.Foundation.Collections.IVector<Windows.Foundation.Point>;
                    interface Windows.Foundation.Collections.IIterable<Windows.Foundation.Point>;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Media.IPolyBezierSegmentStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass PolyBezierSegment : Microsoft.UI.Xaml.Media.PathSegment
                {
                    [default] interface Microsoft.UI.Xaml.Media.IPolyBezierSegment;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Media.IPolyLineSegmentStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass PolyLineSegment : Microsoft.UI.Xaml.Media.PathSegment
                {
                    [default] interface Microsoft.UI.Xaml.Media.IPolyLineSegment;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Media.IPolyQuadraticBezierSegmentStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass PolyQuadraticBezierSegment : Microsoft.UI.Xaml.Media.PathSegment
                {
                    [default] interface Microsoft.UI.Xaml.Media.IPolyQuadraticBezierSegment;
                }

                [composable(Microsoft.UI.Xaml.Media.IProjectionFactory, protected, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass Projection : Microsoft.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Xaml.Media.IProjection;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Media.IQuadraticBezierSegmentStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass QuadraticBezierSegment : Microsoft.UI.Xaml.Media.PathSegment
                {
                    [default] interface Microsoft.UI.Xaml.Media.IQuadraticBezierSegment;
                }

                [composable(Microsoft.UI.Xaml.Media.IRadialGradientBrushFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Media.IRadialGradientBrushStatics, 0x00000001)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass RadialGradientBrush : Microsoft.UI.Xaml.Media.XamlCompositionBrushBase
                {
                    [default] interface Microsoft.UI.Xaml.Media.IRadialGradientBrush;
                }

                [activatable(Microsoft.UI.Xaml.PrivateApiContract, 1.0)]
                [contract(Microsoft.UI.Xaml.PrivateApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass RateChangedRoutedEventArgs : Microsoft.UI.Xaml.RoutedEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Media.IRateChangedRoutedEventArgs;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Media.IRectangleGeometryStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass RectangleGeometry : Microsoft.UI.Xaml.Media.Geometry
                {
                    [default] interface Microsoft.UI.Xaml.Media.IRectangleGeometry;
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass RenderedEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Media.IRenderedEventArgs;
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass RenderingEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Media.IRenderingEventArgs;
                }

                [composable(Microsoft.UI.Xaml.Media.IRevealBackgroundBrushFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass RevealBackgroundBrush : Microsoft.UI.Xaml.Media.RevealBrush
                {
                    [default] interface Microsoft.UI.Xaml.Media.IRevealBackgroundBrush;
                }

                [composable(Microsoft.UI.Xaml.Media.IRevealBorderBrushFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass RevealBorderBrush : Microsoft.UI.Xaml.Media.RevealBrush
                {
                    [default] interface Microsoft.UI.Xaml.Media.IRevealBorderBrush;
                }

                [composable(Microsoft.UI.Xaml.Media.IRevealBrushProtectedFactory, protected, 0x00000001)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Media.IRevealBrushStatics, 0x00000001)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass RevealBrush : Microsoft.UI.Xaml.Media.XamlCompositionBrushBase
                {
                    [default] interface Microsoft.UI.Xaml.Media.IRevealBrush;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Media.IRotateTransformStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass RotateTransform : Microsoft.UI.Xaml.Media.Transform
                {
                    [default] interface Microsoft.UI.Xaml.Media.IRotateTransform;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Media.IScaleTransformStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass ScaleTransform : Microsoft.UI.Xaml.Media.Transform
                {
                    [default] interface Microsoft.UI.Xaml.Media.IScaleTransform;
                }

                [composable(Microsoft.UI.Xaml.Media.IShadowFactory, public, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass Shadow : Microsoft.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Xaml.Media.IShadow;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Media.ISkewTransformStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass SkewTransform : Microsoft.UI.Xaml.Media.Transform
                {
                    [default] interface Microsoft.UI.Xaml.Media.ISkewTransform;
                }

                [activatable(Microsoft.UI.Xaml.Media.ISolidColorBrushFactory, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Media.ISolidColorBrushStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass SolidColorBrush : Microsoft.UI.Xaml.Media.Brush
                {
                    [default] interface Microsoft.UI.Xaml.Media.ISolidColorBrush;
                }

                [composable(Microsoft.UI.Xaml.Media.IThemeShadowFactory, public, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass ThemeShadow : Microsoft.UI.Xaml.Media.Shadow
                {
                    [default] interface Microsoft.UI.Xaml.Media.IThemeShadow;
                }

                [composable(Microsoft.UI.Xaml.Media.ITileBrushFactory, protected, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Media.ITileBrushStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass TileBrush : Microsoft.UI.Xaml.Media.Brush
                {
                    [default] interface Microsoft.UI.Xaml.Media.ITileBrush;
                }

                [activatable(Microsoft.UI.Xaml.PrivateApiContract, 1.0)]
                [contract(Microsoft.UI.Xaml.PrivateApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Media.ITimelineMarkerStatics, Microsoft.UI.Xaml.PrivateApiContract, 1.0)]
                [threading(both)]
                runtimeclass TimelineMarker : Microsoft.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Xaml.Media.ITimelineMarker;
                }

                [activatable(Microsoft.UI.Xaml.PrivateApiContract, 1.0)]
                [contract(Microsoft.UI.Xaml.PrivateApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass TimelineMarkerCollection
                {
                    [default] interface Microsoft.UI.Xaml.Media.ITimelineMarkerCollection;
                    [contract(Microsoft.UI.Xaml.PrivateApiContract, 1.0)] interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Media.TimelineMarker*>;
                    [contract(Microsoft.UI.Xaml.PrivateApiContract, 1.0)] interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Media.TimelineMarker*>;
                }

                [activatable(Microsoft.UI.Xaml.PrivateApiContract, 1.0)]
                [contract(Microsoft.UI.Xaml.PrivateApiContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass TimelineMarkerRoutedEventArgs : Microsoft.UI.Xaml.RoutedEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Media.ITimelineMarkerRoutedEventArgs;
                }

                [composable(Microsoft.UI.Xaml.Media.ITransformFactory, public, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass Transform : Microsoft.UI.Xaml.Media.GeneralTransform
                {
                    [default] interface Microsoft.UI.Xaml.Media.ITransform;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass TransformCollection
                {
                    [default] interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Media.Transform*>;
                    interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Media.Transform*>;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Media.ITransformGroupStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass TransformGroup : Microsoft.UI.Xaml.Media.Transform
                {
                    [default] interface Microsoft.UI.Xaml.Media.ITransformGroup;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Media.ITranslateTransformStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass TranslateTransform : Microsoft.UI.Xaml.Media.Transform
                {
                    [default] interface Microsoft.UI.Xaml.Media.ITranslateTransform;
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Media.IVisualTreeHelperStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass VisualTreeHelper
                {
                    [default] interface Microsoft.UI.Xaml.Media.IVisualTreeHelper;
                }

                [composable(Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseFactory, protected, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass XamlCompositionBrushBase : Microsoft.UI.Xaml.Media.Brush
                {
                    [default] interface Microsoft.UI.Xaml.Media.IXamlCompositionBrushBase;
                    [protected] interface Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseProtected;
                    [overridable] interface Microsoft.UI.Xaml.Media.IXamlCompositionBrushBaseOverrides;
                }

                [composable(Microsoft.UI.Xaml.Media.IXamlLightFactory, public, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Media.IXamlLightStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass XamlLight : Microsoft.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Xaml.Media.IXamlLight;
                    [protected] interface Microsoft.UI.Xaml.Media.IXamlLightProtected;
                    [overridable] interface Microsoft.UI.Xaml.Media.IXamlLightOverrides;
                }
            }
        }
    }
}
