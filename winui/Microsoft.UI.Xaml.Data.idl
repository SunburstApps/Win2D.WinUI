//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "windowscontracts.idl";
import "Windows.Foundation.idl";
import "Microsoft.UI.Xaml.idl";
import "Windows.UI.Xaml.Interop.idl";

// Forward Declare
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            runtimeclass DependencyObject;

            runtimeclass DependencyProperty;

            apicontract PrivateApiContract;

            runtimeclass PropertyPath;

            apicontract WinUIContract;
        }
    }
}
namespace Windows
{
    namespace Foundation
    {
        interface IClosable;
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Interop
            {
                typedef struct TypeName TypeName;
            }
        }
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Data
            {
                typedef enum BindingMode BindingMode;

                typedef enum EffectiveSourceType EffectiveSourceType;

                typedef enum RelativeSourceMode RelativeSourceMode;

                typedef enum UpdateSourceTrigger UpdateSourceTrigger;

                typedef struct LoadMoreItemsResult LoadMoreItemsResult;

                delegate CurrentChangingEventHandler;

                delegate PropertyChangedEventHandler;

                interface IBinding;

                interface IBindingBase;

                interface IBindingBaseFactory;

                interface IBindingExpression;

                interface IBindingExpressionBase;

                interface IBindingExpressionBaseFactory;

                interface IBindingExpressionFactory;

                interface IBindingFactory;

                interface IBindingOperations;

                interface IBindingOperationsStatics;

                interface ICollectionView;

                interface ICollectionViewFactory;

                interface ICollectionViewGroup;

                interface ICollectionViewSource;

                interface ICollectionViewSourceStatics;

                interface ICurrentChangingEventArgs;

                interface ICurrentChangingEventArgsFactory;

                interface ICustomProperty;

                interface ICustomPropertyProvider;

                interface IDataErrorsChangedEventArgs;

                interface IDataErrorsChangedEventArgsFactory;

                interface IItemIndexRange;

                interface IItemIndexRangeFactory;

                interface IItemsRangeInfo;

                interface INotifyDataErrorInfo;

                interface INotifyPropertyChanged;

                interface IPropertyChangedEventArgs;

                interface IPropertyChangedEventArgsFactory;

                interface IRelativeSource;

                interface IRelativeSourceFactory;

                interface ISelectionInfo;

                interface ISupportIncrementalLoading;

                interface IValueConverter;

                runtimeclass Binding;

                runtimeclass BindingBase;

                runtimeclass BindingExpression;

                runtimeclass BindingExpressionBase;

                runtimeclass BindingOperations;

                runtimeclass CollectionViewSource;

                runtimeclass CurrentChangingEventArgs;

                runtimeclass DataErrorsChangedEventArgs;

                runtimeclass ItemIndexRange;

                runtimeclass PropertyChangedEventArgs;

                runtimeclass RelativeSource;
            }
        }
    }
}

// Generic instantiations
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Data
            {
                declare
                {
                    interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Data.ItemIndexRange*>;

                    interface Windows.Foundation.Collections.IIterator<Microsoft.UI.Xaml.Data.ItemIndexRange*>;

                    interface Windows.Foundation.Collections.IVectorView<Microsoft.UI.Xaml.Data.ItemIndexRange*>;

                    interface Windows.Foundation.EventHandler<Microsoft.UI.Xaml.Data.DataErrorsChangedEventArgs*>;

                    interface Windows.Foundation.IAsyncOperation<Microsoft.UI.Xaml.Data.LoadMoreItemsResult>;
                }
            }
        }
    }
}

// Type definition
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Data
            {
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                enum BindingMode
                {
                    OneWay  = 1,
                    OneTime = 2,
                    TwoWay  = 3
                };

                [contract(Microsoft.UI.Xaml.PrivateApiContract, 1.0)]
                enum EffectiveSourceType
                {
                    None                   = 0,
                    Binding_Source         = 1,
                    DataContext            = 2,
                    Mentor_DataContext     = 3,
                    Target                 = 4,
                    TemplatedParent        = 5,
                    Mentor_TemplatedParent = 6,
                    ElementName            = 7,
                    Mentor_ElementName     = 8
                };

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                enum RelativeSourceMode
                {
                    None            = 0,
                    TemplatedParent = 1,
                    Self            = 2
                };

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                enum UpdateSourceTrigger
                {
                    Default         = 0,
                    PropertyChanged = 1,
                    Explicit        = 2,
                    LostFocus       = 3
                };

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                struct LoadMoreItemsResult
                {
                    UINT32 Count;
                };

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [uuid(3D2A98DD-95B3-5FD5-93B4-A1A2599F225C)]
                delegate
                    HRESULT CurrentChangingEventHandler([in] IInspectable* sender, [in] Microsoft.UI.Xaml.Data.CurrentChangingEventArgs* e);

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [uuid(E3DE52F6-1E32-5DA6-BB2D-B5B6096C962D)]
                delegate
                    HRESULT PropertyChangedEventHandler([in] IInspectable* sender, [in] Microsoft.UI.Xaml.Data.PropertyChangedEventArgs* e);

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Data.Binding)]
                [uuid(501EA0E8-EDD4-59DE-8845-76AF2EABBE00)]
                interface IBinding : IInspectable
                {
                    [propget] HRESULT Path([out] [retval] Microsoft.UI.Xaml.PropertyPath** value);
                    [propput] HRESULT Path([in] Microsoft.UI.Xaml.PropertyPath* value);
                    [propget] HRESULT Mode([out] [retval] Microsoft.UI.Xaml.Data.BindingMode* value);
                    [propput] HRESULT Mode([in] Microsoft.UI.Xaml.Data.BindingMode value);
                    [propget] HRESULT Source([out] [retval] IInspectable** value);
                    [propput] HRESULT Source([in] IInspectable* value);
                    [propget] HRESULT RelativeSource([out] [retval] Microsoft.UI.Xaml.Data.RelativeSource** value);
                    [propput] HRESULT RelativeSource([in] Microsoft.UI.Xaml.Data.RelativeSource* value);
                    [propget] HRESULT ElementName([out] [retval] HSTRING* value);
                    [propput] HRESULT ElementName([in] HSTRING value);
                    [propget] HRESULT Converter([out] [retval] Microsoft.UI.Xaml.Data.IValueConverter** value);
                    [propput] HRESULT Converter([in] Microsoft.UI.Xaml.Data.IValueConverter* value);
                    [propget] HRESULT ConverterParameter([out] [retval] IInspectable** value);
                    [propput] HRESULT ConverterParameter([in] IInspectable* value);
                    [propget] HRESULT ConverterLanguage([out] [retval] HSTRING* value);
                    [propput] HRESULT ConverterLanguage([in] HSTRING value);
                    [propget] HRESULT FallbackValue([out] [retval] IInspectable** value);
                    [propput] HRESULT FallbackValue([in] IInspectable* value);
                    [propget] HRESULT TargetNullValue([out] [retval] IInspectable** value);
                    [propput] HRESULT TargetNullValue([in] IInspectable* value);
                    [propget] HRESULT UpdateSourceTrigger([out] [retval] Microsoft.UI.Xaml.Data.UpdateSourceTrigger* value);
                    [propput] HRESULT UpdateSourceTrigger([in] Microsoft.UI.Xaml.Data.UpdateSourceTrigger value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Data.BindingBase)]
                [uuid(91DDD141-5944-50EF-B85E-218E463F7A73)]
                interface IBindingBase : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Data.BindingBase)]
                [uuid(C8A866C5-F6F3-5F7A-9592-D385AF48BD8F)]
                interface IBindingBaseFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Data.BindingBase** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Data.BindingExpression)]
                [uuid(4C023916-37BC-5B07-BC9D-15C547BD9B26)]
                interface IBindingExpression : IInspectable
                {
                    [propget] HRESULT DataItem([out] [retval] IInspectable** value);
                    [propget] HRESULT ParentBinding([out] [retval] Microsoft.UI.Xaml.Data.Binding** value);
                    HRESULT UpdateSource();
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Data.BindingExpressionBase)]
                [uuid(8825E5A9-D9A3-5E87-BCD8-C63133D29029)]
                interface IBindingExpressionBase : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Data.BindingExpressionBase)]
                [uuid(41D643B9-2629-5451-A716-596C0848B5DC)]
                interface IBindingExpressionBaseFactory : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Data.BindingExpression)]
                [uuid(086CAE14-81A1-588B-B619-05EE84C0F089)]
                interface IBindingExpressionFactory : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Data.Binding)]
                [uuid(CB2DE749-B115-5F67-B64A-797D54885D5C)]
                interface IBindingFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Data.Binding** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Data.BindingOperations)]
                [uuid(9A319B95-AABE-5075-B227-8EB07E443D8B)]
                interface IBindingOperations : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Data.BindingOperations)]
                [uuid(1E1BDBD3-FCA5-5C85-B87D-B504CD8FA8AC)]
                interface IBindingOperationsStatics : IInspectable
                {
                    HRESULT SetBinding([in] Microsoft.UI.Xaml.DependencyObject* target, [in] Microsoft.UI.Xaml.DependencyProperty* dp, [in] Microsoft.UI.Xaml.Data.BindingBase* binding);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [uuid(F8BB90D8-E008-5D65-8C97-7BB790A4230C)]
                interface ICollectionView : IInspectable
                    requires
                        Windows.Foundation.Collections.IObservableVector<IInspectable*>,
                        Windows.Foundation.Collections.IVector<IInspectable*>,
                        Windows.Foundation.Collections.IIterable<IInspectable*>
                {
                    [propget] HRESULT CurrentItem([out] [retval] IInspectable** value);
                    [propget] HRESULT CurrentPosition([out] [retval] INT32* value);
                    [propget] HRESULT IsCurrentAfterLast([out] [retval] boolean* value);
                    [propget] HRESULT IsCurrentBeforeFirst([out] [retval] boolean* value);
                    [propget] HRESULT CollectionGroups([out] [retval] Windows.Foundation.Collections.IObservableVector<IInspectable*>** value);
                    [propget] HRESULT HasMoreItems([out] [retval] boolean* value);
                    [eventadd] HRESULT CurrentChanged([in] Windows.Foundation.EventHandler<IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT CurrentChanged([in] EventRegistrationToken token);
                    [eventadd] HRESULT CurrentChanging([in] Microsoft.UI.Xaml.Data.CurrentChangingEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT CurrentChanging([in] EventRegistrationToken token);
                    HRESULT MoveCurrentTo([in] IInspectable* item, [out] [retval] boolean* result);
                    HRESULT MoveCurrentToPosition([in] INT32 index, [out] [retval] boolean* result);
                    HRESULT MoveCurrentToFirst([out] [retval] boolean* result);
                    HRESULT MoveCurrentToLast([out] [retval] boolean* result);
                    HRESULT MoveCurrentToNext([out] [retval] boolean* result);
                    HRESULT MoveCurrentToPrevious([out] [retval] boolean* result);
                    HRESULT LoadMoreItemsAsync([in] UINT32 count, [out] [retval] Windows.Foundation.IAsyncOperation<Microsoft.UI.Xaml.Data.LoadMoreItemsResult>** operation);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [uuid(D971F795-5728-5BEF-9602-43F2C4250E56)]
                interface ICollectionViewFactory : IInspectable
                {
                    HRESULT CreateView([out] [retval] Microsoft.UI.Xaml.Data.ICollectionView** result);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [uuid(96A08DA8-BE38-5AE0-903D-6FB6111E61F5)]
                interface ICollectionViewGroup : IInspectable
                {
                    [propget] HRESULT Group([out] [retval] IInspectable** value);
                    [propget] HRESULT GroupItems([out] [retval] Windows.Foundation.Collections.IObservableVector<IInspectable*>** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Data.CollectionViewSource)]
                [uuid(A45E3B3A-F31E-5BBB-8A7C-70CF5C64BC3F)]
                interface ICollectionViewSource : IInspectable
                {
                    [propget] HRESULT Source([out] [retval] IInspectable** value);
                    [propput] HRESULT Source([in] IInspectable* value);
                    [propget] HRESULT View([out] [retval] Microsoft.UI.Xaml.Data.ICollectionView** value);
                    [propget] HRESULT IsSourceGrouped([out] [retval] boolean* value);
                    [propput] HRESULT IsSourceGrouped([in] boolean value);
                    [propget] HRESULT ItemsPath([out] [retval] Microsoft.UI.Xaml.PropertyPath** value);
                    [propput] HRESULT ItemsPath([in] Microsoft.UI.Xaml.PropertyPath* value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Data.CollectionViewSource)]
                [uuid(E282F10F-D4B1-5769-8A11-30F739E6113B)]
                interface ICollectionViewSourceStatics : IInspectable
                {
                    [propget] HRESULT SourceProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ViewProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsSourceGroupedProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ItemsPathProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Data.CurrentChangingEventArgs)]
                [uuid(63E42ED6-E14A-51EA-9CB1-72F9C907DC80)]
                interface ICurrentChangingEventArgs : IInspectable
                {
                    [propget] HRESULT Cancel([out] [retval] boolean* value);
                    [propput] HRESULT Cancel([in] boolean value);
                    [propget] HRESULT IsCancelable([out] [retval] boolean* value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Data.CurrentChangingEventArgs)]
                [uuid(3670F48A-AC2C-5352-8A4B-6B977A08E5F8)]
                interface ICurrentChangingEventArgsFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Data.CurrentChangingEventArgs** value);
                    HRESULT CreateWithCancelableParameter([in] boolean isCancelable, [in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Data.CurrentChangingEventArgs** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [uuid(30DA92C0-23E8-42A0-AE7C-734A0E5D2782)]
                interface ICustomProperty : IInspectable
                {
                    [propget] HRESULT Type([out] [retval] Windows.UI.Xaml.Interop.TypeName* value);
                    [propget] HRESULT Name([out] [retval] HSTRING* value);
                    HRESULT GetValue([in] IInspectable* target, [out] [retval] IInspectable** result);
                    HRESULT SetValue([in] IInspectable* target, [in] IInspectable* value);
                    HRESULT GetIndexedValue([in] IInspectable* target, [in] IInspectable* index, [out] [retval] IInspectable** result);
                    HRESULT SetIndexedValue([in] IInspectable* target, [in] IInspectable* value, [in] IInspectable* index);
                    [propget] HRESULT CanWrite([out] [retval] boolean* value);
                    [propget] HRESULT CanRead([out] [retval] boolean* value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [uuid(7C925755-3E48-42B4-8677-76372267033F)]
                interface ICustomPropertyProvider : IInspectable
                {
                    HRESULT GetCustomProperty([in] HSTRING name, [out] [retval] Microsoft.UI.Xaml.Data.ICustomProperty** result);
                    HRESULT GetIndexedProperty([in] HSTRING name, [in] Windows.UI.Xaml.Interop.TypeName type, [out] [retval] Microsoft.UI.Xaml.Data.ICustomProperty** result);
                    HRESULT GetStringRepresentation([out] [retval] HSTRING* result);
                    [propget] HRESULT Type([out] [retval] Windows.UI.Xaml.Interop.TypeName* value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Data.DataErrorsChangedEventArgs)]
                [uuid(D026DD64-5F26-5F15-A86A-0DEC8A431796)]
                interface IDataErrorsChangedEventArgs : IInspectable
                {
                    [propget] HRESULT PropertyName([out] [retval] HSTRING* value);
                    [propput] HRESULT PropertyName([in] HSTRING value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Data.DataErrorsChangedEventArgs)]
                [uuid(62D0BD1E-B85F-5FCC-842A-7CB0DDA37FE5)]
                interface IDataErrorsChangedEventArgsFactory : IInspectable
                {
                    HRESULT CreateInstance([in] HSTRING name, [out] [retval] Microsoft.UI.Xaml.Data.DataErrorsChangedEventArgs** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Data.ItemIndexRange)]
                [uuid(EBA09846-2554-5B86-AC17-614F05105FA2)]
                interface IItemIndexRange : IInspectable
                {
                    [propget] HRESULT FirstIndex([out] [retval] INT32* value);
                    [propget] HRESULT Length([out] [retval] UINT32* value);
                    [propget] HRESULT LastIndex([out] [retval] INT32* value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Data.ItemIndexRange)]
                [uuid(9FC73213-EDA0-5238-AA2C-401C9921F0F9)]
                interface IItemIndexRangeFactory : IInspectable
                {
                    HRESULT CreateInstance([in] INT32 firstIndex, [in] UINT32 length, [in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Data.ItemIndexRange** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [uuid(B8376D08-85FB-563B-8273-39EF2D138256)]
                interface IItemsRangeInfo : IInspectable
                    requires
                        Windows.Foundation.IClosable
                {
                    HRESULT RangesChanged([in] Microsoft.UI.Xaml.Data.ItemIndexRange* visibleRange, [in] Windows.Foundation.Collections.IVectorView<Microsoft.UI.Xaml.Data.ItemIndexRange*>* trackedItems);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [uuid(0EE6C2CC-273E-567D-BC0A-1DD87EE51EBA)]
                interface INotifyDataErrorInfo : IInspectable
                {
                    [propget] HRESULT HasErrors([out] [retval] boolean* value);
                    [eventadd] HRESULT ErrorsChanged([in] Windows.Foundation.EventHandler<Microsoft.UI.Xaml.Data.DataErrorsChangedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT ErrorsChanged([in] EventRegistrationToken token);
                    HRESULT GetErrors([in] HSTRING propertyName, [out] [retval] Windows.Foundation.Collections.IIterable<IInspectable*>** result);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [uuid(90B17601-B065-586E-83D9-9ADC3A695284)]
                interface INotifyPropertyChanged : IInspectable
                {
                    [eventadd] HRESULT PropertyChanged([in] Microsoft.UI.Xaml.Data.PropertyChangedEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT PropertyChanged([in] EventRegistrationToken token);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Data.PropertyChangedEventArgs)]
                [uuid(63D0C952-396B-54F4-AF8C-BA8724A427BF)]
                interface IPropertyChangedEventArgs : IInspectable
                {
                    [propget] HRESULT PropertyName([out] [retval] HSTRING* value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Data.PropertyChangedEventArgs)]
                [uuid(7C0C27A8-0B41-5070-B160-FC9AE960A36C)]
                interface IPropertyChangedEventArgsFactory : IInspectable
                {
                    HRESULT CreateInstance([in] HSTRING name, [in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Data.PropertyChangedEventArgs** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Data.RelativeSource)]
                [uuid(7FFC8126-5DD8-58BB-B686-C71EDDEA07B2)]
                interface IRelativeSource : IInspectable
                {
                    [propget] HRESULT Mode([out] [retval] Microsoft.UI.Xaml.Data.RelativeSourceMode* value);
                    [propput] HRESULT Mode([in] Microsoft.UI.Xaml.Data.RelativeSourceMode value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Data.RelativeSource)]
                [uuid(8518522C-85E3-5AE1-B9E9-28EA43C2051E)]
                interface IRelativeSourceFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Data.RelativeSource** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [uuid(1B84C26B-9532-5803-935B-A03BF7E875DC)]
                interface ISelectionInfo : IInspectable
                {
                    HRESULT SelectRange([in] Microsoft.UI.Xaml.Data.ItemIndexRange* itemIndexRange);
                    HRESULT DeselectRange([in] Microsoft.UI.Xaml.Data.ItemIndexRange* itemIndexRange);
                    HRESULT IsSelected([in] INT32 index, [out] [retval] boolean* result);
                    HRESULT GetSelectedRanges([out] [retval] Windows.Foundation.Collections.IVectorView<Microsoft.UI.Xaml.Data.ItemIndexRange*>** result);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [uuid(D8F9B586-A64A-5FF8-868E-204E144F2CF4)]
                interface ISupportIncrementalLoading : IInspectable
                {
                    HRESULT LoadMoreItemsAsync([in] UINT32 count, [out] [retval] Windows.Foundation.IAsyncOperation<Microsoft.UI.Xaml.Data.LoadMoreItemsResult>** operation);
                    [propget] HRESULT HasMoreItems([out] [retval] boolean* value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [uuid(AFDD2BFF-10F5-5173-B7C0-3590BD96CB35)]
                interface IValueConverter : IInspectable
                {
                    HRESULT Convert([in] IInspectable* value, [in] Windows.UI.Xaml.Interop.TypeName targetType, [in] IInspectable* parameter, [in] HSTRING language, [out] [retval] IInspectable** result);
                    HRESULT ConvertBack([in] IInspectable* value, [in] Windows.UI.Xaml.Interop.TypeName targetType, [in] IInspectable* parameter, [in] HSTRING language, [out] [retval] IInspectable** result);
                }

                [composable(Microsoft.UI.Xaml.Data.IBindingFactory, public, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass Binding : Microsoft.UI.Xaml.Data.BindingBase
                {
                    [default] interface Microsoft.UI.Xaml.Data.IBinding;
                }

                [composable(Microsoft.UI.Xaml.Data.IBindingBaseFactory, public, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass BindingBase : Microsoft.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Xaml.Data.IBindingBase;
                }

                [composable(Microsoft.UI.Xaml.Data.IBindingExpressionFactory, public, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass BindingExpression : Microsoft.UI.Xaml.Data.BindingExpressionBase
                {
                    [default] interface Microsoft.UI.Xaml.Data.IBindingExpression;
                }

                [composable(Microsoft.UI.Xaml.Data.IBindingExpressionBaseFactory, public, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass BindingExpressionBase
                {
                    [default] interface Microsoft.UI.Xaml.Data.IBindingExpressionBase;
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Data.IBindingOperationsStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass BindingOperations
                {
                    [default] interface Microsoft.UI.Xaml.Data.IBindingOperations;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Data.ICollectionViewSourceStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass CollectionViewSource : Microsoft.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Xaml.Data.ICollectionViewSource;
                }

                [composable(Microsoft.UI.Xaml.Data.ICurrentChangingEventArgsFactory, public, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass CurrentChangingEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Data.ICurrentChangingEventArgs;
                }

                [activatable(Microsoft.UI.Xaml.Data.IDataErrorsChangedEventArgsFactory, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass DataErrorsChangedEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Data.IDataErrorsChangedEventArgs;
                }

                [composable(Microsoft.UI.Xaml.Data.IItemIndexRangeFactory, public, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass ItemIndexRange
                {
                    [default] interface Microsoft.UI.Xaml.Data.IItemIndexRange;
                }

                [composable(Microsoft.UI.Xaml.Data.IPropertyChangedEventArgsFactory, public, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass PropertyChangedEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Data.IPropertyChangedEventArgs;
                }

                [composable(Microsoft.UI.Xaml.Data.IRelativeSourceFactory, public, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass RelativeSource : Microsoft.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Xaml.Data.IRelativeSource;
                }
            }
        }
    }
}
