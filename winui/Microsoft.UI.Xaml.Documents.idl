//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "windowscontracts.idl";
import "Windows.Foundation.idl";
import "Microsoft.UI.Xaml.idl";
import "Microsoft.UI.Xaml.Input.idl";
import "Microsoft.UI.Xaml.Media.idl";
import "Windows.UI.Text.idl";

// Forward Declare
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            runtimeclass DependencyObject;

            runtimeclass DependencyProperty;

            typedef enum ElementSoundMode ElementSoundMode;

            typedef enum FlowDirection FlowDirection;

            typedef enum FocusState FocusState;

            typedef enum FontCapitals FontCapitals;

            typedef enum FontEastAsianLanguage FontEastAsianLanguage;

            typedef enum FontEastAsianWidths FontEastAsianWidths;

            typedef enum FontFraction FontFraction;

            typedef enum FontNumeralAlignment FontNumeralAlignment;

            typedef enum FontNumeralStyle FontNumeralStyle;

            typedef enum FontVariants FontVariants;

            runtimeclass FrameworkElement;
        }
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Input
            {
                runtimeclass AccessKeyDisplayDismissedEventArgs;

                runtimeclass AccessKeyDisplayRequestedEventArgs;

                runtimeclass AccessKeyInvokedEventArgs;

                typedef enum KeyTipPlacementMode KeyTipPlacementMode;

                typedef enum XYFocusNavigationStrategy XYFocusNavigationStrategy;
            }
        }
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            typedef enum LineStackingStrategy LineStackingStrategy;
        }
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Media
            {
                runtimeclass Brush;

                runtimeclass FontFamily;

                typedef enum StyleSimulations StyleSimulations;
            }
        }
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            delegate RoutedEventHandler;

            typedef enum TextAlignment TextAlignment;

            typedef struct Thickness Thickness;

            runtimeclass UIElement;

            apicontract WinUIContract;

            runtimeclass XamlRoot;
        }
    }
}
namespace Windows
{
    namespace Foundation
    {
        typedef struct Rect Rect;

        runtimeclass Uri;
    }
}
namespace Windows
{
    namespace UI
    {
        namespace Text
        {
            typedef enum FontStretch FontStretch;

            typedef enum FontStyle FontStyle;

            typedef struct FontWeight FontWeight;

            typedef enum TextDecorations TextDecorations;
        }
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Documents
            {
                typedef enum LogicalDirection LogicalDirection;

                typedef enum UnderlineStyle UnderlineStyle;

                typedef struct TextRange TextRange;

                interface IBlock;

                interface IBlockFactory;

                interface IBlockStatics;

                interface IBold;

                interface IGlyphs;

                interface IGlyphsStatics;

                interface IHyperlink;

                interface IHyperlinkClickEventArgs;

                interface IHyperlinkStatics;

                interface IInline;

                interface IInlineFactory;

                interface IInlineUIContainer;

                interface IItalic;

                interface ILineBreak;

                interface IParagraph;

                interface IParagraphStatics;

                interface IRun;

                interface IRunStatics;

                interface ISpan;

                interface ISpanFactory;

                interface ITextElement;

                interface ITextElementFactory;

                interface ITextElementOverrides;

                interface ITextElementStatics;

                interface ITextHighlighter;

                interface ITextHighlighterBase;

                interface ITextHighlighterBaseFactory;

                interface ITextHighlighterFactory;

                interface ITextHighlighterStatics;

                interface ITextPointer;

                interface ITypography;

                interface ITypographyStatics;

                interface IUnderline;

                runtimeclass Block;

                runtimeclass BlockCollection;

                runtimeclass Bold;

                runtimeclass Glyphs;

                runtimeclass Hyperlink;

                runtimeclass HyperlinkClickEventArgs;

                runtimeclass Inline;

                runtimeclass InlineCollection;

                runtimeclass InlineUIContainer;

                runtimeclass Italic;

                runtimeclass LineBreak;

                runtimeclass Paragraph;

                runtimeclass Run;

                runtimeclass Span;

                runtimeclass TextElement;

                runtimeclass TextHighlighter;

                runtimeclass TextHighlighterBase;

                runtimeclass TextPointer;

                runtimeclass Typography;

                runtimeclass Underline;
            }
        }
    }
}

// Generic instantiations
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Documents
            {
                declare
                {
                    interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Documents.Block*>;

                    interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Documents.Inline*>;

                    interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Documents.TextHighlighter*>;

                    interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Documents.TextRange>;

                    interface Windows.Foundation.Collections.IIterator<Microsoft.UI.Xaml.Documents.Block*>;

                    interface Windows.Foundation.Collections.IIterator<Microsoft.UI.Xaml.Documents.Inline*>;

                    interface Windows.Foundation.Collections.IIterator<Microsoft.UI.Xaml.Documents.TextHighlighter*>;

                    interface Windows.Foundation.Collections.IIterator<Microsoft.UI.Xaml.Documents.TextRange>;

                    interface Windows.Foundation.Collections.IVectorView<Microsoft.UI.Xaml.Documents.Block*>;

                    interface Windows.Foundation.Collections.IVectorView<Microsoft.UI.Xaml.Documents.Inline*>;

                    interface Windows.Foundation.Collections.IVectorView<Microsoft.UI.Xaml.Documents.TextHighlighter*>;

                    interface Windows.Foundation.Collections.IVectorView<Microsoft.UI.Xaml.Documents.TextRange>;

                    interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Documents.Block*>;

                    interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Documents.Inline*>;

                    interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Documents.TextHighlighter*>;

                    interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Documents.TextRange>;

                    interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Documents.Hyperlink*, Microsoft.UI.Xaml.Documents.HyperlinkClickEventArgs*>;
                }
            }
        }
    }
}

// Type definition
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Documents
            {
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                enum LogicalDirection
                {
                    Backward = 0,
                    Forward  = 1
                };

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                enum UnderlineStyle
                {
                    None   = 0,
                    Single = 1
                };

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                struct TextRange
                {
                    INT32 StartIndex;
                    INT32 Length;
                };

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Documents.Block)]
                [uuid(8149D507-672F-5FD5-A10A-351389BA9659)]
                interface IBlock : IInspectable
                {
                    [propget] HRESULT TextAlignment([out] [retval] Microsoft.UI.Xaml.TextAlignment* value);
                    [propput] HRESULT TextAlignment([in] Microsoft.UI.Xaml.TextAlignment value);
                    [propget] HRESULT HorizontalTextAlignment([out] [retval] Microsoft.UI.Xaml.TextAlignment* value);
                    [propput] HRESULT HorizontalTextAlignment([in] Microsoft.UI.Xaml.TextAlignment value);
                    [propget] HRESULT LineHeight([out] [retval] DOUBLE* value);
                    [propput] HRESULT LineHeight([in] DOUBLE value);
                    [propget] HRESULT LineStackingStrategy([out] [retval] Microsoft.UI.Xaml.LineStackingStrategy* value);
                    [propput] HRESULT LineStackingStrategy([in] Microsoft.UI.Xaml.LineStackingStrategy value);
                    [propget] HRESULT Margin([out] [retval] Microsoft.UI.Xaml.Thickness* value);
                    [propput] HRESULT Margin([in] Microsoft.UI.Xaml.Thickness value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Documents.Block)]
                [uuid(21BD671C-33E2-56EF-BE37-A128E898452C)]
                interface IBlockFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Documents.Block** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Documents.Block)]
                [uuid(830FEEDF-9AA6-56CD-983E-055500171B45)]
                interface IBlockStatics : IInspectable
                {
                    [propget] HRESULT TextAlignmentProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT HorizontalTextAlignmentProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT LineHeightProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT LineStackingStrategyProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT MarginProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Documents.Bold)]
                [uuid(241A5F5A-C164-597F-B0DB-FAC7431297F2)]
                interface IBold : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Documents.Glyphs)]
                [uuid(0FBF8CFE-18E7-5E45-9FA3-D2D0927958F4)]
                interface IGlyphs : IInspectable
                {
                    [propget] HRESULT UnicodeString([out] [retval] HSTRING* value);
                    [propput] HRESULT UnicodeString([in] HSTRING value);
                    [propget] HRESULT Indices([out] [retval] HSTRING* value);
                    [propput] HRESULT Indices([in] HSTRING value);
                    [propget] HRESULT FontUri([out] [retval] Windows.Foundation.Uri** value);
                    [propput] HRESULT FontUri([in] Windows.Foundation.Uri* value);
                    [propget] HRESULT StyleSimulations([out] [retval] Microsoft.UI.Xaml.Media.StyleSimulations* value);
                    [propput] HRESULT StyleSimulations([in] Microsoft.UI.Xaml.Media.StyleSimulations value);
                    [propget] HRESULT FontRenderingEmSize([out] [retval] DOUBLE* value);
                    [propput] HRESULT FontRenderingEmSize([in] DOUBLE value);
                    [propget] HRESULT OriginX([out] [retval] DOUBLE* value);
                    [propput] HRESULT OriginX([in] DOUBLE value);
                    [propget] HRESULT OriginY([out] [retval] DOUBLE* value);
                    [propput] HRESULT OriginY([in] DOUBLE value);
                    [propget] HRESULT Fill([out] [retval] Microsoft.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT Fill([in] Microsoft.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT IsColorFontEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsColorFontEnabled([in] boolean value);
                    [propget] HRESULT ColorFontPaletteIndex([out] [retval] INT32* value);
                    [propput] HRESULT ColorFontPaletteIndex([in] INT32 value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Documents.Glyphs)]
                [uuid(8D9E241A-3E0E-5100-8EDE-E008034FF8AE)]
                interface IGlyphsStatics : IInspectable
                {
                    [propget] HRESULT UnicodeStringProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IndicesProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontUriProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT StyleSimulationsProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontRenderingEmSizeProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OriginXProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT OriginYProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FillProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsColorFontEnabledProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ColorFontPaletteIndexProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Documents.Hyperlink)]
                [uuid(AC09BD16-CDFA-54C2-8D03-A474181545B1)]
                interface IHyperlink : IInspectable
                {
                    [propget] HRESULT NavigateUri([out] [retval] Windows.Foundation.Uri** value);
                    [propput] HRESULT NavigateUri([in] Windows.Foundation.Uri* value);
                    [propget] HRESULT UnderlineStyle([out] [retval] Microsoft.UI.Xaml.Documents.UnderlineStyle* value);
                    [propput] HRESULT UnderlineStyle([in] Microsoft.UI.Xaml.Documents.UnderlineStyle value);
                    [propget] HRESULT XYFocusLeft([out] [retval] Microsoft.UI.Xaml.DependencyObject** value);
                    [propput] HRESULT XYFocusLeft([in] Microsoft.UI.Xaml.DependencyObject* value);
                    [propget] HRESULT XYFocusRight([out] [retval] Microsoft.UI.Xaml.DependencyObject** value);
                    [propput] HRESULT XYFocusRight([in] Microsoft.UI.Xaml.DependencyObject* value);
                    [propget] HRESULT XYFocusUp([out] [retval] Microsoft.UI.Xaml.DependencyObject** value);
                    [propput] HRESULT XYFocusUp([in] Microsoft.UI.Xaml.DependencyObject* value);
                    [propget] HRESULT XYFocusDown([out] [retval] Microsoft.UI.Xaml.DependencyObject** value);
                    [propput] HRESULT XYFocusDown([in] Microsoft.UI.Xaml.DependencyObject* value);
                    [propget] HRESULT ElementSoundMode([out] [retval] Microsoft.UI.Xaml.ElementSoundMode* value);
                    [propput] HRESULT ElementSoundMode([in] Microsoft.UI.Xaml.ElementSoundMode value);
                    [propget] HRESULT FocusState([out] [retval] Microsoft.UI.Xaml.FocusState* value);
                    [propget] HRESULT XYFocusUpNavigationStrategy([out] [retval] Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy* value);
                    [propput] HRESULT XYFocusUpNavigationStrategy([in] Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy value);
                    [propget] HRESULT XYFocusDownNavigationStrategy([out] [retval] Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy* value);
                    [propput] HRESULT XYFocusDownNavigationStrategy([in] Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy value);
                    [propget] HRESULT XYFocusLeftNavigationStrategy([out] [retval] Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy* value);
                    [propput] HRESULT XYFocusLeftNavigationStrategy([in] Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy value);
                    [propget] HRESULT XYFocusRightNavigationStrategy([out] [retval] Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy* value);
                    [propput] HRESULT XYFocusRightNavigationStrategy([in] Microsoft.UI.Xaml.Input.XYFocusNavigationStrategy value);
                    [propget] HRESULT IsTabStop([out] [retval] boolean* value);
                    [propput] HRESULT IsTabStop([in] boolean value);
                    [propget] HRESULT TabIndex([out] [retval] INT32* value);
                    [propput] HRESULT TabIndex([in] INT32 value);
                    [eventadd] HRESULT Click([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Documents.Hyperlink*, Microsoft.UI.Xaml.Documents.HyperlinkClickEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT Click([in] EventRegistrationToken token);
                    [eventadd] HRESULT GotFocus([in] Microsoft.UI.Xaml.RoutedEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT GotFocus([in] EventRegistrationToken token);
                    [eventadd] HRESULT LostFocus([in] Microsoft.UI.Xaml.RoutedEventHandler* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT LostFocus([in] EventRegistrationToken token);
                    HRESULT Focus([in] Microsoft.UI.Xaml.FocusState value, [out] [retval] boolean* result);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Documents.HyperlinkClickEventArgs)]
                [uuid(F8F89552-873D-5EF5-82BF-C79A9509B07C)]
                interface IHyperlinkClickEventArgs : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Documents.Hyperlink)]
                [uuid(E13598F4-7BC7-5AB9-885B-70F32F8C9531)]
                interface IHyperlinkStatics : IInspectable
                {
                    [propget] HRESULT NavigateUriProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT UnderlineStyleProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT XYFocusLeftProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT XYFocusRightProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT XYFocusUpProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT XYFocusDownProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ElementSoundModeProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FocusStateProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT XYFocusUpNavigationStrategyProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT XYFocusDownNavigationStrategyProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT XYFocusLeftNavigationStrategyProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT XYFocusRightNavigationStrategyProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsTabStopProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TabIndexProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Documents.Inline)]
                [uuid(813D427A-8980-5A79-A8FA-F27919CFB24F)]
                interface IInline : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Documents.Inline)]
                [uuid(FD253A36-FA2B-5B30-89A8-9F577871EC07)]
                interface IInlineFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Documents.Inline** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Documents.InlineUIContainer)]
                [uuid(D529BEF6-C05A-5BAD-85E8-640127CF86F5)]
                interface IInlineUIContainer : IInspectable
                {
                    [propget] HRESULT Child([out] [retval] Microsoft.UI.Xaml.UIElement** value);
                    [propput] HRESULT Child([in] Microsoft.UI.Xaml.UIElement* value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Documents.Italic)]
                [uuid(CA3CBEBD-7A8D-5D7A-8FDF-538E8A680F6C)]
                interface IItalic : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Documents.LineBreak)]
                [uuid(09307599-7CC2-5F54-B106-728620C16F76)]
                interface ILineBreak : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Documents.Paragraph)]
                [uuid(9ED64C77-329D-502F-A257-F58398EDAB51)]
                interface IParagraph : IInspectable
                {
                    [propget] HRESULT Inlines([out] [retval] Microsoft.UI.Xaml.Documents.InlineCollection** value);
                    [propget] HRESULT TextIndent([out] [retval] DOUBLE* value);
                    [propput] HRESULT TextIndent([in] DOUBLE value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Documents.Paragraph)]
                [uuid(4EB89AB1-66C8-5FC0-AA5F-48C8092CEB5F)]
                interface IParagraphStatics : IInspectable
                {
                    [propget] HRESULT TextIndentProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Documents.Run)]
                [uuid(1F905239-37CB-590B-9132-3FFB7741906E)]
                interface IRun : IInspectable
                {
                    [propget] HRESULT Text([out] [retval] HSTRING* value);
                    [propput] HRESULT Text([in] HSTRING value);
                    [propget] HRESULT FlowDirection([out] [retval] Microsoft.UI.Xaml.FlowDirection* value);
                    [propput] HRESULT FlowDirection([in] Microsoft.UI.Xaml.FlowDirection value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Documents.Run)]
                [uuid(051B3C5B-7600-51A5-80C5-93EB50FD684F)]
                interface IRunStatics : IInspectable
                {
                    [propget] HRESULT FlowDirectionProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Documents.Span)]
                [uuid(91B93D4D-4E28-57B9-BFFB-3566C2A3C2A1)]
                interface ISpan : IInspectable
                {
                    [propget] HRESULT Inlines([out] [retval] Microsoft.UI.Xaml.Documents.InlineCollection** value);
                    [propput] HRESULT Inlines([in] Microsoft.UI.Xaml.Documents.InlineCollection* value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Documents.Span)]
                [uuid(A6E87C16-C175-55C8-BBD3-CE40F9D0A680)]
                interface ISpanFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Documents.Span** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Documents.TextElement)]
                [uuid(A122BA22-833F-5220-A47E-6CD507531ABE)]
                interface ITextElement : IInspectable
                {
                    [propget] HRESULT Name([out] [retval] HSTRING* value);
                    [propget] HRESULT FontSize([out] [retval] DOUBLE* value);
                    [propput] HRESULT FontSize([in] DOUBLE value);
                    [propget] HRESULT FontFamily([out] [retval] Microsoft.UI.Xaml.Media.FontFamily** value);
                    [propput] HRESULT FontFamily([in] Microsoft.UI.Xaml.Media.FontFamily* value);
                    [propget] HRESULT FontWeight([out] [retval] Windows.UI.Text.FontWeight* value);
                    [propput] HRESULT FontWeight([in] Windows.UI.Text.FontWeight value);
                    [propget] HRESULT FontStyle([out] [retval] Windows.UI.Text.FontStyle* value);
                    [propput] HRESULT FontStyle([in] Windows.UI.Text.FontStyle value);
                    [propget] HRESULT FontStretch([out] [retval] Windows.UI.Text.FontStretch* value);
                    [propput] HRESULT FontStretch([in] Windows.UI.Text.FontStretch value);
                    [propget] HRESULT CharacterSpacing([out] [retval] INT32* value);
                    [propput] HRESULT CharacterSpacing([in] INT32 value);
                    [propget] HRESULT Foreground([out] [retval] Microsoft.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT Foreground([in] Microsoft.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT Language([out] [retval] HSTRING* value);
                    [propput] HRESULT Language([in] HSTRING value);
                    [propget] HRESULT IsTextScaleFactorEnabled([out] [retval] boolean* value);
                    [propput] HRESULT IsTextScaleFactorEnabled([in] boolean value);
                    [propget] HRESULT TextDecorations([out] [retval] Windows.UI.Text.TextDecorations* value);
                    [propput] HRESULT TextDecorations([in] Windows.UI.Text.TextDecorations value);
                    [propget] HRESULT ContentStart([out] [retval] Microsoft.UI.Xaml.Documents.TextPointer** value);
                    [propget] HRESULT ContentEnd([out] [retval] Microsoft.UI.Xaml.Documents.TextPointer** value);
                    [propget] HRESULT ElementStart([out] [retval] Microsoft.UI.Xaml.Documents.TextPointer** value);
                    [propget] HRESULT ElementEnd([out] [retval] Microsoft.UI.Xaml.Documents.TextPointer** value);
                    [propget] HRESULT AllowFocusOnInteraction([out] [retval] boolean* value);
                    [propput] HRESULT AllowFocusOnInteraction([in] boolean value);
                    [propget] HRESULT AccessKey([out] [retval] HSTRING* value);
                    [propput] HRESULT AccessKey([in] HSTRING value);
                    [propget] HRESULT ExitDisplayModeOnAccessKeyInvoked([out] [retval] boolean* value);
                    [propput] HRESULT ExitDisplayModeOnAccessKeyInvoked([in] boolean value);
                    [propget] HRESULT IsAccessKeyScope([out] [retval] boolean* value);
                    [propput] HRESULT IsAccessKeyScope([in] boolean value);
                    [propget] HRESULT AccessKeyScopeOwner([out] [retval] Microsoft.UI.Xaml.DependencyObject** value);
                    [propput] HRESULT AccessKeyScopeOwner([in] Microsoft.UI.Xaml.DependencyObject* value);
                    [propget] HRESULT KeyTipPlacementMode([out] [retval] Microsoft.UI.Xaml.Input.KeyTipPlacementMode* value);
                    [propput] HRESULT KeyTipPlacementMode([in] Microsoft.UI.Xaml.Input.KeyTipPlacementMode value);
                    [propget] HRESULT KeyTipHorizontalOffset([out] [retval] DOUBLE* value);
                    [propput] HRESULT KeyTipHorizontalOffset([in] DOUBLE value);
                    [propget] HRESULT KeyTipVerticalOffset([out] [retval] DOUBLE* value);
                    [propput] HRESULT KeyTipVerticalOffset([in] DOUBLE value);
                    [propget] HRESULT XamlRoot([out] [retval] Microsoft.UI.Xaml.XamlRoot** value);
                    [propput] HRESULT XamlRoot([in] Microsoft.UI.Xaml.XamlRoot* value);
                    [eventadd] HRESULT AccessKeyDisplayRequested([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Documents.TextElement*, Microsoft.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT AccessKeyDisplayRequested([in] EventRegistrationToken token);
                    [eventadd] HRESULT AccessKeyDisplayDismissed([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Documents.TextElement*, Microsoft.UI.Xaml.Input.AccessKeyDisplayDismissedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT AccessKeyDisplayDismissed([in] EventRegistrationToken token);
                    [eventadd] HRESULT AccessKeyInvoked([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Documents.TextElement*, Microsoft.UI.Xaml.Input.AccessKeyInvokedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                    [eventremove] HRESULT AccessKeyInvoked([in] EventRegistrationToken token);
                    HRESULT FindName([in] HSTRING name, [out] [retval] IInspectable** result);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Documents.TextElement)]
                [uuid(DF51FB95-A5E6-5B16-8E88-9F7CBFA234B1)]
                interface ITextElementFactory : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Documents.TextElement)]
                [uuid(41B01380-E49F-5FDA-8C72-ACC1AC1E91DF)]
                interface ITextElementOverrides : IInspectable
                {
                    HRESULT OnDisconnectVisualChildren();
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Documents.TextElement)]
                [uuid(C9B55919-E1FE-5ACD-BAC7-C9D7F413B35C)]
                interface ITextElementStatics : IInspectable
                {
                    [propget] HRESULT FontSizeProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontFamilyProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontWeightProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontStyleProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT FontStretchProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT CharacterSpacingProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ForegroundProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT LanguageProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsTextScaleFactorEnabledProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT TextDecorationsProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AllowFocusOnInteractionProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AccessKeyProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ExitDisplayModeOnAccessKeyInvokedProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsAccessKeyScopeProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT AccessKeyScopeOwnerProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT KeyTipPlacementModeProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT KeyTipHorizontalOffsetProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT KeyTipVerticalOffsetProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Documents.TextHighlighter)]
                [uuid(B756E861-1D2B-5F6F-81FD-C51A5BC068FF)]
                interface ITextHighlighter : IInspectable
                {
                    [propget] HRESULT Ranges([out] [retval] Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Documents.TextRange>** value);
                    [propget] HRESULT Foreground([out] [retval] Microsoft.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT Foreground([in] Microsoft.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT Background([out] [retval] Microsoft.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT Background([in] Microsoft.UI.Xaml.Media.Brush* value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Documents.TextHighlighterBase)]
                [uuid(5C21AAF0-3A17-5468-8AAC-BE14DB0ED8C1)]
                interface ITextHighlighterBase : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Documents.TextHighlighterBase)]
                [uuid(E091E461-53AB-599E-AAEA-800ADC72DA4F)]
                interface ITextHighlighterBaseFactory : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Documents.TextHighlighter)]
                [uuid(69C7311F-C019-5B93-B511-81418543BAB7)]
                interface ITextHighlighterFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Documents.TextHighlighter** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Documents.TextHighlighter)]
                [uuid(4975047A-87AD-51A2-977C-E771DE4F4035)]
                interface ITextHighlighterStatics : IInspectable
                {
                    [propget] HRESULT ForegroundProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT BackgroundProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Documents.TextPointer)]
                [uuid(842EB385-EE41-5930-979B-438FA7525A51)]
                interface ITextPointer : IInspectable
                {
                    [propget] HRESULT Parent([out] [retval] Microsoft.UI.Xaml.DependencyObject** value);
                    [propget] HRESULT VisualParent([out] [retval] Microsoft.UI.Xaml.FrameworkElement** value);
                    [propget] HRESULT LogicalDirection([out] [retval] Microsoft.UI.Xaml.Documents.LogicalDirection* value);
                    [propget] HRESULT Offset([out] [retval] INT32* value);
                    HRESULT GetCharacterRect([in] Microsoft.UI.Xaml.Documents.LogicalDirection direction, [out] [retval] Windows.Foundation.Rect* result);
                    HRESULT GetPositionAtOffset([in] INT32 offset, [in] Microsoft.UI.Xaml.Documents.LogicalDirection direction, [out] [retval] Microsoft.UI.Xaml.Documents.TextPointer** result);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Documents.Typography)]
                [uuid(FA27E2E3-BE5E-5D21-9A5E-90CF102AF828)]
                interface ITypography : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Documents.Typography)]
                [uuid(55FE4535-2125-533A-ADA8-27BE2B9E1193)]
                interface ITypographyStatics : IInspectable
                {
                    [propget] HRESULT AnnotationAlternatesProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetAnnotationAlternates([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] INT32* result);
                    HRESULT SetAnnotationAlternates([in] Microsoft.UI.Xaml.DependencyObject* element, [in] INT32 value);
                    [propget] HRESULT EastAsianExpertFormsProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetEastAsianExpertForms([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] boolean* result);
                    HRESULT SetEastAsianExpertForms([in] Microsoft.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT EastAsianLanguageProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetEastAsianLanguage([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] Microsoft.UI.Xaml.FontEastAsianLanguage* result);
                    HRESULT SetEastAsianLanguage([in] Microsoft.UI.Xaml.DependencyObject* element, [in] Microsoft.UI.Xaml.FontEastAsianLanguage value);
                    [propget] HRESULT EastAsianWidthsProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetEastAsianWidths([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] Microsoft.UI.Xaml.FontEastAsianWidths* result);
                    HRESULT SetEastAsianWidths([in] Microsoft.UI.Xaml.DependencyObject* element, [in] Microsoft.UI.Xaml.FontEastAsianWidths value);
                    [propget] HRESULT StandardLigaturesProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetStandardLigatures([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] boolean* result);
                    HRESULT SetStandardLigatures([in] Microsoft.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT ContextualLigaturesProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetContextualLigatures([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] boolean* result);
                    HRESULT SetContextualLigatures([in] Microsoft.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT DiscretionaryLigaturesProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetDiscretionaryLigatures([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] boolean* result);
                    HRESULT SetDiscretionaryLigatures([in] Microsoft.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT HistoricalLigaturesProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetHistoricalLigatures([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] boolean* result);
                    HRESULT SetHistoricalLigatures([in] Microsoft.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT StandardSwashesProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetStandardSwashes([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] INT32* result);
                    HRESULT SetStandardSwashes([in] Microsoft.UI.Xaml.DependencyObject* element, [in] INT32 value);
                    [propget] HRESULT ContextualSwashesProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetContextualSwashes([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] INT32* result);
                    HRESULT SetContextualSwashes([in] Microsoft.UI.Xaml.DependencyObject* element, [in] INT32 value);
                    [propget] HRESULT ContextualAlternatesProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetContextualAlternates([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] boolean* result);
                    HRESULT SetContextualAlternates([in] Microsoft.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT StylisticAlternatesProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetStylisticAlternates([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] INT32* result);
                    HRESULT SetStylisticAlternates([in] Microsoft.UI.Xaml.DependencyObject* element, [in] INT32 value);
                    [propget] HRESULT StylisticSet1Property([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetStylisticSet1([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] boolean* result);
                    HRESULT SetStylisticSet1([in] Microsoft.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT StylisticSet2Property([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetStylisticSet2([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] boolean* result);
                    HRESULT SetStylisticSet2([in] Microsoft.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT StylisticSet3Property([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetStylisticSet3([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] boolean* result);
                    HRESULT SetStylisticSet3([in] Microsoft.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT StylisticSet4Property([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetStylisticSet4([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] boolean* result);
                    HRESULT SetStylisticSet4([in] Microsoft.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT StylisticSet5Property([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetStylisticSet5([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] boolean* result);
                    HRESULT SetStylisticSet5([in] Microsoft.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT StylisticSet6Property([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetStylisticSet6([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] boolean* result);
                    HRESULT SetStylisticSet6([in] Microsoft.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT StylisticSet7Property([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetStylisticSet7([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] boolean* result);
                    HRESULT SetStylisticSet7([in] Microsoft.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT StylisticSet8Property([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetStylisticSet8([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] boolean* result);
                    HRESULT SetStylisticSet8([in] Microsoft.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT StylisticSet9Property([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetStylisticSet9([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] boolean* result);
                    HRESULT SetStylisticSet9([in] Microsoft.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT StylisticSet10Property([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetStylisticSet10([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] boolean* result);
                    HRESULT SetStylisticSet10([in] Microsoft.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT StylisticSet11Property([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetStylisticSet11([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] boolean* result);
                    HRESULT SetStylisticSet11([in] Microsoft.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT StylisticSet12Property([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetStylisticSet12([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] boolean* result);
                    HRESULT SetStylisticSet12([in] Microsoft.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT StylisticSet13Property([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetStylisticSet13([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] boolean* result);
                    HRESULT SetStylisticSet13([in] Microsoft.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT StylisticSet14Property([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetStylisticSet14([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] boolean* result);
                    HRESULT SetStylisticSet14([in] Microsoft.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT StylisticSet15Property([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetStylisticSet15([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] boolean* result);
                    HRESULT SetStylisticSet15([in] Microsoft.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT StylisticSet16Property([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetStylisticSet16([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] boolean* result);
                    HRESULT SetStylisticSet16([in] Microsoft.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT StylisticSet17Property([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetStylisticSet17([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] boolean* result);
                    HRESULT SetStylisticSet17([in] Microsoft.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT StylisticSet18Property([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetStylisticSet18([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] boolean* result);
                    HRESULT SetStylisticSet18([in] Microsoft.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT StylisticSet19Property([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetStylisticSet19([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] boolean* result);
                    HRESULT SetStylisticSet19([in] Microsoft.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT StylisticSet20Property([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetStylisticSet20([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] boolean* result);
                    HRESULT SetStylisticSet20([in] Microsoft.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT CapitalsProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetCapitals([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] Microsoft.UI.Xaml.FontCapitals* result);
                    HRESULT SetCapitals([in] Microsoft.UI.Xaml.DependencyObject* element, [in] Microsoft.UI.Xaml.FontCapitals value);
                    [propget] HRESULT CapitalSpacingProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetCapitalSpacing([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] boolean* result);
                    HRESULT SetCapitalSpacing([in] Microsoft.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT KerningProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetKerning([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] boolean* result);
                    HRESULT SetKerning([in] Microsoft.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT CaseSensitiveFormsProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetCaseSensitiveForms([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] boolean* result);
                    HRESULT SetCaseSensitiveForms([in] Microsoft.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT HistoricalFormsProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetHistoricalForms([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] boolean* result);
                    HRESULT SetHistoricalForms([in] Microsoft.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT FractionProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetFraction([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] Microsoft.UI.Xaml.FontFraction* result);
                    HRESULT SetFraction([in] Microsoft.UI.Xaml.DependencyObject* element, [in] Microsoft.UI.Xaml.FontFraction value);
                    [propget] HRESULT NumeralStyleProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetNumeralStyle([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] Microsoft.UI.Xaml.FontNumeralStyle* result);
                    HRESULT SetNumeralStyle([in] Microsoft.UI.Xaml.DependencyObject* element, [in] Microsoft.UI.Xaml.FontNumeralStyle value);
                    [propget] HRESULT NumeralAlignmentProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetNumeralAlignment([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] Microsoft.UI.Xaml.FontNumeralAlignment* result);
                    HRESULT SetNumeralAlignment([in] Microsoft.UI.Xaml.DependencyObject* element, [in] Microsoft.UI.Xaml.FontNumeralAlignment value);
                    [propget] HRESULT SlashedZeroProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetSlashedZero([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] boolean* result);
                    HRESULT SetSlashedZero([in] Microsoft.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT MathematicalGreekProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetMathematicalGreek([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] boolean* result);
                    HRESULT SetMathematicalGreek([in] Microsoft.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT VariantsProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetVariants([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] Microsoft.UI.Xaml.FontVariants* result);
                    HRESULT SetVariants([in] Microsoft.UI.Xaml.DependencyObject* element, [in] Microsoft.UI.Xaml.FontVariants value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Documents.Underline)]
                [uuid(68AAEC6E-EA71-5ED2-B83E-91684B25EFB9)]
                interface IUnderline : IInspectable
                {
                }

                [composable(Microsoft.UI.Xaml.Documents.IBlockFactory, protected, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Documents.IBlockStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass Block : Microsoft.UI.Xaml.Documents.TextElement
                {
                    [default] interface Microsoft.UI.Xaml.Documents.IBlock;
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass BlockCollection
                {
                    [default] interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Documents.Block*>;
                    interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Documents.Block*>;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass Bold : Microsoft.UI.Xaml.Documents.Span
                {
                    [default] interface Microsoft.UI.Xaml.Documents.IBold;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Documents.IGlyphsStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass Glyphs : Microsoft.UI.Xaml.FrameworkElement
                {
                    [default] interface Microsoft.UI.Xaml.Documents.IGlyphs;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Documents.IHyperlinkStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass Hyperlink : Microsoft.UI.Xaml.Documents.Span
                {
                    [default] interface Microsoft.UI.Xaml.Documents.IHyperlink;
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass HyperlinkClickEventArgs : Microsoft.UI.Xaml.RoutedEventArgs
                {
                    [default] interface Microsoft.UI.Xaml.Documents.IHyperlinkClickEventArgs;
                }

                [composable(Microsoft.UI.Xaml.Documents.IInlineFactory, protected, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass Inline : Microsoft.UI.Xaml.Documents.TextElement
                {
                    [default] interface Microsoft.UI.Xaml.Documents.IInline;
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass InlineCollection
                {
                    [default] interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Documents.Inline*>;
                    interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Documents.Inline*>;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass InlineUIContainer : Microsoft.UI.Xaml.Documents.Inline
                {
                    [default] interface Microsoft.UI.Xaml.Documents.IInlineUIContainer;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass Italic : Microsoft.UI.Xaml.Documents.Span
                {
                    [default] interface Microsoft.UI.Xaml.Documents.IItalic;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass LineBreak : Microsoft.UI.Xaml.Documents.Inline
                {
                    [default] interface Microsoft.UI.Xaml.Documents.ILineBreak;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Documents.IParagraphStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass Paragraph : Microsoft.UI.Xaml.Documents.Block
                {
                    [default] interface Microsoft.UI.Xaml.Documents.IParagraph;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Documents.IRunStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass Run : Microsoft.UI.Xaml.Documents.Inline
                {
                    [default] interface Microsoft.UI.Xaml.Documents.IRun;
                }

                [composable(Microsoft.UI.Xaml.Documents.ISpanFactory, public, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass Span : Microsoft.UI.Xaml.Documents.Inline
                {
                    [default] interface Microsoft.UI.Xaml.Documents.ISpan;
                }

                [composable(Microsoft.UI.Xaml.Documents.ITextElementFactory, public, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Documents.ITextElementStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass TextElement : Microsoft.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Xaml.Documents.ITextElement;
                    [overridable] interface Microsoft.UI.Xaml.Documents.ITextElementOverrides;
                }

                [composable(Microsoft.UI.Xaml.Documents.ITextHighlighterFactory, public, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Documents.ITextHighlighterStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass TextHighlighter
                {
                    [default] interface Microsoft.UI.Xaml.Documents.ITextHighlighter;
                }

                [composable(Microsoft.UI.Xaml.Documents.ITextHighlighterBaseFactory, public, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass TextHighlighterBase : Microsoft.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Xaml.Documents.ITextHighlighterBase;
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass TextPointer
                {
                    [default] interface Microsoft.UI.Xaml.Documents.ITextPointer;
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Documents.ITypographyStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass Typography
                {
                    [default] interface Microsoft.UI.Xaml.Documents.ITypography;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass Underline : Microsoft.UI.Xaml.Documents.Span
                {
                    [default] interface Microsoft.UI.Xaml.Documents.IUnderline;
                }
            }
        }
    }
}
