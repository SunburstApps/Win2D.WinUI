//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "windowscontracts.idl";
import "Windows.Foundation.idl";
import "Microsoft.UI.Composition.idl";
import "Microsoft.UI.Xaml.idl";
import "Microsoft.UI.Xaml.Controls.idl";
import "Microsoft.UI.Xaml.Controls.Primitives.idl";
import "Windows.UI.idl";

// Forward Declare
namespace Microsoft
{
    namespace UI
    {
        namespace Composition
        {
            runtimeclass CompositionEasingFunction;

            interface ICompositionAnimationBase;
        }
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Controls
            {
                runtimeclass ListViewBase;
            }
        }
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Controls
            {
                namespace Primitives
                {
                    typedef enum AnimationDirection AnimationDirection;

                    typedef enum EdgeTransitionLocation EdgeTransitionLocation;
                }
            }
        }
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            runtimeclass DependencyObject;

            runtimeclass DependencyProperty;

            typedef struct Duration Duration;

            apicontract PrivateApiContract;

            typedef enum TransitionParent TransitionParent;

            typedef enum TransitionTrigger TransitionTrigger;

            runtimeclass UIElement;

            apicontract WinUIContract;
        }
    }
}
namespace Windows
{
    namespace Foundation
    {
        typedef struct Point Point;

        typedef struct Rect Rect;

        typedef struct TimeSpan TimeSpan;
    }
}
namespace Windows
{
    namespace UI
    {
        typedef struct Color Color;
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Media
            {
                namespace Animation
                {
                    typedef enum ClockState ClockState;

                    typedef enum ConnectedAnimationComponent ConnectedAnimationComponent;

                    typedef enum EasingMode EasingMode;

                    typedef enum FillBehavior FillBehavior;

                    typedef enum NavigationTrigger NavigationTrigger;

                    typedef enum RepeatBehaviorType RepeatBehaviorType;

                    typedef enum SlideNavigationTransitionEffect SlideNavigationTransitionEffect;

                    typedef struct KeyTime KeyTime;

                    typedef struct RepeatBehavior RepeatBehavior;

                    interface IAddDeleteThemeTransition;

                    interface IBackEase;

                    interface IBackEaseStatics;

                    interface IBasicConnectedAnimationConfiguration;

                    interface IBasicConnectedAnimationConfigurationFactory;

                    interface IBeginStoryboard;

                    interface IBeginStoryboardStatics;

                    interface IBounceEase;

                    interface IBounceEaseStatics;

                    interface ICircleEase;

                    interface IColorAnimation;

                    interface IColorAnimationStatics;

                    interface IColorAnimationUsingKeyFrames;

                    interface IColorAnimationUsingKeyFramesStatics;

                    interface IColorKeyFrame;

                    interface IColorKeyFrameFactory;

                    interface IColorKeyFrameStatics;

                    interface ICommonNavigationTransitionInfo;

                    interface ICommonNavigationTransitionInfoStatics;

                    interface IConnectedAnimation;

                    interface IConnectedAnimationConfiguration;

                    interface IConnectedAnimationConfigurationFactory;

                    interface IConnectedAnimationService;

                    interface IConnectedAnimationServiceStatics;

                    interface IContentThemeTransition;

                    interface IContentThemeTransitionStatics;

                    interface IContinuumNavigationTransitionInfo;

                    interface IContinuumNavigationTransitionInfoStatics;

                    interface ICubicEase;

                    interface IDirectConnectedAnimationConfiguration;

                    interface IDirectConnectedAnimationConfigurationFactory;

                    interface IDiscreteColorKeyFrame;

                    interface IDiscreteDoubleKeyFrame;

                    interface IDiscreteObjectKeyFrame;

                    interface IDiscretePointKeyFrame;

                    interface IDoubleAnimation;

                    interface IDoubleAnimationStatics;

                    interface IDoubleAnimationUsingKeyFrames;

                    interface IDoubleAnimationUsingKeyFramesStatics;

                    interface IDoubleKeyFrame;

                    interface IDoubleKeyFrameFactory;

                    interface IDoubleKeyFrameStatics;

                    interface IDragItemThemeAnimation;

                    interface IDragItemThemeAnimationStatics;

                    interface IDragOverThemeAnimation;

                    interface IDragOverThemeAnimationStatics;

                    interface IDrillInNavigationTransitionInfo;

                    interface IDrillInThemeAnimation;

                    interface IDrillInThemeAnimationStatics;

                    interface IDrillOutThemeAnimation;

                    interface IDrillOutThemeAnimationStatics;

                    interface IDropTargetItemThemeAnimation;

                    interface IDropTargetItemThemeAnimationStatics;

                    interface IEasingColorKeyFrame;

                    interface IEasingColorKeyFrameStatics;

                    interface IEasingDoubleKeyFrame;

                    interface IEasingDoubleKeyFrameStatics;

                    interface IEasingFunctionBase;

                    interface IEasingFunctionBaseFactory;

                    interface IEasingFunctionBaseStatics;

                    interface IEasingPointKeyFrame;

                    interface IEasingPointKeyFrameStatics;

                    interface IEdgeUIThemeTransition;

                    interface IEdgeUIThemeTransitionStatics;

                    interface IElasticEase;

                    interface IElasticEaseStatics;

                    interface IEntranceNavigationTransitionInfo;

                    interface IEntranceNavigationTransitionInfoStatics;

                    interface IEntranceThemeTransition;

                    interface IEntranceThemeTransitionStatics;

                    interface IExponentialEase;

                    interface IExponentialEaseStatics;

                    interface IFadeInThemeAnimation;

                    interface IFadeInThemeAnimationStatics;

                    interface IFadeOutThemeAnimation;

                    interface IFadeOutThemeAnimationStatics;

                    interface IGravityConnectedAnimationConfiguration;

                    interface IGravityConnectedAnimationConfigurationFactory;

                    interface IKeySpline;

                    interface IKeyTimeHelper;

                    interface IKeyTimeHelperStatics;

                    interface ILinearColorKeyFrame;

                    interface ILinearDoubleKeyFrame;

                    interface ILinearPointKeyFrame;

                    interface INavigationThemeTransition;

                    interface INavigationThemeTransitionStatics;

                    interface INavigationTransitionInfo;

                    interface INavigationTransitionInfoFactory;

                    interface INavigationTransitionInfoOverrides;

                    interface INavigationTransitionInfoOverridesPrivate;

                    interface INavigationTransitionInfoPrivate;

                    interface IObjectAnimationUsingKeyFrames;

                    interface IObjectAnimationUsingKeyFramesStatics;

                    interface IObjectKeyFrame;

                    interface IObjectKeyFrameFactory;

                    interface IObjectKeyFrameStatics;

                    interface IPaneThemeTransition;

                    interface IPaneThemeTransitionStatics;

                    interface IPointAnimation;

                    interface IPointAnimationStatics;

                    interface IPointAnimationUsingKeyFrames;

                    interface IPointAnimationUsingKeyFramesStatics;

                    interface IPointKeyFrame;

                    interface IPointKeyFrameFactory;

                    interface IPointKeyFrameStatics;

                    interface IPointerDownThemeAnimation;

                    interface IPointerDownThemeAnimationStatics;

                    interface IPointerUpThemeAnimation;

                    interface IPointerUpThemeAnimationStatics;

                    interface IPopInThemeAnimation;

                    interface IPopInThemeAnimationStatics;

                    interface IPopOutThemeAnimation;

                    interface IPopOutThemeAnimationStatics;

                    interface IPopupThemeTransition;

                    interface IPopupThemeTransitionStatics;

                    interface IPowerEase;

                    interface IPowerEaseStatics;

                    interface IQuadraticEase;

                    interface IQuarticEase;

                    interface IQuinticEase;

                    interface IReorderThemeTransition;

                    interface IRepeatBehaviorHelper;

                    interface IRepeatBehaviorHelperStatics;

                    interface IRepositionThemeAnimation;

                    interface IRepositionThemeAnimationStatics;

                    interface IRepositionThemeTransition;

                    interface IRepositionThemeTransitionStatics;

                    interface ISineEase;

                    interface ISlideNavigationTransitionInfo;

                    interface ISlideNavigationTransitionInfoStatics;

                    interface ISplineColorKeyFrame;

                    interface ISplineColorKeyFrameStatics;

                    interface ISplineDoubleKeyFrame;

                    interface ISplineDoubleKeyFrameStatics;

                    interface ISplinePointKeyFrame;

                    interface ISplinePointKeyFrameStatics;

                    interface ISplitCloseThemeAnimation;

                    interface ISplitCloseThemeAnimationStatics;

                    interface ISplitOpenThemeAnimation;

                    interface ISplitOpenThemeAnimationStatics;

                    interface IStoryboard;

                    interface IStoryboardStatics;

                    interface ISuppressNavigationTransitionInfo;

                    interface ISwipeBackThemeAnimation;

                    interface ISwipeBackThemeAnimationStatics;

                    interface ISwipeHintThemeAnimation;

                    interface ISwipeHintThemeAnimationStatics;

                    interface IThemeAnimationBase;

                    interface IThemeAnimationBaseFactory;

                    interface IThemeAnimationBaseOverrides;

                    interface ITimeline;

                    interface ITimelineFactory;

                    interface ITimelineStatics;

                    interface ITransition;

                    interface ITransitionFactory;

                    interface ITransitionFactoryPrivate;

                    interface ITransitionPrivate;

                    runtimeclass AddDeleteThemeTransition;

                    runtimeclass BackEase;

                    runtimeclass BasicConnectedAnimationConfiguration;

                    runtimeclass BeginStoryboard;

                    runtimeclass BounceEase;

                    runtimeclass CircleEase;

                    runtimeclass ColorAnimation;

                    runtimeclass ColorAnimationUsingKeyFrames;

                    runtimeclass ColorKeyFrame;

                    runtimeclass ColorKeyFrameCollection;

                    runtimeclass CommonNavigationTransitionInfo;

                    runtimeclass ConnectedAnimation;

                    runtimeclass ConnectedAnimationConfiguration;

                    runtimeclass ConnectedAnimationService;

                    runtimeclass ContentThemeTransition;

                    runtimeclass ContinuumNavigationTransitionInfo;

                    runtimeclass CubicEase;

                    runtimeclass DirectConnectedAnimationConfiguration;

                    runtimeclass DiscreteColorKeyFrame;

                    runtimeclass DiscreteDoubleKeyFrame;

                    runtimeclass DiscreteObjectKeyFrame;

                    runtimeclass DiscretePointKeyFrame;

                    runtimeclass DoubleAnimation;

                    runtimeclass DoubleAnimationUsingKeyFrames;

                    runtimeclass DoubleKeyFrame;

                    runtimeclass DoubleKeyFrameCollection;

                    runtimeclass DragItemThemeAnimation;

                    runtimeclass DragOverThemeAnimation;

                    runtimeclass DrillInNavigationTransitionInfo;

                    runtimeclass DrillInThemeAnimation;

                    runtimeclass DrillOutThemeAnimation;

                    runtimeclass DropTargetItemThemeAnimation;

                    runtimeclass EasingColorKeyFrame;

                    runtimeclass EasingDoubleKeyFrame;

                    runtimeclass EasingFunctionBase;

                    runtimeclass EasingPointKeyFrame;

                    runtimeclass EdgeUIThemeTransition;

                    runtimeclass ElasticEase;

                    runtimeclass EntranceNavigationTransitionInfo;

                    runtimeclass EntranceThemeTransition;

                    runtimeclass ExponentialEase;

                    runtimeclass FadeInThemeAnimation;

                    runtimeclass FadeOutThemeAnimation;

                    runtimeclass GravityConnectedAnimationConfiguration;

                    runtimeclass KeySpline;

                    runtimeclass KeyTimeHelper;

                    runtimeclass LinearColorKeyFrame;

                    runtimeclass LinearDoubleKeyFrame;

                    runtimeclass LinearPointKeyFrame;

                    runtimeclass NavigationThemeTransition;

                    runtimeclass NavigationTransitionInfo;

                    runtimeclass ObjectAnimationUsingKeyFrames;

                    runtimeclass ObjectKeyFrame;

                    runtimeclass ObjectKeyFrameCollection;

                    runtimeclass PaneThemeTransition;

                    runtimeclass PointAnimation;

                    runtimeclass PointAnimationUsingKeyFrames;

                    runtimeclass PointKeyFrame;

                    runtimeclass PointKeyFrameCollection;

                    runtimeclass PointerDownThemeAnimation;

                    runtimeclass PointerUpThemeAnimation;

                    runtimeclass PopInThemeAnimation;

                    runtimeclass PopOutThemeAnimation;

                    runtimeclass PopupThemeTransition;

                    runtimeclass PowerEase;

                    runtimeclass QuadraticEase;

                    runtimeclass QuarticEase;

                    runtimeclass QuinticEase;

                    runtimeclass ReorderThemeTransition;

                    runtimeclass RepeatBehaviorHelper;

                    runtimeclass RepositionThemeAnimation;

                    runtimeclass RepositionThemeTransition;

                    runtimeclass SineEase;

                    runtimeclass SlideNavigationTransitionInfo;

                    runtimeclass SplineColorKeyFrame;

                    runtimeclass SplineDoubleKeyFrame;

                    runtimeclass SplinePointKeyFrame;

                    runtimeclass SplitCloseThemeAnimation;

                    runtimeclass SplitOpenThemeAnimation;

                    runtimeclass Storyboard;

                    runtimeclass SuppressNavigationTransitionInfo;

                    runtimeclass SwipeBackThemeAnimation;

                    runtimeclass SwipeHintThemeAnimation;

                    runtimeclass ThemeAnimationBase;

                    runtimeclass Timeline;

                    runtimeclass TimelineCollection;

                    runtimeclass Transition;

                    runtimeclass TransitionCollection;
                }
            }
        }
    }
}

// Generic instantiations
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Media
            {
                namespace Animation
                {
                    declare
                    {
                        interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Media.Animation.ColorKeyFrame*>;

                        interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrame*>;

                        interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrame*>;

                        interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Media.Animation.PointKeyFrame*>;

                        interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Media.Animation.Storyboard*>;

                        interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Media.Animation.Timeline*>;

                        interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Media.Animation.Transition*>;

                        interface Windows.Foundation.Collections.IIterator<Microsoft.UI.Xaml.Media.Animation.ColorKeyFrame*>;

                        interface Windows.Foundation.Collections.IIterator<Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrame*>;

                        interface Windows.Foundation.Collections.IIterator<Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrame*>;

                        interface Windows.Foundation.Collections.IIterator<Microsoft.UI.Xaml.Media.Animation.PointKeyFrame*>;

                        interface Windows.Foundation.Collections.IIterator<Microsoft.UI.Xaml.Media.Animation.Storyboard*>;

                        interface Windows.Foundation.Collections.IIterator<Microsoft.UI.Xaml.Media.Animation.Timeline*>;

                        interface Windows.Foundation.Collections.IIterator<Microsoft.UI.Xaml.Media.Animation.Transition*>;

                        interface Windows.Foundation.Collections.IVectorView<Microsoft.UI.Xaml.Media.Animation.ColorKeyFrame*>;

                        interface Windows.Foundation.Collections.IVectorView<Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrame*>;

                        interface Windows.Foundation.Collections.IVectorView<Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrame*>;

                        interface Windows.Foundation.Collections.IVectorView<Microsoft.UI.Xaml.Media.Animation.PointKeyFrame*>;

                        interface Windows.Foundation.Collections.IVectorView<Microsoft.UI.Xaml.Media.Animation.Storyboard*>;

                        interface Windows.Foundation.Collections.IVectorView<Microsoft.UI.Xaml.Media.Animation.Timeline*>;

                        interface Windows.Foundation.Collections.IVectorView<Microsoft.UI.Xaml.Media.Animation.Transition*>;

                        interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Media.Animation.ColorKeyFrame*>;

                        interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrame*>;

                        interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrame*>;

                        interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Media.Animation.PointKeyFrame*>;

                        interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Media.Animation.Storyboard*>;

                        interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Media.Animation.Timeline*>;

                        interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Media.Animation.Transition*>;

                        interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation*, IInspectable*>;
                    }
                }
            }
        }
    }
}

// Type definition
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Media
            {
                namespace Animation
                {
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    enum ClockState
                    {
                        Active  = 0,
                        Filling = 1,
                        Stopped = 2
                    };

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    enum ConnectedAnimationComponent
                    {
                        OffsetX   = 0,
                        OffsetY   = 1,
                        CrossFade = 2,
                        Scale     = 3
                    };

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    enum EasingMode
                    {
                        EaseOut   = 0,
                        EaseIn    = 1,
                        EaseInOut = 2
                    };

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    enum FillBehavior
                    {
                        HoldEnd = 0,
                        Stop    = 1
                    };

                    [contract(Microsoft.UI.Xaml.PrivateApiContract, 1.0)]
                    enum NavigationTrigger
                    {
                        NavigatingAway     = 0,
                        NavigatingTo       = 1,
                        BackNavigatingAway = 2,
                        BackNavigatingTo   = 3
                    };

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    enum RepeatBehaviorType
                    {
                        Count    = 0,
                        Duration = 1,
                        Forever  = 2
                    };

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    enum SlideNavigationTransitionEffect
                    {
                        FromBottom = 0,
                        FromLeft   = 1,
                        FromRight  = 2
                    };

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    struct KeyTime
                    {
                        Windows.Foundation.TimeSpan TimeSpan;
                    };

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    struct RepeatBehavior
                    {
                        DOUBLE Count;
                        Windows.Foundation.TimeSpan Duration;
                        Microsoft.UI.Xaml.Media.Animation.RepeatBehaviorType Type;
                    };

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.AddDeleteThemeTransition)]
                    [uuid(3728595E-0EA2-524B-9348-86CFB860A0FF)]
                    interface IAddDeleteThemeTransition : IInspectable
                    {
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.BackEase)]
                    [uuid(1775BD43-1939-57CB-8C31-CD7590EC9543)]
                    interface IBackEase : IInspectable
                    {
                        [propget] HRESULT Amplitude([out] [retval] DOUBLE* value);
                        [propput] HRESULT Amplitude([in] DOUBLE value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.BackEase)]
                    [uuid(1EAD2EF9-7901-542D-AE08-7B5937B32EF0)]
                    interface IBackEaseStatics : IInspectable
                    {
                        [propget] HRESULT AmplitudeProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.BasicConnectedAnimationConfiguration)]
                    [uuid(7FF18AFE-91E8-52FA-A1C1-7B2C1A140118)]
                    interface IBasicConnectedAnimationConfiguration : IInspectable
                    {
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.BasicConnectedAnimationConfiguration)]
                    [uuid(2D156A02-0FB5-5AD1-AF9B-BC9C2720FECB)]
                    interface IBasicConnectedAnimationConfigurationFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Media.Animation.BasicConnectedAnimationConfiguration** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.BeginStoryboard)]
                    [uuid(BB364720-EE5A-5B32-91E2-62589729FD3A)]
                    interface IBeginStoryboard : IInspectable
                    {
                        [propget] HRESULT Storyboard([out] [retval] Microsoft.UI.Xaml.Media.Animation.Storyboard** value);
                        [propput] HRESULT Storyboard([in] Microsoft.UI.Xaml.Media.Animation.Storyboard* value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.BeginStoryboard)]
                    [uuid(4D5FDBEB-6B0E-5A8F-A8F0-01F438DF8FB2)]
                    interface IBeginStoryboardStatics : IInspectable
                    {
                        [propget] HRESULT StoryboardProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.BounceEase)]
                    [uuid(C138BFFF-87C8-5C60-B280-682A499C58C3)]
                    interface IBounceEase : IInspectable
                    {
                        [propget] HRESULT Bounces([out] [retval] INT32* value);
                        [propput] HRESULT Bounces([in] INT32 value);
                        [propget] HRESULT Bounciness([out] [retval] DOUBLE* value);
                        [propput] HRESULT Bounciness([in] DOUBLE value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.BounceEase)]
                    [uuid(D7716B38-C705-5093-96D6-735C13105A30)]
                    interface IBounceEaseStatics : IInspectable
                    {
                        [propget] HRESULT BouncesProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT BouncinessProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.CircleEase)]
                    [uuid(88209080-2929-5924-9B52-F95196568713)]
                    interface ICircleEase : IInspectable
                    {
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.ColorAnimation)]
                    [uuid(6DF862D2-65F2-53A8-8B1B-1B6C1763C175)]
                    interface IColorAnimation : IInspectable
                    {
                        [propget] HRESULT From([out] [retval] Windows.Foundation.IReference<Windows.UI.Color>** value);
                        [propput] HRESULT From([in] Windows.Foundation.IReference<Windows.UI.Color>* value);
                        [propget] HRESULT To([out] [retval] Windows.Foundation.IReference<Windows.UI.Color>** value);
                        [propput] HRESULT To([in] Windows.Foundation.IReference<Windows.UI.Color>* value);
                        [propget] HRESULT By([out] [retval] Windows.Foundation.IReference<Windows.UI.Color>** value);
                        [propput] HRESULT By([in] Windows.Foundation.IReference<Windows.UI.Color>* value);
                        [propget] HRESULT EasingFunction([out] [retval] Microsoft.UI.Xaml.Media.Animation.EasingFunctionBase** value);
                        [propput] HRESULT EasingFunction([in] Microsoft.UI.Xaml.Media.Animation.EasingFunctionBase* value);
                        [propget] HRESULT EnableDependentAnimation([out] [retval] boolean* value);
                        [propput] HRESULT EnableDependentAnimation([in] boolean value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.ColorAnimation)]
                    [uuid(99AEBE0F-928E-52CB-842F-F43FE660FF06)]
                    interface IColorAnimationStatics : IInspectable
                    {
                        [propget] HRESULT FromProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ToProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ByProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT EasingFunctionProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT EnableDependentAnimationProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.ColorAnimationUsingKeyFrames)]
                    [uuid(96F28C97-67EB-5393-8E37-A81D8FDA18B3)]
                    interface IColorAnimationUsingKeyFrames : IInspectable
                    {
                        [propget] HRESULT KeyFrames([out] [retval] Microsoft.UI.Xaml.Media.Animation.ColorKeyFrameCollection** value);
                        [propget] HRESULT EnableDependentAnimation([out] [retval] boolean* value);
                        [propput] HRESULT EnableDependentAnimation([in] boolean value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.ColorAnimationUsingKeyFrames)]
                    [uuid(5B0F4840-0EF7-5AD7-A8F2-D49424ED906F)]
                    interface IColorAnimationUsingKeyFramesStatics : IInspectable
                    {
                        [propget] HRESULT EnableDependentAnimationProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.ColorKeyFrame)]
                    [uuid(02848C7E-C772-5F66-842B-FD494D0DA669)]
                    interface IColorKeyFrame : IInspectable
                    {
                        [propget] HRESULT Value([out] [retval] Windows.UI.Color* value);
                        [propput] HRESULT Value([in] Windows.UI.Color value);
                        [propget] HRESULT KeyTime([out] [retval] Microsoft.UI.Xaml.Media.Animation.KeyTime* value);
                        [propput] HRESULT KeyTime([in] Microsoft.UI.Xaml.Media.Animation.KeyTime value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.ColorKeyFrame)]
                    [uuid(A82CC182-9D80-508C-B962-D74225587200)]
                    interface IColorKeyFrameFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Media.Animation.ColorKeyFrame** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.ColorKeyFrame)]
                    [uuid(B62FDD68-15C7-5C6C-A4FA-0CEE10E04556)]
                    interface IColorKeyFrameStatics : IInspectable
                    {
                        [propget] HRESULT ValueProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT KeyTimeProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.CommonNavigationTransitionInfo)]
                    [uuid(B21CC95F-9E3D-540A-B35A-17B99DC41B1E)]
                    interface ICommonNavigationTransitionInfo : IInspectable
                    {
                        [propget] HRESULT IsStaggeringEnabled([out] [retval] boolean* value);
                        [propput] HRESULT IsStaggeringEnabled([in] boolean value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.CommonNavigationTransitionInfo)]
                    [uuid(20020BE1-C1BA-59F5-997A-C04F5E3833B0)]
                    interface ICommonNavigationTransitionInfoStatics : IInspectable
                    {
                        [propget] HRESULT IsStaggeringEnabledProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT IsStaggerElementProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        HRESULT GetIsStaggerElement([in] Microsoft.UI.Xaml.UIElement* element, [out] [retval] boolean* result);
                        HRESULT SetIsStaggerElement([in] Microsoft.UI.Xaml.UIElement* element, [in] boolean value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation)]
                    [uuid(A9C1C6AD-7670-589C-A608-9B5C01CEC71F)]
                    interface IConnectedAnimation : IInspectable
                    {
                        [propget] HRESULT IsScaleAnimationEnabled([out] [retval] boolean* value);
                        [propput] HRESULT IsScaleAnimationEnabled([in] boolean value);
                        [propget] HRESULT Configuration([out] [retval] Microsoft.UI.Xaml.Media.Animation.ConnectedAnimationConfiguration** value);
                        [propput] HRESULT Configuration([in] Microsoft.UI.Xaml.Media.Animation.ConnectedAnimationConfiguration* value);
                        [eventadd] HRESULT Completed([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                        [eventremove] HRESULT Completed([in] EventRegistrationToken token);
                        [overload("TryStart")] HRESULT TryStart([in] Microsoft.UI.Xaml.UIElement* destination, [out] [retval] boolean* result);
                        [overload("TryStart")] HRESULT TryStartWithCoordinatedElements([in] Microsoft.UI.Xaml.UIElement* destination, [in] Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.UIElement*>* coordinatedElements, [out] [retval] boolean* result);
                        HRESULT Cancel();
                        HRESULT SetAnimationComponent([in] Microsoft.UI.Xaml.Media.Animation.ConnectedAnimationComponent component, [in] Microsoft.UI.Composition.ICompositionAnimationBase* animation);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.ConnectedAnimationConfiguration)]
                    [uuid(E848379D-7E25-5976-BFB3-086BAC4E8849)]
                    interface IConnectedAnimationConfiguration : IInspectable
                    {
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.ConnectedAnimationConfiguration)]
                    [uuid(71008845-4A12-5A1A-969C-4152B5174922)]
                    interface IConnectedAnimationConfigurationFactory : IInspectable
                    {
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.ConnectedAnimationService)]
                    [uuid(85F72163-C3C8-586A-91FE-3E0315A3A4FC)]
                    interface IConnectedAnimationService : IInspectable
                    {
                        [propget] HRESULT DefaultDuration([out] [retval] Windows.Foundation.TimeSpan* value);
                        [propput] HRESULT DefaultDuration([in] Windows.Foundation.TimeSpan value);
                        [propget] HRESULT DefaultEasingFunction([out] [retval] Microsoft.UI.Composition.CompositionEasingFunction** value);
                        [propput] HRESULT DefaultEasingFunction([in] Microsoft.UI.Composition.CompositionEasingFunction* value);
                        HRESULT PrepareToAnimate([in] HSTRING key, [in] Microsoft.UI.Xaml.UIElement* source, [out] [retval] Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation** result);
                        HRESULT GetAnimation([in] HSTRING key, [out] [retval] Microsoft.UI.Xaml.Media.Animation.ConnectedAnimation** result);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.ConnectedAnimationService)]
                    [uuid(F30AD68D-3426-5564-92C6-288B819E652A)]
                    interface IConnectedAnimationServiceStatics : IInspectable
                    {
                        HRESULT GetForCurrentView([out] [retval] Microsoft.UI.Xaml.Media.Animation.ConnectedAnimationService** result);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.ContentThemeTransition)]
                    [uuid(DFF47071-CC51-556C-A3FE-8BBB4CBA6195)]
                    interface IContentThemeTransition : IInspectable
                    {
                        [propget] HRESULT HorizontalOffset([out] [retval] DOUBLE* value);
                        [propput] HRESULT HorizontalOffset([in] DOUBLE value);
                        [propget] HRESULT VerticalOffset([out] [retval] DOUBLE* value);
                        [propput] HRESULT VerticalOffset([in] DOUBLE value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.ContentThemeTransition)]
                    [uuid(95CDA8B1-6667-56E3-BE40-866EEF53663C)]
                    interface IContentThemeTransitionStatics : IInspectable
                    {
                        [propget] HRESULT HorizontalOffsetProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT VerticalOffsetProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.ContinuumNavigationTransitionInfo)]
                    [uuid(C55DA70F-FF2A-5FC3-81C5-9670F4D78752)]
                    interface IContinuumNavigationTransitionInfo : IInspectable
                    {
                        [propget] HRESULT ExitElement([out] [retval] Microsoft.UI.Xaml.UIElement** value);
                        [propput] HRESULT ExitElement([in] Microsoft.UI.Xaml.UIElement* value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.ContinuumNavigationTransitionInfo)]
                    [uuid(CA9006FD-F513-5F34-AD7F-49F9D7A99432)]
                    interface IContinuumNavigationTransitionInfoStatics : IInspectable
                    {
                        [propget] HRESULT ExitElementProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT IsEntranceElementProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        HRESULT GetIsEntranceElement([in] Microsoft.UI.Xaml.UIElement* element, [out] [retval] boolean* result);
                        HRESULT SetIsEntranceElement([in] Microsoft.UI.Xaml.UIElement* element, [in] boolean value);
                        [propget] HRESULT IsExitElementProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        HRESULT GetIsExitElement([in] Microsoft.UI.Xaml.UIElement* element, [out] [retval] boolean* result);
                        HRESULT SetIsExitElement([in] Microsoft.UI.Xaml.UIElement* element, [in] boolean value);
                        [propget] HRESULT ExitElementContainerProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        HRESULT GetExitElementContainer([in] Microsoft.UI.Xaml.Controls.ListViewBase* element, [out] [retval] boolean* result);
                        HRESULT SetExitElementContainer([in] Microsoft.UI.Xaml.Controls.ListViewBase* element, [in] boolean value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.CubicEase)]
                    [uuid(01A218B4-EB7E-54F9-BFB6-C6EE128013D2)]
                    interface ICubicEase : IInspectable
                    {
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.DirectConnectedAnimationConfiguration)]
                    [uuid(44F192EB-CC11-545E-8FA2-1F0EC9C4438A)]
                    interface IDirectConnectedAnimationConfiguration : IInspectable
                    {
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.DirectConnectedAnimationConfiguration)]
                    [uuid(604ABA9B-4EB8-5310-91DC-30962E25AB00)]
                    interface IDirectConnectedAnimationConfigurationFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Media.Animation.DirectConnectedAnimationConfiguration** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.DiscreteColorKeyFrame)]
                    [uuid(9B3D88A7-31D3-5912-8646-641A8A565CA1)]
                    interface IDiscreteColorKeyFrame : IInspectable
                    {
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.DiscreteDoubleKeyFrame)]
                    [uuid(EC16A555-C083-5A18-805B-A14B90BC80E2)]
                    interface IDiscreteDoubleKeyFrame : IInspectable
                    {
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.DiscreteObjectKeyFrame)]
                    [uuid(542FA813-6892-559D-9F69-1F2AC666AF13)]
                    interface IDiscreteObjectKeyFrame : IInspectable
                    {
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.DiscretePointKeyFrame)]
                    [uuid(2255A291-007E-57CE-AA53-97D1E4A0D7E2)]
                    interface IDiscretePointKeyFrame : IInspectable
                    {
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.DoubleAnimation)]
                    [uuid(651EC97E-E483-5985-AA0B-49CFB07432DD)]
                    interface IDoubleAnimation : IInspectable
                    {
                        [propget] HRESULT From([out] [retval] Windows.Foundation.IReference<DOUBLE>** value);
                        [propput] HRESULT From([in] Windows.Foundation.IReference<DOUBLE>* value);
                        [propget] HRESULT To([out] [retval] Windows.Foundation.IReference<DOUBLE>** value);
                        [propput] HRESULT To([in] Windows.Foundation.IReference<DOUBLE>* value);
                        [propget] HRESULT By([out] [retval] Windows.Foundation.IReference<DOUBLE>** value);
                        [propput] HRESULT By([in] Windows.Foundation.IReference<DOUBLE>* value);
                        [propget] HRESULT EasingFunction([out] [retval] Microsoft.UI.Xaml.Media.Animation.EasingFunctionBase** value);
                        [propput] HRESULT EasingFunction([in] Microsoft.UI.Xaml.Media.Animation.EasingFunctionBase* value);
                        [propget] HRESULT EnableDependentAnimation([out] [retval] boolean* value);
                        [propput] HRESULT EnableDependentAnimation([in] boolean value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.DoubleAnimation)]
                    [uuid(4E098387-ADC6-5549-AD21-633E4FA244C2)]
                    interface IDoubleAnimationStatics : IInspectable
                    {
                        [propget] HRESULT FromProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ToProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ByProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT EasingFunctionProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT EnableDependentAnimationProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.DoubleAnimationUsingKeyFrames)]
                    [uuid(815437D5-63CF-54A5-AEA5-24B84708D12D)]
                    interface IDoubleAnimationUsingKeyFrames : IInspectable
                    {
                        [propget] HRESULT KeyFrames([out] [retval] Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrameCollection** value);
                        [propget] HRESULT EnableDependentAnimation([out] [retval] boolean* value);
                        [propput] HRESULT EnableDependentAnimation([in] boolean value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.DoubleAnimationUsingKeyFrames)]
                    [uuid(4C1C9BF1-3A03-5689-B18F-6C44251E13D9)]
                    interface IDoubleAnimationUsingKeyFramesStatics : IInspectable
                    {
                        [propget] HRESULT EnableDependentAnimationProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrame)]
                    [uuid(94C82AE6-CA62-5F52-934C-3E427E75D69A)]
                    interface IDoubleKeyFrame : IInspectable
                    {
                        [propget] HRESULT Value([out] [retval] DOUBLE* value);
                        [propput] HRESULT Value([in] DOUBLE value);
                        [propget] HRESULT KeyTime([out] [retval] Microsoft.UI.Xaml.Media.Animation.KeyTime* value);
                        [propput] HRESULT KeyTime([in] Microsoft.UI.Xaml.Media.Animation.KeyTime value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrame)]
                    [uuid(2D492CB3-F488-5D30-B00C-B6F2547D0EFE)]
                    interface IDoubleKeyFrameFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrame** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrame)]
                    [uuid(0E56914C-B430-538F-BB66-0B8E83AB3DB6)]
                    interface IDoubleKeyFrameStatics : IInspectable
                    {
                        [propget] HRESULT ValueProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT KeyTimeProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.DragItemThemeAnimation)]
                    [uuid(648E690E-A2C0-58CA-B15D-DB6FCCC663F2)]
                    interface IDragItemThemeAnimation : IInspectable
                    {
                        [propget] HRESULT TargetName([out] [retval] HSTRING* value);
                        [propput] HRESULT TargetName([in] HSTRING value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.DragItemThemeAnimation)]
                    [uuid(CDBDB41A-CE84-50A1-8B96-96599CD9619D)]
                    interface IDragItemThemeAnimationStatics : IInspectable
                    {
                        [propget] HRESULT TargetNameProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.DragOverThemeAnimation)]
                    [uuid(633CD3C0-71AF-52FD-993E-504E3E6F56D4)]
                    interface IDragOverThemeAnimation : IInspectable
                    {
                        [propget] HRESULT TargetName([out] [retval] HSTRING* value);
                        [propput] HRESULT TargetName([in] HSTRING value);
                        [propget] HRESULT ToOffset([out] [retval] DOUBLE* value);
                        [propput] HRESULT ToOffset([in] DOUBLE value);
                        [propget] HRESULT Direction([out] [retval] Microsoft.UI.Xaml.Controls.Primitives.AnimationDirection* value);
                        [propput] HRESULT Direction([in] Microsoft.UI.Xaml.Controls.Primitives.AnimationDirection value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.DragOverThemeAnimation)]
                    [uuid(8301AFD2-68B2-5C6C-AADF-9A98D620E8D2)]
                    interface IDragOverThemeAnimationStatics : IInspectable
                    {
                        [propget] HRESULT TargetNameProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ToOffsetProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT DirectionProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.DrillInNavigationTransitionInfo)]
                    [uuid(5D5863D6-4BBF-5B30-94FA-034531CFA2AA)]
                    interface IDrillInNavigationTransitionInfo : IInspectable
                    {
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.DrillInThemeAnimation)]
                    [uuid(097577E0-3027-5F24-AF8C-976D9FAED830)]
                    interface IDrillInThemeAnimation : IInspectable
                    {
                        [propget] HRESULT EntranceTargetName([out] [retval] HSTRING* value);
                        [propput] HRESULT EntranceTargetName([in] HSTRING value);
                        [propget] HRESULT EntranceTarget([out] [retval] Microsoft.UI.Xaml.DependencyObject** value);
                        [propput] HRESULT EntranceTarget([in] Microsoft.UI.Xaml.DependencyObject* value);
                        [propget] HRESULT ExitTargetName([out] [retval] HSTRING* value);
                        [propput] HRESULT ExitTargetName([in] HSTRING value);
                        [propget] HRESULT ExitTarget([out] [retval] Microsoft.UI.Xaml.DependencyObject** value);
                        [propput] HRESULT ExitTarget([in] Microsoft.UI.Xaml.DependencyObject* value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.DrillInThemeAnimation)]
                    [uuid(BA24258E-3A8E-5804-915A-7670893DBEA4)]
                    interface IDrillInThemeAnimationStatics : IInspectable
                    {
                        [propget] HRESULT EntranceTargetNameProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT EntranceTargetProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ExitTargetNameProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ExitTargetProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.DrillOutThemeAnimation)]
                    [uuid(9A93B9CC-925F-525A-9EAC-55D39DB3D314)]
                    interface IDrillOutThemeAnimation : IInspectable
                    {
                        [propget] HRESULT EntranceTargetName([out] [retval] HSTRING* value);
                        [propput] HRESULT EntranceTargetName([in] HSTRING value);
                        [propget] HRESULT EntranceTarget([out] [retval] Microsoft.UI.Xaml.DependencyObject** value);
                        [propput] HRESULT EntranceTarget([in] Microsoft.UI.Xaml.DependencyObject* value);
                        [propget] HRESULT ExitTargetName([out] [retval] HSTRING* value);
                        [propput] HRESULT ExitTargetName([in] HSTRING value);
                        [propget] HRESULT ExitTarget([out] [retval] Microsoft.UI.Xaml.DependencyObject** value);
                        [propput] HRESULT ExitTarget([in] Microsoft.UI.Xaml.DependencyObject* value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.DrillOutThemeAnimation)]
                    [uuid(6EB9693B-C0D0-5BAE-9CD2-10D80B8D3867)]
                    interface IDrillOutThemeAnimationStatics : IInspectable
                    {
                        [propget] HRESULT EntranceTargetNameProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT EntranceTargetProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ExitTargetNameProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ExitTargetProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.DropTargetItemThemeAnimation)]
                    [uuid(B97F19C0-F1E2-5705-A252-2DB05D2E5A54)]
                    interface IDropTargetItemThemeAnimation : IInspectable
                    {
                        [propget] HRESULT TargetName([out] [retval] HSTRING* value);
                        [propput] HRESULT TargetName([in] HSTRING value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.DropTargetItemThemeAnimation)]
                    [uuid(A0CE9E16-AE12-55FC-A9E5-29DC94A713BD)]
                    interface IDropTargetItemThemeAnimationStatics : IInspectable
                    {
                        [propget] HRESULT TargetNameProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.EasingColorKeyFrame)]
                    [uuid(A137A710-DA3C-5426-A1A2-3A5A672A4264)]
                    interface IEasingColorKeyFrame : IInspectable
                    {
                        [propget] HRESULT EasingFunction([out] [retval] Microsoft.UI.Xaml.Media.Animation.EasingFunctionBase** value);
                        [propput] HRESULT EasingFunction([in] Microsoft.UI.Xaml.Media.Animation.EasingFunctionBase* value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.EasingColorKeyFrame)]
                    [uuid(C57818C0-3361-587D-B381-620B69251BCF)]
                    interface IEasingColorKeyFrameStatics : IInspectable
                    {
                        [propget] HRESULT EasingFunctionProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.EasingDoubleKeyFrame)]
                    [uuid(935D9B7E-DA61-5BB2-A574-7D2E53B60561)]
                    interface IEasingDoubleKeyFrame : IInspectable
                    {
                        [propget] HRESULT EasingFunction([out] [retval] Microsoft.UI.Xaml.Media.Animation.EasingFunctionBase** value);
                        [propput] HRESULT EasingFunction([in] Microsoft.UI.Xaml.Media.Animation.EasingFunctionBase* value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.EasingDoubleKeyFrame)]
                    [uuid(8CC08735-4221-5127-AB2F-1E7E3DF95FB9)]
                    interface IEasingDoubleKeyFrameStatics : IInspectable
                    {
                        [propget] HRESULT EasingFunctionProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.EasingFunctionBase)]
                    [uuid(4FAB519A-A93D-5D28-AF18-84532BD32EFE)]
                    interface IEasingFunctionBase : IInspectable
                    {
                        [propget] HRESULT EasingMode([out] [retval] Microsoft.UI.Xaml.Media.Animation.EasingMode* value);
                        [propput] HRESULT EasingMode([in] Microsoft.UI.Xaml.Media.Animation.EasingMode value);
                        HRESULT Ease([in] DOUBLE normalizedTime, [out] [retval] DOUBLE* result);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.EasingFunctionBase)]
                    [uuid(B1B92F4C-5EC7-5CDA-B1D4-FD159595CA47)]
                    interface IEasingFunctionBaseFactory : IInspectable
                    {
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.EasingFunctionBase)]
                    [uuid(09032445-967C-52B8-B712-15F066B32821)]
                    interface IEasingFunctionBaseStatics : IInspectable
                    {
                        [propget] HRESULT EasingModeProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.EasingPointKeyFrame)]
                    [uuid(9406EE8E-3641-54FE-A424-83420EA45CD3)]
                    interface IEasingPointKeyFrame : IInspectable
                    {
                        [propget] HRESULT EasingFunction([out] [retval] Microsoft.UI.Xaml.Media.Animation.EasingFunctionBase** value);
                        [propput] HRESULT EasingFunction([in] Microsoft.UI.Xaml.Media.Animation.EasingFunctionBase* value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.EasingPointKeyFrame)]
                    [uuid(AC727659-92A3-52EA-8949-B609E48C233D)]
                    interface IEasingPointKeyFrameStatics : IInspectable
                    {
                        [propget] HRESULT EasingFunctionProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.EdgeUIThemeTransition)]
                    [uuid(57089964-E358-5FE2-84E7-15E82BBA9C06)]
                    interface IEdgeUIThemeTransition : IInspectable
                    {
                        [propget] HRESULT Edge([out] [retval] Microsoft.UI.Xaml.Controls.Primitives.EdgeTransitionLocation* value);
                        [propput] HRESULT Edge([in] Microsoft.UI.Xaml.Controls.Primitives.EdgeTransitionLocation value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.EdgeUIThemeTransition)]
                    [uuid(316AF8D4-D2A0-5D27-9AF6-747797965D46)]
                    interface IEdgeUIThemeTransitionStatics : IInspectable
                    {
                        [propget] HRESULT EdgeProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.ElasticEase)]
                    [uuid(2B18D50B-4D34-509B-915C-61B1AA6F83D8)]
                    interface IElasticEase : IInspectable
                    {
                        [propget] HRESULT Oscillations([out] [retval] INT32* value);
                        [propput] HRESULT Oscillations([in] INT32 value);
                        [propget] HRESULT Springiness([out] [retval] DOUBLE* value);
                        [propput] HRESULT Springiness([in] DOUBLE value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.ElasticEase)]
                    [uuid(95FD9290-D279-5857-9F50-3F299A2D02F4)]
                    interface IElasticEaseStatics : IInspectable
                    {
                        [propget] HRESULT OscillationsProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT SpringinessProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.EntranceNavigationTransitionInfo)]
                    [uuid(DEC74921-0ED7-54E1-8C1D-30B8CCCC4B8D)]
                    interface IEntranceNavigationTransitionInfo : IInspectable
                    {
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.EntranceNavigationTransitionInfo)]
                    [uuid(F1096DE1-1F79-5D38-A4D6-16F3BDAAB7F0)]
                    interface IEntranceNavigationTransitionInfoStatics : IInspectable
                    {
                        [propget] HRESULT IsTargetElementProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        HRESULT GetIsTargetElement([in] Microsoft.UI.Xaml.UIElement* element, [out] [retval] boolean* result);
                        HRESULT SetIsTargetElement([in] Microsoft.UI.Xaml.UIElement* element, [in] boolean value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.EntranceThemeTransition)]
                    [uuid(8EB681FA-1629-5E29-AC1E-70F3639329F8)]
                    interface IEntranceThemeTransition : IInspectable
                    {
                        [propget] HRESULT FromHorizontalOffset([out] [retval] DOUBLE* value);
                        [propput] HRESULT FromHorizontalOffset([in] DOUBLE value);
                        [propget] HRESULT FromVerticalOffset([out] [retval] DOUBLE* value);
                        [propput] HRESULT FromVerticalOffset([in] DOUBLE value);
                        [propget] HRESULT IsStaggeringEnabled([out] [retval] boolean* value);
                        [propput] HRESULT IsStaggeringEnabled([in] boolean value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.EntranceThemeTransition)]
                    [uuid(C99E5435-FACC-50AF-B96C-63B14FE7156E)]
                    interface IEntranceThemeTransitionStatics : IInspectable
                    {
                        [propget] HRESULT FromHorizontalOffsetProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT FromVerticalOffsetProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT IsStaggeringEnabledProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.ExponentialEase)]
                    [uuid(4D289262-E832-5FBC-A98B-87A6ECB3B6CC)]
                    interface IExponentialEase : IInspectable
                    {
                        [propget] HRESULT Exponent([out] [retval] DOUBLE* value);
                        [propput] HRESULT Exponent([in] DOUBLE value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.ExponentialEase)]
                    [uuid(8394AB8F-DDF1-55D0-ACF1-07FEDD929BB5)]
                    interface IExponentialEaseStatics : IInspectable
                    {
                        [propget] HRESULT ExponentProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.FadeInThemeAnimation)]
                    [uuid(0DCA074A-31CC-5E70-8B6B-8DBD7FFF01F6)]
                    interface IFadeInThemeAnimation : IInspectable
                    {
                        [propget] HRESULT TargetName([out] [retval] HSTRING* value);
                        [propput] HRESULT TargetName([in] HSTRING value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.FadeInThemeAnimation)]
                    [uuid(5D74A6A6-92C6-5E49-865F-676087247179)]
                    interface IFadeInThemeAnimationStatics : IInspectable
                    {
                        [propget] HRESULT TargetNameProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.FadeOutThemeAnimation)]
                    [uuid(114024D6-5D67-5C9C-83C5-54A8BD7B671A)]
                    interface IFadeOutThemeAnimation : IInspectable
                    {
                        [propget] HRESULT TargetName([out] [retval] HSTRING* value);
                        [propput] HRESULT TargetName([in] HSTRING value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.FadeOutThemeAnimation)]
                    [uuid(0277BEA1-A0A5-5E26-9B56-6A4208862738)]
                    interface IFadeOutThemeAnimationStatics : IInspectable
                    {
                        [propget] HRESULT TargetNameProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.GravityConnectedAnimationConfiguration)]
                    [uuid(04C8B276-CFF3-5A55-9229-33DC66C99E20)]
                    interface IGravityConnectedAnimationConfiguration : IInspectable
                    {
                        [propget] HRESULT IsShadowEnabled([out] [retval] boolean* value);
                        [propput] HRESULT IsShadowEnabled([in] boolean value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.GravityConnectedAnimationConfiguration)]
                    [uuid(BC7A71B5-7CDA-5BB7-967E-D6A031285A9C)]
                    interface IGravityConnectedAnimationConfigurationFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Media.Animation.GravityConnectedAnimationConfiguration** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.KeySpline)]
                    [uuid(130D8B2B-0B52-5253-881B-36AB48592E6B)]
                    interface IKeySpline : IInspectable
                    {
                        [propget] HRESULT ControlPoint1([out] [retval] Windows.Foundation.Point* value);
                        [propput] HRESULT ControlPoint1([in] Windows.Foundation.Point value);
                        [propget] HRESULT ControlPoint2([out] [retval] Windows.Foundation.Point* value);
                        [propput] HRESULT ControlPoint2([in] Windows.Foundation.Point value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.KeyTimeHelper)]
                    [uuid(E354DA44-1F24-59C6-BC5B-D6B1BA267E9C)]
                    interface IKeyTimeHelper : IInspectable
                    {
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.KeyTimeHelper)]
                    [uuid(AE5D22C9-0FDB-5823-8846-8A4D0B9EEBFA)]
                    interface IKeyTimeHelperStatics : IInspectable
                    {
                        HRESULT FromTimeSpan([in] Windows.Foundation.TimeSpan timeSpan, [out] [retval] Microsoft.UI.Xaml.Media.Animation.KeyTime* result);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.LinearColorKeyFrame)]
                    [uuid(0BCE4CD6-3A80-5F2F-932E-619A8546D0BD)]
                    interface ILinearColorKeyFrame : IInspectable
                    {
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.LinearDoubleKeyFrame)]
                    [uuid(38A635B9-F613-55E0-AAEC-9D4E097EFF91)]
                    interface ILinearDoubleKeyFrame : IInspectable
                    {
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.LinearPointKeyFrame)]
                    [uuid(4EC22493-BACB-5105-AC16-8EA5418AB76E)]
                    interface ILinearPointKeyFrame : IInspectable
                    {
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.NavigationThemeTransition)]
                    [uuid(D7CFBD3B-0D27-5EA1-BEB7-F6B847520DC6)]
                    interface INavigationThemeTransition : IInspectable
                    {
                        [propget] HRESULT DefaultNavigationTransitionInfo([out] [retval] Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo** value);
                        [propput] HRESULT DefaultNavigationTransitionInfo([in] Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo* value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.NavigationThemeTransition)]
                    [uuid(78323EFF-D543-551D-B2C7-94E93A16065B)]
                    interface INavigationThemeTransitionStatics : IInspectable
                    {
                        [propget] HRESULT DefaultNavigationTransitionInfoProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo)]
                    [uuid(25BB17FB-6E15-514E-B278-197537A4D990)]
                    interface INavigationTransitionInfo : IInspectable
                    {
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo)]
                    [uuid(C514B6FF-F6ED-572E-8392-3EA17BC7D4C4)]
                    interface INavigationTransitionInfoFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo)]
                    [uuid(3D6AF190-5A56-513D-AFF9-631925D0FA43)]
                    interface INavigationTransitionInfoOverrides : IInspectable
                    {
                        HRESULT GetNavigationStateCore([out] [retval] HSTRING* result);
                        HRESULT SetNavigationStateCore([in] HSTRING navigationState);
                    }

                    [contract(Microsoft.UI.Xaml.PrivateApiContract, 1.0)]
                    [uuid(AA47C9A0-3374-5DA7-8BEC-6D732E7BFA7D)]
                    interface INavigationTransitionInfoOverridesPrivate : IInspectable
                    {
                        HRESULT CreateStoryboardsCore([in] Microsoft.UI.Xaml.UIElement* element, [in] Microsoft.UI.Xaml.Media.Animation.NavigationTrigger trigger, [in] Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Media.Animation.Storyboard*>* storyboards);
                    }

                    [contract(Microsoft.UI.Xaml.PrivateApiContract, 1.0)]
                    [uuid(CD9B65A0-1C10-5E4E-996D-CDDFA5F01B46)]
                    interface INavigationTransitionInfoPrivate : IInspectable
                    {
                        HRESULT CreateStoryboards([in] Microsoft.UI.Xaml.UIElement* element, [in] Microsoft.UI.Xaml.Media.Animation.NavigationTrigger trigger, [in] Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Media.Animation.Storyboard*>* storyboards);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.ObjectAnimationUsingKeyFrames)]
                    [uuid(AA08DC4C-0B03-5C0A-B084-D95D272B2F0D)]
                    interface IObjectAnimationUsingKeyFrames : IInspectable
                    {
                        [propget] HRESULT KeyFrames([out] [retval] Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrameCollection** value);
                        [propget] HRESULT EnableDependentAnimation([out] [retval] boolean* value);
                        [propput] HRESULT EnableDependentAnimation([in] boolean value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.ObjectAnimationUsingKeyFrames)]
                    [uuid(411A09B0-9AB4-54B9-99B9-54F955A6754E)]
                    interface IObjectAnimationUsingKeyFramesStatics : IInspectable
                    {
                        [propget] HRESULT EnableDependentAnimationProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrame)]
                    [uuid(C5A9F65B-FC69-5A88-A797-34F46D761381)]
                    interface IObjectKeyFrame : IInspectable
                    {
                        [propget] HRESULT Value([out] [retval] IInspectable** value);
                        [propput] HRESULT Value([in] IInspectable* value);
                        [propget] HRESULT KeyTime([out] [retval] Microsoft.UI.Xaml.Media.Animation.KeyTime* value);
                        [propput] HRESULT KeyTime([in] Microsoft.UI.Xaml.Media.Animation.KeyTime value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrame)]
                    [uuid(DC59DA6E-82B9-55F7-A358-BA2A07665AA9)]
                    interface IObjectKeyFrameFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrame** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrame)]
                    [uuid(39E59CEB-2859-5A5F-ACD8-BC491D49C4B6)]
                    interface IObjectKeyFrameStatics : IInspectable
                    {
                        [propget] HRESULT ValueProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT KeyTimeProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.PaneThemeTransition)]
                    [uuid(321BCD80-157C-5E10-B0FE-6440BD92529A)]
                    interface IPaneThemeTransition : IInspectable
                    {
                        [propget] HRESULT Edge([out] [retval] Microsoft.UI.Xaml.Controls.Primitives.EdgeTransitionLocation* value);
                        [propput] HRESULT Edge([in] Microsoft.UI.Xaml.Controls.Primitives.EdgeTransitionLocation value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.PaneThemeTransition)]
                    [uuid(47E01752-5264-5FB1-8946-AB49FE6AF8FD)]
                    interface IPaneThemeTransitionStatics : IInspectable
                    {
                        [propget] HRESULT EdgeProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.PointAnimation)]
                    [uuid(A0737CC4-2EAB-5C13-A5D7-78361DF1000E)]
                    interface IPointAnimation : IInspectable
                    {
                        [propget] HRESULT From([out] [retval] Windows.Foundation.IReference<Windows.Foundation.Point>** value);
                        [propput] HRESULT From([in] Windows.Foundation.IReference<Windows.Foundation.Point>* value);
                        [propget] HRESULT To([out] [retval] Windows.Foundation.IReference<Windows.Foundation.Point>** value);
                        [propput] HRESULT To([in] Windows.Foundation.IReference<Windows.Foundation.Point>* value);
                        [propget] HRESULT By([out] [retval] Windows.Foundation.IReference<Windows.Foundation.Point>** value);
                        [propput] HRESULT By([in] Windows.Foundation.IReference<Windows.Foundation.Point>* value);
                        [propget] HRESULT EasingFunction([out] [retval] Microsoft.UI.Xaml.Media.Animation.EasingFunctionBase** value);
                        [propput] HRESULT EasingFunction([in] Microsoft.UI.Xaml.Media.Animation.EasingFunctionBase* value);
                        [propget] HRESULT EnableDependentAnimation([out] [retval] boolean* value);
                        [propput] HRESULT EnableDependentAnimation([in] boolean value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.PointAnimation)]
                    [uuid(71CFB43B-BADA-554B-8FCA-B558D623BBC0)]
                    interface IPointAnimationStatics : IInspectable
                    {
                        [propget] HRESULT FromProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ToProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ByProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT EasingFunctionProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT EnableDependentAnimationProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.PointAnimationUsingKeyFrames)]
                    [uuid(BDD63992-DF13-5514-8611-4952F722F6D0)]
                    interface IPointAnimationUsingKeyFrames : IInspectable
                    {
                        [propget] HRESULT KeyFrames([out] [retval] Microsoft.UI.Xaml.Media.Animation.PointKeyFrameCollection** value);
                        [propget] HRESULT EnableDependentAnimation([out] [retval] boolean* value);
                        [propput] HRESULT EnableDependentAnimation([in] boolean value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.PointAnimationUsingKeyFrames)]
                    [uuid(04152B3B-F0DA-5B28-877D-9AC96D334A77)]
                    interface IPointAnimationUsingKeyFramesStatics : IInspectable
                    {
                        [propget] HRESULT EnableDependentAnimationProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.PointKeyFrame)]
                    [uuid(59D5C07D-A3A7-5450-9DFB-4B7E77D58F93)]
                    interface IPointKeyFrame : IInspectable
                    {
                        [propget] HRESULT Value([out] [retval] Windows.Foundation.Point* value);
                        [propput] HRESULT Value([in] Windows.Foundation.Point value);
                        [propget] HRESULT KeyTime([out] [retval] Microsoft.UI.Xaml.Media.Animation.KeyTime* value);
                        [propput] HRESULT KeyTime([in] Microsoft.UI.Xaml.Media.Animation.KeyTime value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.PointKeyFrame)]
                    [uuid(C52EE293-F10E-5252-BC08-A28659740F0E)]
                    interface IPointKeyFrameFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Media.Animation.PointKeyFrame** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.PointKeyFrame)]
                    [uuid(96CD72FD-D834-5B23-9A17-1548961DC348)]
                    interface IPointKeyFrameStatics : IInspectable
                    {
                        [propget] HRESULT ValueProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT KeyTimeProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.PointerDownThemeAnimation)]
                    [uuid(ABDD1ACC-40DF-595D-BE68-0362FE681B91)]
                    interface IPointerDownThemeAnimation : IInspectable
                    {
                        [propget] HRESULT TargetName([out] [retval] HSTRING* value);
                        [propput] HRESULT TargetName([in] HSTRING value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.PointerDownThemeAnimation)]
                    [uuid(12268B39-FB7D-53DA-8CCC-5967DC06BCE9)]
                    interface IPointerDownThemeAnimationStatics : IInspectable
                    {
                        [propget] HRESULT TargetNameProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.PointerUpThemeAnimation)]
                    [uuid(94896D1C-C938-5D68-84DA-552BDE815810)]
                    interface IPointerUpThemeAnimation : IInspectable
                    {
                        [propget] HRESULT TargetName([out] [retval] HSTRING* value);
                        [propput] HRESULT TargetName([in] HSTRING value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.PointerUpThemeAnimation)]
                    [uuid(51A3117E-C6FA-5DC5-8DB8-73F060003AE4)]
                    interface IPointerUpThemeAnimationStatics : IInspectable
                    {
                        [propget] HRESULT TargetNameProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.PopInThemeAnimation)]
                    [uuid(20136388-B4E4-5CBB-9CB2-DF2EA7E6C44B)]
                    interface IPopInThemeAnimation : IInspectable
                    {
                        [propget] HRESULT TargetName([out] [retval] HSTRING* value);
                        [propput] HRESULT TargetName([in] HSTRING value);
                        [propget] HRESULT FromHorizontalOffset([out] [retval] DOUBLE* value);
                        [propput] HRESULT FromHorizontalOffset([in] DOUBLE value);
                        [propget] HRESULT FromVerticalOffset([out] [retval] DOUBLE* value);
                        [propput] HRESULT FromVerticalOffset([in] DOUBLE value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.PopInThemeAnimation)]
                    [uuid(8C9378A9-D276-5A1D-8188-F48F07840A16)]
                    interface IPopInThemeAnimationStatics : IInspectable
                    {
                        [propget] HRESULT TargetNameProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT FromHorizontalOffsetProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT FromVerticalOffsetProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.PopOutThemeAnimation)]
                    [uuid(1BB20DD3-5648-541A-A0C9-37A955DB10A6)]
                    interface IPopOutThemeAnimation : IInspectable
                    {
                        [propget] HRESULT TargetName([out] [retval] HSTRING* value);
                        [propput] HRESULT TargetName([in] HSTRING value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.PopOutThemeAnimation)]
                    [uuid(3F569F96-367E-595C-9732-2FB919388D84)]
                    interface IPopOutThemeAnimationStatics : IInspectable
                    {
                        [propget] HRESULT TargetNameProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.PopupThemeTransition)]
                    [uuid(E1FA6B8A-ADD3-5299-A000-121D6DBACC80)]
                    interface IPopupThemeTransition : IInspectable
                    {
                        [propget] HRESULT FromHorizontalOffset([out] [retval] DOUBLE* value);
                        [propput] HRESULT FromHorizontalOffset([in] DOUBLE value);
                        [propget] HRESULT FromVerticalOffset([out] [retval] DOUBLE* value);
                        [propput] HRESULT FromVerticalOffset([in] DOUBLE value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.PopupThemeTransition)]
                    [uuid(538B2114-415C-5F99-B74D-A85966DACC54)]
                    interface IPopupThemeTransitionStatics : IInspectable
                    {
                        [propget] HRESULT FromHorizontalOffsetProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT FromVerticalOffsetProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.PowerEase)]
                    [uuid(372DFAD0-5177-5DF9-8E1E-920962468714)]
                    interface IPowerEase : IInspectable
                    {
                        [propget] HRESULT Power([out] [retval] DOUBLE* value);
                        [propput] HRESULT Power([in] DOUBLE value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.PowerEase)]
                    [uuid(8EB72EDB-3E7E-5D40-928B-4505D57C21CE)]
                    interface IPowerEaseStatics : IInspectable
                    {
                        [propget] HRESULT PowerProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.QuadraticEase)]
                    [uuid(DB85FDA1-03B7-57CD-A1EF-8855CBF62191)]
                    interface IQuadraticEase : IInspectable
                    {
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.QuarticEase)]
                    [uuid(48215273-05F1-58AA-BADE-0B71D7BD0484)]
                    interface IQuarticEase : IInspectable
                    {
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.QuinticEase)]
                    [uuid(DC2F05D5-A3AC-5DCE-9B85-753A0C800FC2)]
                    interface IQuinticEase : IInspectable
                    {
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.ReorderThemeTransition)]
                    [uuid(0D5A0874-1DF5-5379-B626-74721759438A)]
                    interface IReorderThemeTransition : IInspectable
                    {
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.RepeatBehaviorHelper)]
                    [uuid(4643F139-FFEF-5C6A-8DE6-142B41CD51A5)]
                    interface IRepeatBehaviorHelper : IInspectable
                    {
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.RepeatBehaviorHelper)]
                    [uuid(C66D4425-6461-5189-B17D-CCA0CCA34CA0)]
                    interface IRepeatBehaviorHelperStatics : IInspectable
                    {
                        [propget] HRESULT Forever([out] [retval] Microsoft.UI.Xaml.Media.Animation.RepeatBehavior* value);
                        HRESULT FromCount([in] DOUBLE count, [out] [retval] Microsoft.UI.Xaml.Media.Animation.RepeatBehavior* result);
                        HRESULT FromDuration([in] Windows.Foundation.TimeSpan duration, [out] [retval] Microsoft.UI.Xaml.Media.Animation.RepeatBehavior* result);
                        HRESULT GetHasCount([in] Microsoft.UI.Xaml.Media.Animation.RepeatBehavior target, [out] [retval] boolean* result);
                        HRESULT GetHasDuration([in] Microsoft.UI.Xaml.Media.Animation.RepeatBehavior target, [out] [retval] boolean* result);
                        HRESULT Equals([in] Microsoft.UI.Xaml.Media.Animation.RepeatBehavior target, [in] Microsoft.UI.Xaml.Media.Animation.RepeatBehavior value, [out] [retval] boolean* result);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.RepositionThemeAnimation)]
                    [uuid(36F7E025-23C1-53DE-8DF9-7DC1E9C788FD)]
                    interface IRepositionThemeAnimation : IInspectable
                    {
                        [propget] HRESULT TargetName([out] [retval] HSTRING* value);
                        [propput] HRESULT TargetName([in] HSTRING value);
                        [propget] HRESULT FromHorizontalOffset([out] [retval] DOUBLE* value);
                        [propput] HRESULT FromHorizontalOffset([in] DOUBLE value);
                        [propget] HRESULT FromVerticalOffset([out] [retval] DOUBLE* value);
                        [propput] HRESULT FromVerticalOffset([in] DOUBLE value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.RepositionThemeAnimation)]
                    [uuid(C04118DE-AFF5-5FA9-AEE7-94A621C82618)]
                    interface IRepositionThemeAnimationStatics : IInspectable
                    {
                        [propget] HRESULT TargetNameProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT FromHorizontalOffsetProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT FromVerticalOffsetProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.RepositionThemeTransition)]
                    [uuid(7728E3F0-24B1-5484-824A-C0B41C2745D5)]
                    interface IRepositionThemeTransition : IInspectable
                    {
                        [propget] HRESULT IsStaggeringEnabled([out] [retval] boolean* value);
                        [propput] HRESULT IsStaggeringEnabled([in] boolean value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.RepositionThemeTransition)]
                    [uuid(C70A0F9A-485E-53BB-AD3C-8B41B6788BF9)]
                    interface IRepositionThemeTransitionStatics : IInspectable
                    {
                        [propget] HRESULT IsStaggeringEnabledProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.SineEase)]
                    [uuid(6115539B-663D-5131-B7C2-74BB5FDC6A1D)]
                    interface ISineEase : IInspectable
                    {
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.SlideNavigationTransitionInfo)]
                    [uuid(53EADE0E-6B01-511F-A563-6F5724A6C1C1)]
                    interface ISlideNavigationTransitionInfo : IInspectable
                    {
                        [propget] HRESULT Effect([out] [retval] Microsoft.UI.Xaml.Media.Animation.SlideNavigationTransitionEffect* value);
                        [propput] HRESULT Effect([in] Microsoft.UI.Xaml.Media.Animation.SlideNavigationTransitionEffect value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.SlideNavigationTransitionInfo)]
                    [uuid(90BA0C6C-CD45-5A6C-BBB2-88037D43CD79)]
                    interface ISlideNavigationTransitionInfoStatics : IInspectable
                    {
                        [propget] HRESULT EffectProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.SplineColorKeyFrame)]
                    [uuid(60C5905F-4343-504D-A2C6-64B8D924B438)]
                    interface ISplineColorKeyFrame : IInspectable
                    {
                        [propget] HRESULT KeySpline([out] [retval] Microsoft.UI.Xaml.Media.Animation.KeySpline** value);
                        [propput] HRESULT KeySpline([in] Microsoft.UI.Xaml.Media.Animation.KeySpline* value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.SplineColorKeyFrame)]
                    [uuid(D89C7062-753D-5652-B215-C195AE2C7A18)]
                    interface ISplineColorKeyFrameStatics : IInspectable
                    {
                        [propget] HRESULT KeySplineProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.SplineDoubleKeyFrame)]
                    [uuid(AEA80957-BB56-59B6-BB7A-6295F94BC961)]
                    interface ISplineDoubleKeyFrame : IInspectable
                    {
                        [propget] HRESULT KeySpline([out] [retval] Microsoft.UI.Xaml.Media.Animation.KeySpline** value);
                        [propput] HRESULT KeySpline([in] Microsoft.UI.Xaml.Media.Animation.KeySpline* value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.SplineDoubleKeyFrame)]
                    [uuid(CA88552E-7237-51F8-A8CA-79952C77883A)]
                    interface ISplineDoubleKeyFrameStatics : IInspectable
                    {
                        [propget] HRESULT KeySplineProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.SplinePointKeyFrame)]
                    [uuid(2B7EB049-708C-5220-A178-A25DBC14FFBE)]
                    interface ISplinePointKeyFrame : IInspectable
                    {
                        [propget] HRESULT KeySpline([out] [retval] Microsoft.UI.Xaml.Media.Animation.KeySpline** value);
                        [propput] HRESULT KeySpline([in] Microsoft.UI.Xaml.Media.Animation.KeySpline* value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.SplinePointKeyFrame)]
                    [uuid(1E100E36-BED1-5060-8DCF-0D5B32575ED1)]
                    interface ISplinePointKeyFrameStatics : IInspectable
                    {
                        [propget] HRESULT KeySplineProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation)]
                    [uuid(B0DD1490-F646-5C18-B3EF-02F9B17F57DF)]
                    interface ISplitCloseThemeAnimation : IInspectable
                    {
                        [propget] HRESULT OpenedTargetName([out] [retval] HSTRING* value);
                        [propput] HRESULT OpenedTargetName([in] HSTRING value);
                        [propget] HRESULT OpenedTarget([out] [retval] Microsoft.UI.Xaml.DependencyObject** value);
                        [propput] HRESULT OpenedTarget([in] Microsoft.UI.Xaml.DependencyObject* value);
                        [propget] HRESULT ClosedTargetName([out] [retval] HSTRING* value);
                        [propput] HRESULT ClosedTargetName([in] HSTRING value);
                        [propget] HRESULT ClosedTarget([out] [retval] Microsoft.UI.Xaml.DependencyObject** value);
                        [propput] HRESULT ClosedTarget([in] Microsoft.UI.Xaml.DependencyObject* value);
                        [propget] HRESULT ContentTargetName([out] [retval] HSTRING* value);
                        [propput] HRESULT ContentTargetName([in] HSTRING value);
                        [propget] HRESULT ContentTarget([out] [retval] Microsoft.UI.Xaml.DependencyObject** value);
                        [propput] HRESULT ContentTarget([in] Microsoft.UI.Xaml.DependencyObject* value);
                        [propget] HRESULT OpenedLength([out] [retval] DOUBLE* value);
                        [propput] HRESULT OpenedLength([in] DOUBLE value);
                        [propget] HRESULT ClosedLength([out] [retval] DOUBLE* value);
                        [propput] HRESULT ClosedLength([in] DOUBLE value);
                        [propget] HRESULT OffsetFromCenter([out] [retval] DOUBLE* value);
                        [propput] HRESULT OffsetFromCenter([in] DOUBLE value);
                        [propget] HRESULT ContentTranslationDirection([out] [retval] Microsoft.UI.Xaml.Controls.Primitives.AnimationDirection* value);
                        [propput] HRESULT ContentTranslationDirection([in] Microsoft.UI.Xaml.Controls.Primitives.AnimationDirection value);
                        [propget] HRESULT ContentTranslationOffset([out] [retval] DOUBLE* value);
                        [propput] HRESULT ContentTranslationOffset([in] DOUBLE value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.SplitCloseThemeAnimation)]
                    [uuid(32345CDD-2A3C-5571-B2EB-2FCABC2E92C6)]
                    interface ISplitCloseThemeAnimationStatics : IInspectable
                    {
                        [propget] HRESULT OpenedTargetNameProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT OpenedTargetProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ClosedTargetNameProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ClosedTargetProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ContentTargetNameProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ContentTargetProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT OpenedLengthProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ClosedLengthProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT OffsetFromCenterProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ContentTranslationDirectionProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ContentTranslationOffsetProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation)]
                    [uuid(79FDFACA-4245-53F0-B5C7-DA1CE2B0B851)]
                    interface ISplitOpenThemeAnimation : IInspectable
                    {
                        [propget] HRESULT OpenedTargetName([out] [retval] HSTRING* value);
                        [propput] HRESULT OpenedTargetName([in] HSTRING value);
                        [propget] HRESULT OpenedTarget([out] [retval] Microsoft.UI.Xaml.DependencyObject** value);
                        [propput] HRESULT OpenedTarget([in] Microsoft.UI.Xaml.DependencyObject* value);
                        [propget] HRESULT ClosedTargetName([out] [retval] HSTRING* value);
                        [propput] HRESULT ClosedTargetName([in] HSTRING value);
                        [propget] HRESULT ClosedTarget([out] [retval] Microsoft.UI.Xaml.DependencyObject** value);
                        [propput] HRESULT ClosedTarget([in] Microsoft.UI.Xaml.DependencyObject* value);
                        [propget] HRESULT ContentTargetName([out] [retval] HSTRING* value);
                        [propput] HRESULT ContentTargetName([in] HSTRING value);
                        [propget] HRESULT ContentTarget([out] [retval] Microsoft.UI.Xaml.DependencyObject** value);
                        [propput] HRESULT ContentTarget([in] Microsoft.UI.Xaml.DependencyObject* value);
                        [propget] HRESULT OpenedLength([out] [retval] DOUBLE* value);
                        [propput] HRESULT OpenedLength([in] DOUBLE value);
                        [propget] HRESULT ClosedLength([out] [retval] DOUBLE* value);
                        [propput] HRESULT ClosedLength([in] DOUBLE value);
                        [propget] HRESULT OffsetFromCenter([out] [retval] DOUBLE* value);
                        [propput] HRESULT OffsetFromCenter([in] DOUBLE value);
                        [propget] HRESULT ContentTranslationDirection([out] [retval] Microsoft.UI.Xaml.Controls.Primitives.AnimationDirection* value);
                        [propput] HRESULT ContentTranslationDirection([in] Microsoft.UI.Xaml.Controls.Primitives.AnimationDirection value);
                        [propget] HRESULT ContentTranslationOffset([out] [retval] DOUBLE* value);
                        [propput] HRESULT ContentTranslationOffset([in] DOUBLE value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.SplitOpenThemeAnimation)]
                    [uuid(E5A73B84-A4AE-5C38-84DA-F7ED30FC9B6E)]
                    interface ISplitOpenThemeAnimationStatics : IInspectable
                    {
                        [propget] HRESULT OpenedTargetNameProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT OpenedTargetProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ClosedTargetNameProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ClosedTargetProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ContentTargetNameProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ContentTargetProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT OpenedLengthProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ClosedLengthProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT OffsetFromCenterProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ContentTranslationDirectionProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ContentTranslationOffsetProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.Storyboard)]
                    [uuid(04D41BB3-8721-519E-8E53-FB8B34920305)]
                    interface IStoryboard : IInspectable
                    {
                        [propget] HRESULT Children([out] [retval] Microsoft.UI.Xaml.Media.Animation.TimelineCollection** value);
                        HRESULT Seek([in] Windows.Foundation.TimeSpan offset);
                        HRESULT Stop();
                        HRESULT Begin();
                        HRESULT Pause();
                        HRESULT Resume();
                        HRESULT GetCurrentState([out] [retval] Microsoft.UI.Xaml.Media.Animation.ClockState* result);
                        HRESULT GetCurrentTime([out] [retval] Windows.Foundation.TimeSpan* result);
                        HRESULT SeekAlignedToLastTick([in] Windows.Foundation.TimeSpan offset);
                        HRESULT SkipToFill();
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.Storyboard)]
                    [uuid(DD18519B-D4E4-597D-A0B7-655EBDD35EFA)]
                    interface IStoryboardStatics : IInspectable
                    {
                        [propget] HRESULT TargetPropertyProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        HRESULT GetTargetProperty([in] Microsoft.UI.Xaml.Media.Animation.Timeline* element, [out] [retval] HSTRING* result);
                        HRESULT SetTargetProperty([in] Microsoft.UI.Xaml.Media.Animation.Timeline* element, [in] HSTRING path);
                        [propget] HRESULT TargetNameProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        HRESULT GetTargetName([in] Microsoft.UI.Xaml.Media.Animation.Timeline* element, [out] [retval] HSTRING* result);
                        HRESULT SetTargetName([in] Microsoft.UI.Xaml.Media.Animation.Timeline* element, [in] HSTRING name);
                        HRESULT SetTarget([in] Microsoft.UI.Xaml.Media.Animation.Timeline* timeline, [in] Microsoft.UI.Xaml.DependencyObject* target);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.SuppressNavigationTransitionInfo)]
                    [uuid(3ECD2BD1-9805-5F51-BB9E-051FEA8DC355)]
                    interface ISuppressNavigationTransitionInfo : IInspectable
                    {
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.SwipeBackThemeAnimation)]
                    [uuid(F095D058-BC9E-58EE-8877-E084723B4333)]
                    interface ISwipeBackThemeAnimation : IInspectable
                    {
                        [propget] HRESULT TargetName([out] [retval] HSTRING* value);
                        [propput] HRESULT TargetName([in] HSTRING value);
                        [propget] HRESULT FromHorizontalOffset([out] [retval] DOUBLE* value);
                        [propput] HRESULT FromHorizontalOffset([in] DOUBLE value);
                        [propget] HRESULT FromVerticalOffset([out] [retval] DOUBLE* value);
                        [propput] HRESULT FromVerticalOffset([in] DOUBLE value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.SwipeBackThemeAnimation)]
                    [uuid(18A7A588-B9A2-573B-8E2B-38048C4635A7)]
                    interface ISwipeBackThemeAnimationStatics : IInspectable
                    {
                        [propget] HRESULT TargetNameProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT FromHorizontalOffsetProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT FromVerticalOffsetProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.SwipeHintThemeAnimation)]
                    [uuid(09DE03D7-4B8A-55E1-AFAD-5F60598733EA)]
                    interface ISwipeHintThemeAnimation : IInspectable
                    {
                        [propget] HRESULT TargetName([out] [retval] HSTRING* value);
                        [propput] HRESULT TargetName([in] HSTRING value);
                        [propget] HRESULT ToHorizontalOffset([out] [retval] DOUBLE* value);
                        [propput] HRESULT ToHorizontalOffset([in] DOUBLE value);
                        [propget] HRESULT ToVerticalOffset([out] [retval] DOUBLE* value);
                        [propput] HRESULT ToVerticalOffset([in] DOUBLE value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.SwipeHintThemeAnimation)]
                    [uuid(F3308304-4F09-54D7-A4D5-CA558BBFE26F)]
                    interface ISwipeHintThemeAnimationStatics : IInspectable
                    {
                        [propget] HRESULT TargetNameProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ToHorizontalOffsetProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT ToVerticalOffsetProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.PrivateApiContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.ThemeAnimationBase)]
                    [uuid(65116F90-6460-5EAA-ACB3-F6DA608B2A94)]
                    interface IThemeAnimationBase : IInspectable
                    {
                    }

                    [contract(Microsoft.UI.Xaml.PrivateApiContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.ThemeAnimationBase)]
                    [uuid(A0FD400F-0962-55A3-9F39-270E1EFFF225)]
                    interface IThemeAnimationBaseFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Media.Animation.ThemeAnimationBase** value);
                    }

                    [contract(Microsoft.UI.Xaml.PrivateApiContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.ThemeAnimationBase)]
                    [uuid(E38F48FD-CE59-5B27-ACDF-84E72DD0EE67)]
                    interface IThemeAnimationBaseOverrides : IInspectable
                    {
                        HRESULT CreateTimelinesInternal([in] boolean onlyGenerateSteadyState, [in] Microsoft.UI.Xaml.Media.Animation.TimelineCollection* timelineCollection);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.Timeline)]
                    [uuid(D0F9B330-CC2A-5B05-9786-2DA4C6584581)]
                    interface ITimeline : IInspectable
                    {
                        [propget] HRESULT AutoReverse([out] [retval] boolean* value);
                        [propput] HRESULT AutoReverse([in] boolean value);
                        [propget] HRESULT BeginTime([out] [retval] Windows.Foundation.IReference<Windows.Foundation.TimeSpan>** value);
                        [propput] HRESULT BeginTime([in] Windows.Foundation.IReference<Windows.Foundation.TimeSpan>* value);
                        [propget] HRESULT Duration([out] [retval] Microsoft.UI.Xaml.Duration* value);
                        [propput] HRESULT Duration([in] Microsoft.UI.Xaml.Duration value);
                        [propget] HRESULT SpeedRatio([out] [retval] DOUBLE* value);
                        [propput] HRESULT SpeedRatio([in] DOUBLE value);
                        [propget] HRESULT FillBehavior([out] [retval] Microsoft.UI.Xaml.Media.Animation.FillBehavior* value);
                        [propput] HRESULT FillBehavior([in] Microsoft.UI.Xaml.Media.Animation.FillBehavior value);
                        [propget] HRESULT RepeatBehavior([out] [retval] Microsoft.UI.Xaml.Media.Animation.RepeatBehavior* value);
                        [propput] HRESULT RepeatBehavior([in] Microsoft.UI.Xaml.Media.Animation.RepeatBehavior value);
                        [eventadd] HRESULT Completed([in] Windows.Foundation.EventHandler<IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                        [eventremove] HRESULT Completed([in] EventRegistrationToken token);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.Timeline)]
                    [uuid(6A635732-A827-5398-9FC8-DFBC3B97E3C1)]
                    interface ITimelineFactory : IInspectable
                    {
                        HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Media.Animation.Timeline** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.Timeline)]
                    [uuid(778B8471-C831-503A-8748-FE6BBC7153B7)]
                    interface ITimelineStatics : IInspectable
                    {
                        [propget] HRESULT AllowDependentAnimations([out] [retval] boolean* value);
                        [propput] HRESULT AllowDependentAnimations([in] boolean value);
                        [propget] HRESULT AutoReverseProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT BeginTimeProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT DurationProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT SpeedRatioProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT FillBehaviorProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                        [propget] HRESULT RepeatBehaviorProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.Transition)]
                    [uuid(E5B71956-8E44-5A38-B41E-274D706102BF)]
                    interface ITransition : IInspectable
                    {
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [exclusiveto(Microsoft.UI.Xaml.Media.Animation.Transition)]
                    [uuid(B7023E3B-BCD3-50EC-AACF-8CFCECE25F17)]
                    interface ITransitionFactory : IInspectable
                    {
                    }

                    [contract(Microsoft.UI.Xaml.PrivateApiContract, 1.0)]
                    [uuid(41005935-7E80-565A-AD85-EAD029C11306)]
                    interface ITransitionFactoryPrivate : IInspectable
                    {
                        HRESULT CreateInstance([in] IInspectable* outer, [out] IInspectable** inner, [out] [retval] Microsoft.UI.Xaml.Media.Animation.Transition** result);
                    }

                    [contract(Microsoft.UI.Xaml.PrivateApiContract, 1.0)]
                    [uuid(40026AB3-5BB2-5C6E-8DA1-475AF8037BAD)]
                    interface ITransitionPrivate : IInspectable
                    {
                        HRESULT CreateStoryboard([in] Microsoft.UI.Xaml.UIElement* element, [in] Windows.Foundation.Rect start, [in] Windows.Foundation.Rect destination, [in] Microsoft.UI.Xaml.TransitionTrigger transitionTrigger, [in] Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Media.Animation.Storyboard*>* storyboards, [out] Microsoft.UI.Xaml.TransitionParent* parentForTransition);
                        HRESULT ParticipatesInTransition([in] Microsoft.UI.Xaml.UIElement* element, [in] Microsoft.UI.Xaml.TransitionTrigger transitonTrigger, [out] [retval] boolean* result);
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    runtimeclass AddDeleteThemeTransition : Microsoft.UI.Xaml.Media.Animation.Transition
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IAddDeleteThemeTransition;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.IBackEaseStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass BackEase : Microsoft.UI.Xaml.Media.Animation.EasingFunctionBase
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IBackEase;
                    }

                    [composable(Microsoft.UI.Xaml.Media.Animation.IBasicConnectedAnimationConfigurationFactory, public, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    runtimeclass BasicConnectedAnimationConfiguration : Microsoft.UI.Xaml.Media.Animation.ConnectedAnimationConfiguration
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IBasicConnectedAnimationConfiguration;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.IBeginStoryboardStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass BeginStoryboard : Microsoft.UI.Xaml.TriggerAction
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IBeginStoryboard;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.IBounceEaseStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass BounceEase : Microsoft.UI.Xaml.Media.Animation.EasingFunctionBase
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IBounceEase;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    runtimeclass CircleEase : Microsoft.UI.Xaml.Media.Animation.EasingFunctionBase
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.ICircleEase;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.IColorAnimationStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass ColorAnimation : Microsoft.UI.Xaml.Media.Animation.Timeline
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IColorAnimation;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.IColorAnimationUsingKeyFramesStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass ColorAnimationUsingKeyFrames : Microsoft.UI.Xaml.Media.Animation.Timeline
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IColorAnimationUsingKeyFrames;
                    }

                    [composable(Microsoft.UI.Xaml.Media.Animation.IColorKeyFrameFactory, protected, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.IColorKeyFrameStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass ColorKeyFrame : Microsoft.UI.Xaml.DependencyObject
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IColorKeyFrame;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    runtimeclass ColorKeyFrameCollection
                    {
                        [default] interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Media.Animation.ColorKeyFrame*>;
                        interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Media.Animation.ColorKeyFrame*>;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.ICommonNavigationTransitionInfoStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass CommonNavigationTransitionInfo : Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.ICommonNavigationTransitionInfo;
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    runtimeclass ConnectedAnimation
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IConnectedAnimation;
                    }

                    [composable(Microsoft.UI.Xaml.Media.Animation.IConnectedAnimationConfigurationFactory, public, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    runtimeclass ConnectedAnimationConfiguration
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IConnectedAnimationConfiguration;
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.IConnectedAnimationServiceStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass ConnectedAnimationService
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IConnectedAnimationService;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.IContentThemeTransitionStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass ContentThemeTransition : Microsoft.UI.Xaml.Media.Animation.Transition
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IContentThemeTransition;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.IContinuumNavigationTransitionInfoStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass ContinuumNavigationTransitionInfo : Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IContinuumNavigationTransitionInfo;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    runtimeclass CubicEase : Microsoft.UI.Xaml.Media.Animation.EasingFunctionBase
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.ICubicEase;
                    }

                    [composable(Microsoft.UI.Xaml.Media.Animation.IDirectConnectedAnimationConfigurationFactory, public, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    runtimeclass DirectConnectedAnimationConfiguration : Microsoft.UI.Xaml.Media.Animation.ConnectedAnimationConfiguration
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IDirectConnectedAnimationConfiguration;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    runtimeclass DiscreteColorKeyFrame : Microsoft.UI.Xaml.Media.Animation.ColorKeyFrame
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IDiscreteColorKeyFrame;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    runtimeclass DiscreteDoubleKeyFrame : Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrame
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IDiscreteDoubleKeyFrame;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    runtimeclass DiscreteObjectKeyFrame : Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrame
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IDiscreteObjectKeyFrame;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    runtimeclass DiscretePointKeyFrame : Microsoft.UI.Xaml.Media.Animation.PointKeyFrame
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IDiscretePointKeyFrame;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.IDoubleAnimationStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass DoubleAnimation : Microsoft.UI.Xaml.Media.Animation.Timeline
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IDoubleAnimation;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.IDoubleAnimationUsingKeyFramesStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass DoubleAnimationUsingKeyFrames : Microsoft.UI.Xaml.Media.Animation.Timeline
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IDoubleAnimationUsingKeyFrames;
                    }

                    [composable(Microsoft.UI.Xaml.Media.Animation.IDoubleKeyFrameFactory, protected, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.IDoubleKeyFrameStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass DoubleKeyFrame : Microsoft.UI.Xaml.DependencyObject
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IDoubleKeyFrame;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    runtimeclass DoubleKeyFrameCollection
                    {
                        [default] interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrame*>;
                        interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrame*>;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.IDragItemThemeAnimationStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass DragItemThemeAnimation : Microsoft.UI.Xaml.Media.Animation.Timeline
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IDragItemThemeAnimation;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.IDragOverThemeAnimationStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass DragOverThemeAnimation : Microsoft.UI.Xaml.Media.Animation.Timeline
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IDragOverThemeAnimation;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    runtimeclass DrillInNavigationTransitionInfo : Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IDrillInNavigationTransitionInfo;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.IDrillInThemeAnimationStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass DrillInThemeAnimation : Microsoft.UI.Xaml.Media.Animation.Timeline
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IDrillInThemeAnimation;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.IDrillOutThemeAnimationStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass DrillOutThemeAnimation : Microsoft.UI.Xaml.Media.Animation.Timeline
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IDrillOutThemeAnimation;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.IDropTargetItemThemeAnimationStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass DropTargetItemThemeAnimation : Microsoft.UI.Xaml.Media.Animation.Timeline
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IDropTargetItemThemeAnimation;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.IEasingColorKeyFrameStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass EasingColorKeyFrame : Microsoft.UI.Xaml.Media.Animation.ColorKeyFrame
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IEasingColorKeyFrame;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.IEasingDoubleKeyFrameStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass EasingDoubleKeyFrame : Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrame
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IEasingDoubleKeyFrame;
                    }

                    [composable(Microsoft.UI.Xaml.Media.Animation.IEasingFunctionBaseFactory, public, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.IEasingFunctionBaseStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass EasingFunctionBase : Microsoft.UI.Xaml.DependencyObject
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IEasingFunctionBase;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.IEasingPointKeyFrameStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass EasingPointKeyFrame : Microsoft.UI.Xaml.Media.Animation.PointKeyFrame
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IEasingPointKeyFrame;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.IEdgeUIThemeTransitionStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass EdgeUIThemeTransition : Microsoft.UI.Xaml.Media.Animation.Transition
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IEdgeUIThemeTransition;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.IElasticEaseStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass ElasticEase : Microsoft.UI.Xaml.Media.Animation.EasingFunctionBase
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IElasticEase;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.IEntranceNavigationTransitionInfoStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass EntranceNavigationTransitionInfo : Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IEntranceNavigationTransitionInfo;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.IEntranceThemeTransitionStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass EntranceThemeTransition : Microsoft.UI.Xaml.Media.Animation.Transition
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IEntranceThemeTransition;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.IExponentialEaseStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass ExponentialEase : Microsoft.UI.Xaml.Media.Animation.EasingFunctionBase
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IExponentialEase;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.IFadeInThemeAnimationStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass FadeInThemeAnimation : Microsoft.UI.Xaml.Media.Animation.Timeline
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IFadeInThemeAnimation;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.IFadeOutThemeAnimationStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass FadeOutThemeAnimation : Microsoft.UI.Xaml.Media.Animation.Timeline
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IFadeOutThemeAnimation;
                    }

                    [composable(Microsoft.UI.Xaml.Media.Animation.IGravityConnectedAnimationConfigurationFactory, public, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    runtimeclass GravityConnectedAnimationConfiguration : Microsoft.UI.Xaml.Media.Animation.ConnectedAnimationConfiguration
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IGravityConnectedAnimationConfiguration;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    runtimeclass KeySpline : Microsoft.UI.Xaml.DependencyObject
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IKeySpline;
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.IKeyTimeHelperStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass KeyTimeHelper
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IKeyTimeHelper;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    runtimeclass LinearColorKeyFrame : Microsoft.UI.Xaml.Media.Animation.ColorKeyFrame
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.ILinearColorKeyFrame;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    runtimeclass LinearDoubleKeyFrame : Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrame
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.ILinearDoubleKeyFrame;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    runtimeclass LinearPointKeyFrame : Microsoft.UI.Xaml.Media.Animation.PointKeyFrame
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.ILinearPointKeyFrame;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.INavigationThemeTransitionStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass NavigationThemeTransition : Microsoft.UI.Xaml.Media.Animation.Transition
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.INavigationThemeTransition;
                    }

                    [composable(Microsoft.UI.Xaml.Media.Animation.INavigationTransitionInfoFactory, protected, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    runtimeclass NavigationTransitionInfo : Microsoft.UI.Xaml.DependencyObject
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.INavigationTransitionInfo;
                        [overridable] interface Microsoft.UI.Xaml.Media.Animation.INavigationTransitionInfoOverrides;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.IObjectAnimationUsingKeyFramesStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass ObjectAnimationUsingKeyFrames : Microsoft.UI.Xaml.Media.Animation.Timeline
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IObjectAnimationUsingKeyFrames;
                    }

                    [composable(Microsoft.UI.Xaml.Media.Animation.IObjectKeyFrameFactory, protected, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.IObjectKeyFrameStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass ObjectKeyFrame : Microsoft.UI.Xaml.DependencyObject
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IObjectKeyFrame;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    runtimeclass ObjectKeyFrameCollection
                    {
                        [default] interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrame*>;
                        interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Media.Animation.ObjectKeyFrame*>;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.IPaneThemeTransitionStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass PaneThemeTransition : Microsoft.UI.Xaml.Media.Animation.Transition
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IPaneThemeTransition;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.IPointAnimationStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass PointAnimation : Microsoft.UI.Xaml.Media.Animation.Timeline
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IPointAnimation;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.IPointAnimationUsingKeyFramesStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass PointAnimationUsingKeyFrames : Microsoft.UI.Xaml.Media.Animation.Timeline
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IPointAnimationUsingKeyFrames;
                    }

                    [composable(Microsoft.UI.Xaml.Media.Animation.IPointKeyFrameFactory, protected, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.IPointKeyFrameStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass PointKeyFrame : Microsoft.UI.Xaml.DependencyObject
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IPointKeyFrame;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    runtimeclass PointKeyFrameCollection
                    {
                        [default] interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Media.Animation.PointKeyFrame*>;
                        interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Media.Animation.PointKeyFrame*>;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.IPointerDownThemeAnimationStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass PointerDownThemeAnimation : Microsoft.UI.Xaml.Media.Animation.Timeline
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IPointerDownThemeAnimation;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.IPointerUpThemeAnimationStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass PointerUpThemeAnimation : Microsoft.UI.Xaml.Media.Animation.Timeline
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IPointerUpThemeAnimation;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.IPopInThemeAnimationStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass PopInThemeAnimation : Microsoft.UI.Xaml.Media.Animation.Timeline
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IPopInThemeAnimation;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.IPopOutThemeAnimationStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass PopOutThemeAnimation : Microsoft.UI.Xaml.Media.Animation.Timeline
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IPopOutThemeAnimation;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.IPopupThemeTransitionStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass PopupThemeTransition : Microsoft.UI.Xaml.Media.Animation.Transition
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IPopupThemeTransition;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.IPowerEaseStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass PowerEase : Microsoft.UI.Xaml.Media.Animation.EasingFunctionBase
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IPowerEase;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    runtimeclass QuadraticEase : Microsoft.UI.Xaml.Media.Animation.EasingFunctionBase
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IQuadraticEase;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    runtimeclass QuarticEase : Microsoft.UI.Xaml.Media.Animation.EasingFunctionBase
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IQuarticEase;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    runtimeclass QuinticEase : Microsoft.UI.Xaml.Media.Animation.EasingFunctionBase
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IQuinticEase;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    runtimeclass ReorderThemeTransition : Microsoft.UI.Xaml.Media.Animation.Transition
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IReorderThemeTransition;
                    }

                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.IRepeatBehaviorHelperStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass RepeatBehaviorHelper
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IRepeatBehaviorHelper;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.IRepositionThemeAnimationStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass RepositionThemeAnimation : Microsoft.UI.Xaml.Media.Animation.Timeline
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IRepositionThemeAnimation;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.IRepositionThemeTransitionStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass RepositionThemeTransition : Microsoft.UI.Xaml.Media.Animation.Transition
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IRepositionThemeTransition;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    runtimeclass SineEase : Microsoft.UI.Xaml.Media.Animation.EasingFunctionBase
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.ISineEase;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.ISlideNavigationTransitionInfoStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass SlideNavigationTransitionInfo : Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.ISlideNavigationTransitionInfo;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.ISplineColorKeyFrameStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass SplineColorKeyFrame : Microsoft.UI.Xaml.Media.Animation.ColorKeyFrame
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.ISplineColorKeyFrame;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.ISplineDoubleKeyFrameStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass SplineDoubleKeyFrame : Microsoft.UI.Xaml.Media.Animation.DoubleKeyFrame
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.ISplineDoubleKeyFrame;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.ISplinePointKeyFrameStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass SplinePointKeyFrame : Microsoft.UI.Xaml.Media.Animation.PointKeyFrame
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.ISplinePointKeyFrame;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.ISplitCloseThemeAnimationStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass SplitCloseThemeAnimation : Microsoft.UI.Xaml.Media.Animation.Timeline
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.ISplitCloseThemeAnimation;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.ISplitOpenThemeAnimationStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass SplitOpenThemeAnimation : Microsoft.UI.Xaml.Media.Animation.Timeline
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.ISplitOpenThemeAnimation;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.IStoryboardStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass Storyboard : Microsoft.UI.Xaml.Media.Animation.Timeline
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IStoryboard;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    runtimeclass SuppressNavigationTransitionInfo : Microsoft.UI.Xaml.Media.Animation.NavigationTransitionInfo
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.ISuppressNavigationTransitionInfo;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.ISwipeBackThemeAnimationStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass SwipeBackThemeAnimation : Microsoft.UI.Xaml.Media.Animation.Timeline
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.ISwipeBackThemeAnimation;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.ISwipeHintThemeAnimationStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass SwipeHintThemeAnimation : Microsoft.UI.Xaml.Media.Animation.Timeline
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.ISwipeHintThemeAnimation;
                    }

                    [composable(Microsoft.UI.Xaml.Media.Animation.IThemeAnimationBaseFactory, protected, Microsoft.UI.Xaml.PrivateApiContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.PrivateApiContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    runtimeclass ThemeAnimationBase : Microsoft.UI.Xaml.Media.Animation.Timeline
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.IThemeAnimationBase;
                        [overridable] interface Microsoft.UI.Xaml.Media.Animation.IThemeAnimationBaseOverrides;
                    }

                    [composable(Microsoft.UI.Xaml.Media.Animation.ITimelineFactory, protected, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [static(Microsoft.UI.Xaml.Media.Animation.ITimelineStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [threading(both)]
                    runtimeclass Timeline : Microsoft.UI.Xaml.DependencyObject
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.ITimeline;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    runtimeclass TimelineCollection
                    {
                        [default] interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Media.Animation.Timeline*>;
                        interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Media.Animation.Timeline*>;
                    }

                    [composable(Microsoft.UI.Xaml.Media.Animation.ITransitionFactory, public, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    runtimeclass Transition : Microsoft.UI.Xaml.DependencyObject
                    {
                        [default] interface Microsoft.UI.Xaml.Media.Animation.ITransition;
                    }

                    [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                    [marshaling_behavior(agile)]
                    [threading(both)]
                    runtimeclass TransitionCollection
                    {
                        [default] interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Media.Animation.Transition*>;
                        interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Media.Animation.Transition*>;
                    }
                }
            }
        }
    }
}
