//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "windowscontracts.idl";
import "Windows.Foundation.idl";
import "Microsoft.Foundation.idl";
import "Microsoft.Graphics.idl";
import "Microsoft.Graphics.DirectX.idl";
import "Microsoft.System.idl";
import "Windows.Foundation.Numerics.idl";
import "Windows.Graphics.idl";
import "Windows.Graphics.Effects.idl";
import "Windows.UI.idl";

// Forward Declare
namespace Microsoft
{
    namespace Foundation
    {
        apicontract LiftedContract;
    }
}
namespace Microsoft
{
    namespace Graphics
    {
        namespace DirectX
        {
            typedef enum DirectXAlphaMode DirectXAlphaMode;

            typedef enum DirectXPixelFormat DirectXPixelFormat;
        }
    }
}
namespace Microsoft
{
    namespace Graphics
    {
        interface IGeometrySource2D;
    }
}
namespace Microsoft
{
    namespace System
    {
        runtimeclass DispatcherQueue;
    }
}
namespace Windows
{
    namespace Foundation
    {
        interface IAsyncAction;

        interface IClosable;
    }
}
namespace Windows
{
    namespace Foundation
    {
        namespace Numerics
        {
            typedef struct Matrix3x2 Matrix3x2;

            typedef struct Matrix4x4 Matrix4x4;

            typedef struct Quaternion Quaternion;

            typedef struct Vector2 Vector2;

            typedef struct Vector3 Vector3;

            typedef struct Vector4 Vector4;
        }
    }
}
namespace Windows
{
    namespace Foundation
    {
        typedef struct Size Size;

        typedef struct TimeSpan TimeSpan;
    }
}
namespace Windows
{
    namespace Graphics
    {
        namespace Effects
        {
            interface IGraphicsEffect;

            interface IGraphicsEffectSource;
        }
    }
}
namespace Windows
{
    namespace Graphics
    {
        typedef struct PointInt32 PointInt32;

        typedef struct RectInt32 RectInt32;

        typedef struct SizeInt32 SizeInt32;
    }
}
namespace Windows
{
    namespace UI
    {
        typedef struct Color Color;
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Composition
        {
            typedef enum AnimationControllerProgressBehavior AnimationControllerProgressBehavior;

            typedef enum AnimationDelayBehavior AnimationDelayBehavior;

            typedef enum AnimationDirection AnimationDirection;

            typedef enum AnimationIterationBehavior AnimationIterationBehavior;

            typedef enum AnimationPropertyAccessMode AnimationPropertyAccessMode;

            typedef enum AnimationStopBehavior AnimationStopBehavior;

            typedef enum CompositionBackfaceVisibility CompositionBackfaceVisibility;

            typedef enum CompositionBatchTypes CompositionBatchTypes;

            typedef enum CompositionBitmapInterpolationMode CompositionBitmapInterpolationMode;

            typedef enum CompositionBorderMode CompositionBorderMode;

            typedef enum CompositionColorSpace CompositionColorSpace;

            typedef enum CompositionCompositeMode CompositionCompositeMode;

            typedef enum CompositionDropShadowSourcePolicy CompositionDropShadowSourcePolicy;

            typedef enum CompositionEasingFunctionMode CompositionEasingFunctionMode;

            typedef enum CompositionEffectFactoryLoadStatus CompositionEffectFactoryLoadStatus;

            typedef enum CompositionGetValueStatus CompositionGetValueStatus;

            typedef enum CompositionGradientExtendMode CompositionGradientExtendMode;

            typedef enum CompositionMappingMode CompositionMappingMode;

            typedef enum CompositionProjectedShadowDrawOrder CompositionProjectedShadowDrawOrder;

            typedef enum CompositionStretch CompositionStretch;

            typedef enum CompositionStrokeCap CompositionStrokeCap;

            typedef enum CompositionStrokeLineJoin CompositionStrokeLineJoin;

            interface IAmbientLight;

            interface IAmbientLight2;

            interface IAnimationController;

            interface IAnimationControllerStatics;

            interface IAnimationObject;

            interface IAnimationPropertyInfo;

            interface IAnimationPropertyInfo2;

            interface IBackEasingFunction;

            interface IBooleanKeyFrameAnimation;

            interface IBounceEasingFunction;

            interface IBounceScalarNaturalMotionAnimation;

            interface IBounceVector2NaturalMotionAnimation;

            interface IBounceVector3NaturalMotionAnimation;

            interface ICircleEasingFunction;

            interface IColorKeyFrameAnimation;

            interface ICompositionAnimation;

            interface ICompositionAnimation2;

            interface ICompositionAnimation3;

            interface ICompositionAnimation4;

            interface ICompositionAnimationBase;

            interface ICompositionAnimationFactory;

            interface ICompositionAnimationGroup;

            interface ICompositionApiInformationStatics;

            interface ICompositionBackdropBrush;

            interface ICompositionBatchCompletedEventArgs;

            interface ICompositionBrush;

            interface ICompositionBrushFactory;

            interface ICompositionCapabilities;

            interface ICompositionCapabilitiesStatics;

            interface ICompositionClip;

            interface ICompositionClip2;

            interface ICompositionClipFactory;

            interface ICompositionColorBrush;

            interface ICompositionColorGradientStop;

            interface ICompositionColorGradientStopCollection;

            interface ICompositionCommitBatch;

            interface ICompositionContainerShape;

            interface ICompositionDrawingSurface;

            interface ICompositionDrawingSurface2;

            interface ICompositionDrawingSurfaceFactory;

            interface ICompositionEasingFunction;

            interface ICompositionEasingFunctionFactory;

            interface ICompositionEasingFunctionStatics;

            interface ICompositionEffectBrush;

            interface ICompositionEffectFactory;

            interface ICompositionEffectSourceParameter;

            interface ICompositionEffectSourceParameterFactory;

            interface ICompositionEllipseGeometry;

            interface ICompositionGeometricClip;

            interface ICompositionGeometry;

            interface ICompositionGeometryFactory;

            interface ICompositionGradientBrush;

            interface ICompositionGradientBrush2;

            interface ICompositionGradientBrushFactory;

            interface ICompositionGraphicsDevice;

            interface ICompositionGraphicsDevice2;

            interface ICompositionGraphicsDevice3;

            interface ICompositionGraphicsDevice4;

            interface ICompositionLight;

            interface ICompositionLight2;

            interface ICompositionLight3;

            interface ICompositionLightFactory;

            interface ICompositionLineGeometry;

            interface ICompositionLinearGradientBrush;

            interface ICompositionMaskBrush;

            interface ICompositionMipmapSurface;

            interface ICompositionNineGridBrush;

            interface ICompositionNotificationDeferral;

            interface ICompositionObject;

            interface ICompositionObject2;

            interface ICompositionObject3;

            interface ICompositionObject4;

            interface ICompositionObjectFactory;

            interface ICompositionObjectStatics;

            interface ICompositionPath;

            interface ICompositionPathFactory;

            interface ICompositionPathGeometry;

            interface ICompositionProjectedShadow;

            interface ICompositionProjectedShadow2;

            interface ICompositionProjectedShadowCaster;

            interface ICompositionProjectedShadowCaster2;

            interface ICompositionProjectedShadowCasterCollection;

            interface ICompositionProjectedShadowCasterCollectionStatics;

            interface ICompositionProjectedShadowReceiver;

            interface ICompositionProjectedShadowReceiver2;

            interface ICompositionProjectedShadowReceiverUnorderedCollection;

            interface ICompositionPropertySet;

            interface ICompositionPropertySet2;

            interface ICompositionRadialGradientBrush;

            interface ICompositionRectangleGeometry;

            interface ICompositionRoundedRectangleGeometry;

            interface ICompositionScopedBatch;

            interface ICompositionShadow;

            interface ICompositionShadowFactory;

            interface ICompositionShape;

            interface ICompositionShapeFactory;

            interface ICompositionSpriteShape;

            interface ICompositionSurface;

            interface ICompositionSurfaceBrush;

            interface ICompositionSurfaceBrush2;

            interface ICompositionSurfaceBrush3;

            interface ICompositionSurfaceFacade;

            interface ICompositionTransform;

            interface ICompositionTransformFactory;

            interface ICompositionViewBox;

            interface ICompositionVirtualDrawingSurface;

            interface ICompositionVirtualDrawingSurfaceFactory;

            interface ICompositionVisualSurface;

            interface ICompositor;

            interface ICompositor2;

            interface ICompositor4;

            interface ICompositor5;

            interface ICompositor6;

            interface ICompositor7;

            interface ICompositorStatics;

            interface ICompositorWithProjectedShadow;

            interface ICompositorWithRadialGradient;

            interface ICompositorWithVisualSurface;

            interface IContainerVisual;

            interface IContainerVisualFactory;

            interface ICubicBezierEasingFunction;

            interface IDistantLight;

            interface IDistantLight2;

            interface IDropShadow;

            interface IDropShadow2;

            interface IElasticEasingFunction;

            interface IExponentialEasingFunction;

            interface IExpressionAnimation;

            interface IImplicitAnimationCollection;

            interface IInsetClip;

            interface IKeyFrameAnimation;

            interface IKeyFrameAnimation2;

            interface IKeyFrameAnimation3;

            interface IKeyFrameAnimationFactory;

            interface ILayerVisual;

            interface ILayerVisual2;

            interface ILinearEasingFunction;

            interface INaturalMotionAnimation;

            interface INaturalMotionAnimationFactory;

            interface IPathKeyFrameAnimation;

            interface IPointLight;

            interface IPointLight2;

            interface IPointLight3;

            interface IPowerEasingFunction;

            interface IQuaternionKeyFrameAnimation;

            interface IRectangleClip;

            interface IRedirectVisual;

            interface IRenderingDeviceReplacedEventArgs;

            interface IScalarKeyFrameAnimation;

            interface IScalarNaturalMotionAnimation;

            interface IScalarNaturalMotionAnimationFactory;

            interface IShapeVisual;

            interface ISineEasingFunction;

            interface ISpotLight;

            interface ISpotLight2;

            interface ISpotLight3;

            interface ISpringScalarNaturalMotionAnimation;

            interface ISpringVector2NaturalMotionAnimation;

            interface ISpringVector3NaturalMotionAnimation;

            interface ISpriteVisual;

            interface ISpriteVisual2;

            interface IStepEasingFunction;

            interface IVector2KeyFrameAnimation;

            interface IVector2NaturalMotionAnimation;

            interface IVector2NaturalMotionAnimationFactory;

            interface IVector3KeyFrameAnimation;

            interface IVector3NaturalMotionAnimation;

            interface IVector3NaturalMotionAnimationFactory;

            interface IVector4KeyFrameAnimation;

            interface IVisual;

            interface IVisual2;

            interface IVisual3;

            interface IVisual4;

            interface IVisualCollection;

            interface IVisualElement;

            interface IVisualElement2;

            interface IVisualFactory;

            interface IVisualUnorderedCollection;

            runtimeclass AmbientLight;

            runtimeclass AnimationController;

            runtimeclass AnimationPropertyInfo;

            runtimeclass BackEasingFunction;

            runtimeclass BooleanKeyFrameAnimation;

            runtimeclass BounceEasingFunction;

            runtimeclass BounceScalarNaturalMotionAnimation;

            runtimeclass BounceVector2NaturalMotionAnimation;

            runtimeclass BounceVector3NaturalMotionAnimation;

            runtimeclass CircleEasingFunction;

            runtimeclass ColorKeyFrameAnimation;

            runtimeclass CompositionAnimation;

            runtimeclass CompositionAnimationGroup;

            runtimeclass CompositionApiInformation;

            runtimeclass CompositionBackdropBrush;

            runtimeclass CompositionBatchCompletedEventArgs;

            runtimeclass CompositionBrush;

            runtimeclass CompositionCapabilities;

            runtimeclass CompositionClip;

            runtimeclass CompositionColorBrush;

            runtimeclass CompositionColorGradientStop;

            runtimeclass CompositionColorGradientStopCollection;

            runtimeclass CompositionCommitBatch;

            runtimeclass CompositionContainerShape;

            runtimeclass CompositionDrawingSurface;

            runtimeclass CompositionEasingFunction;

            runtimeclass CompositionEffectBrush;

            runtimeclass CompositionEffectFactory;

            runtimeclass CompositionEffectSourceParameter;

            runtimeclass CompositionEllipseGeometry;

            runtimeclass CompositionGeometricClip;

            runtimeclass CompositionGeometry;

            runtimeclass CompositionGradientBrush;

            runtimeclass CompositionGraphicsDevice;

            runtimeclass CompositionLight;

            runtimeclass CompositionLineGeometry;

            runtimeclass CompositionLinearGradientBrush;

            runtimeclass CompositionMaskBrush;

            runtimeclass CompositionMipmapSurface;

            runtimeclass CompositionNineGridBrush;

            runtimeclass CompositionNotificationDeferral;

            runtimeclass CompositionObject;

            runtimeclass CompositionPath;

            runtimeclass CompositionPathGeometry;

            runtimeclass CompositionProjectedShadow;

            runtimeclass CompositionProjectedShadowCaster;

            runtimeclass CompositionProjectedShadowCasterCollection;

            runtimeclass CompositionProjectedShadowReceiver;

            runtimeclass CompositionProjectedShadowReceiverUnorderedCollection;

            runtimeclass CompositionPropertySet;

            runtimeclass CompositionRadialGradientBrush;

            runtimeclass CompositionRectangleGeometry;

            runtimeclass CompositionRoundedRectangleGeometry;

            runtimeclass CompositionScopedBatch;

            runtimeclass CompositionShadow;

            runtimeclass CompositionShape;

            runtimeclass CompositionShapeCollection;

            runtimeclass CompositionSpriteShape;

            runtimeclass CompositionStrokeDashArray;

            runtimeclass CompositionSurfaceBrush;

            runtimeclass CompositionTransform;

            runtimeclass CompositionViewBox;

            runtimeclass CompositionVirtualDrawingSurface;

            runtimeclass CompositionVisualSurface;

            runtimeclass Compositor;

            runtimeclass ContainerVisual;

            runtimeclass CubicBezierEasingFunction;

            runtimeclass DistantLight;

            runtimeclass DropShadow;

            runtimeclass ElasticEasingFunction;

            runtimeclass ExponentialEasingFunction;

            runtimeclass ExpressionAnimation;

            runtimeclass ImplicitAnimationCollection;

            runtimeclass InitialValueExpressionCollection;

            runtimeclass InsetClip;

            runtimeclass KeyFrameAnimation;

            runtimeclass LayerVisual;

            runtimeclass LinearEasingFunction;

            runtimeclass NaturalMotionAnimation;

            runtimeclass PathKeyFrameAnimation;

            runtimeclass PointLight;

            runtimeclass PowerEasingFunction;

            runtimeclass QuaternionKeyFrameAnimation;

            runtimeclass RectangleClip;

            runtimeclass RedirectVisual;

            runtimeclass RenderingDeviceReplacedEventArgs;

            runtimeclass ScalarKeyFrameAnimation;

            runtimeclass ScalarNaturalMotionAnimation;

            runtimeclass ShapeVisual;

            runtimeclass SineEasingFunction;

            runtimeclass SpotLight;

            runtimeclass SpringScalarNaturalMotionAnimation;

            runtimeclass SpringVector2NaturalMotionAnimation;

            runtimeclass SpringVector3NaturalMotionAnimation;

            runtimeclass SpriteVisual;

            runtimeclass StepEasingFunction;

            runtimeclass Vector2KeyFrameAnimation;

            runtimeclass Vector2NaturalMotionAnimation;

            runtimeclass Vector3KeyFrameAnimation;

            runtimeclass Vector3NaturalMotionAnimation;

            runtimeclass Vector4KeyFrameAnimation;

            runtimeclass Visual;

            runtimeclass VisualCollection;

            runtimeclass VisualUnorderedCollection;
        }
    }
}

// Generic instantiations
namespace Microsoft
{
    namespace UI
    {
        namespace Composition
        {
            declare
            {
                interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Composition.CompositionAnimation*>;

                interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Composition.CompositionColorGradientStop*>;

                interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Composition.CompositionProjectedShadowCaster*>;

                interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Composition.CompositionProjectedShadowReceiver*>;

                interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Composition.CompositionShape*>;

                interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Composition.Visual*>;

                interface Windows.Foundation.Collections.IIterable<Windows.Foundation.Collections.IKeyValuePair<HSTRING, Microsoft.UI.Composition.ICompositionAnimationBase*>*>;

                interface Windows.Foundation.Collections.IIterator<Microsoft.UI.Composition.CompositionAnimation*>;

                interface Windows.Foundation.Collections.IIterator<Microsoft.UI.Composition.CompositionColorGradientStop*>;

                interface Windows.Foundation.Collections.IIterator<Microsoft.UI.Composition.CompositionProjectedShadowCaster*>;

                interface Windows.Foundation.Collections.IIterator<Microsoft.UI.Composition.CompositionProjectedShadowReceiver*>;

                interface Windows.Foundation.Collections.IIterator<Microsoft.UI.Composition.CompositionShape*>;

                interface Windows.Foundation.Collections.IIterator<Microsoft.UI.Composition.Visual*>;

                interface Windows.Foundation.Collections.IIterator<Windows.Foundation.Collections.IKeyValuePair<HSTRING, Microsoft.UI.Composition.ICompositionAnimationBase*>*>;

                interface Windows.Foundation.Collections.IKeyValuePair<HSTRING, Microsoft.UI.Composition.ICompositionAnimationBase*>;

                interface Windows.Foundation.Collections.IMapView<HSTRING, Microsoft.UI.Composition.ICompositionAnimationBase*>;

                interface Windows.Foundation.Collections.IMap<HSTRING, Microsoft.UI.Composition.ICompositionAnimationBase*>;

                interface Windows.Foundation.Collections.IVectorView<Microsoft.UI.Composition.CompositionColorGradientStop*>;

                interface Windows.Foundation.Collections.IVectorView<Microsoft.UI.Composition.CompositionShape*>;

                interface Windows.Foundation.Collections.IVector<Microsoft.UI.Composition.CompositionColorGradientStop*>;

                interface Windows.Foundation.Collections.IVector<Microsoft.UI.Composition.CompositionShape*>;

                interface Windows.Foundation.IAsyncOperation<Microsoft.UI.Composition.ICompositionSurface*>;

                interface Windows.Foundation.TypedEventHandler<IInspectable*, Microsoft.UI.Composition.CompositionBatchCompletedEventArgs*>;

                interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Composition.CompositionCapabilities*, IInspectable*>;

                interface Windows.Foundation.TypedEventHandler<Microsoft.UI.Composition.CompositionGraphicsDevice*, Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs*>;
            }
        }
    }
}

// Type definition
namespace Microsoft
{
    namespace UI
    {
        namespace Composition
        {
            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            enum AnimationControllerProgressBehavior
            {
                Default_d           = 0
            };

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            enum AnimationDelayBehavior
            {
                SetInitialValueAfterDelay_d  = 0
            };

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            enum AnimationDirection
            {
                Normal_d           = 0
            };

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            enum AnimationIterationBehavior
            {
                Count_d = 0
            };

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            enum AnimationPropertyAccessMode
            {
                None_d = 0
            };

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            enum AnimationStopBehavior
            {
                LeaveCurrentValue_d = 0
            };

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            enum CompositionBackfaceVisibility
            {
                Inherit_d = 0
            };

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [flags]
            enum CompositionBatchTypes
            {
                None_d = 0x0
            };

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            enum CompositionBitmapInterpolationMode
            {
                NearestNeighbor_d = 0
            };

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            enum CompositionBorderMode
            {
                Inherit_d = 0
            };

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            enum CompositionColorSpace
            {
                Auto_d = 0
            };

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            enum CompositionCompositeMode
            {
                Inherit_d = 0
            };

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            enum CompositionDropShadowSourcePolicy
            {
                Default_d = 0
            };

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            enum CompositionEasingFunctionMode
            {
                In    = 0,
                Out   = 1,
                InOut = 2
            };

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            enum CompositionEffectFactoryLoadStatus
            {
                Success_d = 0
            };

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            enum CompositionGetValueStatus
            {
                Succeeded_d = 0
            };

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            enum CompositionGradientExtendMode
            {
                Clamp_d = 0
            };

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            enum CompositionMappingMode
            {
                Absolute_d = 0
            };

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            enum CompositionProjectedShadowDrawOrder
            {
                PostChildren = 0,
                PreChildren  = 1
            };

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            enum CompositionStretch
            {
                None_d = 0
            };

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            enum CompositionStrokeCap
            {
                Flat_d = 0
            };

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            enum CompositionStrokeLineJoin
            {
                Miter_d = 0
            };

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.AmbientLight)]
            [uuid(4540525E-B70D-5A14-BBFA-63BEF42313C7)]
            interface IAmbientLight : IInspectable
            {
                [propget] HRESULT Color([out] [retval] Windows.UI.Color* value);
                [propput] HRESULT Color([in] Windows.UI.Color value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.AmbientLight)]
            [uuid(3356F963-040C-54D4-9DFC-B61C51AAADD1)]
            interface IAmbientLight2 : IInspectable
            {
                [propget] HRESULT Intensity([out] [retval] FLOAT* value);
                [propput] HRESULT Intensity([in] FLOAT value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.AnimationController)]
            [uuid(BD0F88A8-A415-5322-8C3D-1A6D9192754F)]
            interface IAnimationController : IInspectable
            {
                [propget] HRESULT PlaybackRate([out] [retval] FLOAT* value);
                [propput] HRESULT PlaybackRate([in] FLOAT value);
                [propget] HRESULT Progress([out] [retval] FLOAT* value);
                [propput] HRESULT Progress([in] FLOAT value);
                [propget] HRESULT ProgressBehavior([out] [retval] Microsoft.UI.Composition.AnimationControllerProgressBehavior* value);
                [propput] HRESULT ProgressBehavior([in] Microsoft.UI.Composition.AnimationControllerProgressBehavior value);
                HRESULT Pause();
                HRESULT Resume();
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.AnimationController)]
            [uuid(B63B0FB6-286B-57AF-B096-16066D43DC00)]
            interface IAnimationControllerStatics : IInspectable
            {
                [propget] HRESULT MaxPlaybackRate([out] [retval] FLOAT* value);
                [propget] HRESULT MinPlaybackRate([out] [retval] FLOAT* value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [uuid(8F56119D-B96D-58D0-9916-D1C5E390F890)]
            interface IAnimationObject : IInspectable
            {
                HRESULT PopulatePropertyInfo([in] HSTRING propertyName, [in] Microsoft.UI.Composition.AnimationPropertyInfo* propertyInfo);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.AnimationPropertyInfo)]
            [uuid(3D721A2B-9CCD-57BD-B6C2-CE9E04AE3606)]
            interface IAnimationPropertyInfo : IInspectable
            {
                [propget] HRESULT AccessMode([out] [retval] Microsoft.UI.Composition.AnimationPropertyAccessMode* value);
                [propput] HRESULT AccessMode([in] Microsoft.UI.Composition.AnimationPropertyAccessMode value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.AnimationPropertyInfo)]
            [uuid(ED14FB09-DE28-540D-9311-80CFDCC97338)]
            interface IAnimationPropertyInfo2 : IInspectable
            {
                HRESULT GetResolvedCompositionObject([out] [retval] Microsoft.UI.Composition.CompositionObject** result);
                HRESULT GetResolvedCompositionObjectProperty([out] [retval] HSTRING* result);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.BackEasingFunction)]
            [uuid(27C75BAB-317A-5362-BF25-FFFBB98A51B9)]
            interface IBackEasingFunction : IInspectable
            {
                [propget] HRESULT Mode([out] [retval] Microsoft.UI.Composition.CompositionEasingFunctionMode* value);
                [propget] HRESULT Amplitude([out] [retval] FLOAT* value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.BooleanKeyFrameAnimation)]
            [uuid(7FE485E9-E874-5FF3-8DDC-826C3818BFC3)]
            interface IBooleanKeyFrameAnimation : IInspectable
            {
                [overload("InsertKeyFrame")] HRESULT InsertKeyFrame([in] FLOAT normalizedProgressKey, [in] boolean value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.BounceEasingFunction)]
            [uuid(FA11F3C0-697B-562F-AF46-C6AF666B6EC4)]
            interface IBounceEasingFunction : IInspectable
            {
                [propget] HRESULT Mode([out] [retval] Microsoft.UI.Composition.CompositionEasingFunctionMode* value);
                [propget] HRESULT Bounces([out] [retval] INT32* value);
                [propget] HRESULT Bounciness([out] [retval] FLOAT* value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.BounceScalarNaturalMotionAnimation)]
            [uuid(1C0C4B76-C4D6-5DD9-8DD6-DBE35C7B7E55)]
            interface IBounceScalarNaturalMotionAnimation : IInspectable
            {
                [propget] HRESULT Acceleration([out] [retval] FLOAT* value);
                [propput] HRESULT Acceleration([in] FLOAT value);
                [propget] HRESULT Restitution([out] [retval] FLOAT* value);
                [propput] HRESULT Restitution([in] FLOAT value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.BounceVector2NaturalMotionAnimation)]
            [uuid(EC528D1F-22E2-573E-AB87-757071E50012)]
            interface IBounceVector2NaturalMotionAnimation : IInspectable
            {
                [propget] HRESULT Acceleration([out] [retval] FLOAT* value);
                [propput] HRESULT Acceleration([in] FLOAT value);
                [propget] HRESULT Restitution([out] [retval] FLOAT* value);
                [propput] HRESULT Restitution([in] FLOAT value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.BounceVector3NaturalMotionAnimation)]
            [uuid(E3E2EE98-1211-586D-8A6D-FEA5EFC3957F)]
            interface IBounceVector3NaturalMotionAnimation : IInspectable
            {
                [propget] HRESULT Acceleration([out] [retval] FLOAT* value);
                [propput] HRESULT Acceleration([in] FLOAT value);
                [propget] HRESULT Restitution([out] [retval] FLOAT* value);
                [propput] HRESULT Restitution([in] FLOAT value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CircleEasingFunction)]
            [uuid(414B172C-BF27-5EAD-93E0-35915322DB2C)]
            interface ICircleEasingFunction : IInspectable
            {
                [propget] HRESULT Mode([out] [retval] Microsoft.UI.Composition.CompositionEasingFunctionMode* value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.ColorKeyFrameAnimation)]
            [uuid(F0237928-353C-5867-BE93-71547E989F44)]
            interface IColorKeyFrameAnimation : IInspectable
            {
                [propget] HRESULT InterpolationColorSpace([out] [retval] Microsoft.UI.Composition.CompositionColorSpace* value);
                [propput] HRESULT InterpolationColorSpace([in] Microsoft.UI.Composition.CompositionColorSpace value);
                [overload("InsertKeyFrame")] HRESULT InsertKeyFrame([in] FLOAT normalizedProgressKey, [in] Windows.UI.Color value);
                [overload("InsertKeyFrame")] HRESULT InsertKeyFrameWithEasingFunction([in] FLOAT normalizedProgressKey, [in] Windows.UI.Color value, [in] Microsoft.UI.Composition.CompositionEasingFunction* easingFunction);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionAnimation)]
            [uuid(A829CCC8-6FDE-5B90-AD37-EFD307E1B631)]
            interface ICompositionAnimation : IInspectable
            {
                HRESULT ClearAllParameters();
                HRESULT ClearParameter([in] HSTRING key);
                HRESULT SetColorParameter([in] HSTRING key, [in] Windows.UI.Color value);
                HRESULT SetMatrix3x2Parameter([in] HSTRING key, [in] Windows.Foundation.Numerics.Matrix3x2 value);
                HRESULT SetMatrix4x4Parameter([in] HSTRING key, [in] Windows.Foundation.Numerics.Matrix4x4 value);
                HRESULT SetQuaternionParameter([in] HSTRING key, [in] Windows.Foundation.Numerics.Quaternion value);
                HRESULT SetReferenceParameter([in] HSTRING key, [in] Microsoft.UI.Composition.CompositionObject* compositionObject);
                HRESULT SetScalarParameter([in] HSTRING key, [in] FLOAT value);
                HRESULT SetVector2Parameter([in] HSTRING key, [in] Windows.Foundation.Numerics.Vector2 value);
                HRESULT SetVector3Parameter([in] HSTRING key, [in] Windows.Foundation.Numerics.Vector3 value);
                HRESULT SetVector4Parameter([in] HSTRING key, [in] Windows.Foundation.Numerics.Vector4 value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionAnimation)]
            [uuid(0926EB58-8965-5C74-BDAC-852EBB5E8542)]
            interface ICompositionAnimation2 : IInspectable
            {
                HRESULT SetBooleanParameter([in] HSTRING key, [in] boolean value);
                [propget] HRESULT Target([out] [retval] HSTRING* value);
                [propput] HRESULT Target([in] HSTRING value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionAnimation)]
            [uuid(60063F53-4167-5914-A2F1-9EFCC2F86C76)]
            interface ICompositionAnimation3 : IInspectable
            {
                [propget] HRESULT InitialValueExpressions([out] [retval] Microsoft.UI.Composition.InitialValueExpressionCollection** value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionAnimation)]
            [uuid(C4101447-DFE4-597F-B5BC-96443F5D18A1)]
            interface ICompositionAnimation4 : IInspectable
            {
                HRESULT SetExpressionReferenceParameter([in] HSTRING parameterName, [in] Microsoft.UI.Composition.IAnimationObject* source);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [uuid(A77C0E5A-F059-4E85-BCEF-C068694CEC78)]
            interface ICompositionAnimationBase : IInspectable
            {
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionAnimation)]
            [uuid(2ED278CA-4CCA-5F7F-8D47-F930552A7769)]
            interface ICompositionAnimationFactory : IInspectable
            {
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionAnimationGroup)]
            [uuid(A51CDCAC-B972-5AE7-81D0-9D91C71ECB7A)]
            interface ICompositionAnimationGroup : IInspectable
            {
                [propget] HRESULT Count([out] [retval] INT32* value);
                HRESULT Add([in] Microsoft.UI.Composition.CompositionAnimation* value);
                HRESULT Remove([in] Microsoft.UI.Composition.CompositionAnimation* value);
                HRESULT RemoveAll();
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionApiInformation)]
            [uuid(85260ED3-365B-5E70-B79A-F9F1D10FA4B5)]
            interface ICompositionApiInformationStatics : IInspectable
            {
                [propget] HRESULT ApiVersion([out] [retval] UINT64* value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionBackdropBrush)]
            [uuid(6C866BB3-172A-570C-82AC-BF9848D99A59)]
            interface ICompositionBackdropBrush : IInspectable
            {
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionBatchCompletedEventArgs)]
            [uuid(AC400334-4358-5FB0-BFC3-117FE581998F)]
            interface ICompositionBatchCompletedEventArgs : IInspectable
            {
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionBrush)]
            [uuid(483924E7-99A5-5377-968B-DEC6D40BBCCD)]
            interface ICompositionBrush : IInspectable
            {
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionBrush)]
            [uuid(ABF2B354-7130-53D9-8324-365D7E02EDE7)]
            interface ICompositionBrushFactory : IInspectable
            {
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionCapabilities)]
            [uuid(7689BF12-75C0-52EA-81CB-463ED1C16C45)]
            interface ICompositionCapabilities : IInspectable
            {
                HRESULT AreEffectsSupported([out] [retval] boolean* result);
                HRESULT AreEffectsFast([out] [retval] boolean* result);
                [eventadd] HRESULT Changed([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Composition.CompositionCapabilities*, IInspectable*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT Changed([in] EventRegistrationToken token);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionCapabilities)]
            [uuid(6AB5C5B7-F23D-5B7A-B44D-D87A54AF8FE4)]
            interface ICompositionCapabilitiesStatics : IInspectable
            {
                HRESULT GetForCurrentView([out] [retval] Microsoft.UI.Composition.CompositionCapabilities** result);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionClip)]
            [uuid(B66B55CB-B5A5-5BEE-8972-AE78233CB34C)]
            interface ICompositionClip : IInspectable
            {
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionClip)]
            [uuid(CDF6BF80-AFD7-57DC-8148-6CCBBB5D78BB)]
            interface ICompositionClip2 : IInspectable
            {
                [propget] HRESULT AnchorPoint([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propput] HRESULT AnchorPoint([in] Windows.Foundation.Numerics.Vector2 value);
                [propget] HRESULT CenterPoint([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propput] HRESULT CenterPoint([in] Windows.Foundation.Numerics.Vector2 value);
                [propget] HRESULT Offset([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propput] HRESULT Offset([in] Windows.Foundation.Numerics.Vector2 value);
                [propget] HRESULT RotationAngle([out] [retval] FLOAT* value);
                [propput] HRESULT RotationAngle([in] FLOAT value);
                [propget] HRESULT RotationAngleInDegrees([out] [retval] FLOAT* value);
                [propput] HRESULT RotationAngleInDegrees([in] FLOAT value);
                [propget] HRESULT Scale([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propput] HRESULT Scale([in] Windows.Foundation.Numerics.Vector2 value);
                [propget] HRESULT TransformMatrix([out] [retval] Windows.Foundation.Numerics.Matrix3x2* value);
                [propput] HRESULT TransformMatrix([in] Windows.Foundation.Numerics.Matrix3x2 value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionClip)]
            [uuid(611DEC65-D302-52BC-92AB-A295BD141AE4)]
            interface ICompositionClipFactory : IInspectable
            {
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionColorBrush)]
            [uuid(3F8FFB69-3E71-55A7-8E79-F27A214C56AE)]
            interface ICompositionColorBrush : IInspectable
            {
                [propget] HRESULT Color([out] [retval] Windows.UI.Color* value);
                [propput] HRESULT Color([in] Windows.UI.Color value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionColorGradientStop)]
            [uuid(868030D8-C5C0-5DD8-A765-E32CD3497AA9)]
            interface ICompositionColorGradientStop : IInspectable
            {
                [propget] HRESULT Color([out] [retval] Windows.UI.Color* value);
                [propput] HRESULT Color([in] Windows.UI.Color value);
                [propget] HRESULT Offset([out] [retval] FLOAT* value);
                [propput] HRESULT Offset([in] FLOAT value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionColorGradientStopCollection)]
            [uuid(4794CB29-CE9D-5837-9FC9-847DF3E197DE)]
            interface ICompositionColorGradientStopCollection : IInspectable
            {
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionCommitBatch)]
            [uuid(C4550FA8-A7F2-5259-BF74-33B2F5240A28)]
            interface ICompositionCommitBatch : IInspectable
            {
                [propget] HRESULT IsActive([out] [retval] boolean* value);
                [propget] HRESULT IsEnded([out] [retval] boolean* value);
                [eventadd] HRESULT Completed([in] Windows.Foundation.TypedEventHandler<IInspectable*, Microsoft.UI.Composition.CompositionBatchCompletedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT Completed([in] EventRegistrationToken token);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionContainerShape)]
            [uuid(064AABD5-2DAB-52D3-824B-C72456540F29)]
            interface ICompositionContainerShape : IInspectable
            {
                [propget] HRESULT Shapes([out] [retval] Microsoft.UI.Composition.CompositionShapeCollection** value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionDrawingSurface)]
            [uuid(216CAB97-A2EE-5A29-AD6B-0BC2DF4A1504)]
            interface ICompositionDrawingSurface : IInspectable
            {
                [propget] HRESULT AlphaMode([out] [retval] Microsoft.Graphics.DirectX.DirectXAlphaMode* value);
                [propget] HRESULT PixelFormat([out] [retval] Microsoft.Graphics.DirectX.DirectXPixelFormat* value);
                [propget] HRESULT Size([out] [retval] Windows.Foundation.Size* value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionDrawingSurface)]
            [uuid(6BE6F652-BEC8-5ADF-A6AF-5ACFC00A968E)]
            interface ICompositionDrawingSurface2 : IInspectable
            {
                [propget] HRESULT SizeInt32([out] [retval] Windows.Graphics.SizeInt32* value);
                HRESULT Resize([in] Windows.Graphics.SizeInt32 sizePixels);
                [overload("Scroll")] HRESULT Scroll([in] Windows.Graphics.PointInt32 offset);
                [overload("Scroll")] HRESULT ScrollRect([in] Windows.Graphics.PointInt32 offset, [in] Windows.Graphics.RectInt32 scrollRect);
                [overload("ScrollWithClip")] HRESULT ScrollWithClip([in] Windows.Graphics.PointInt32 offset, [in] Windows.Graphics.RectInt32 clipRect);
                [overload("ScrollWithClip")] HRESULT ScrollRectWithClip([in] Windows.Graphics.PointInt32 offset, [in] Windows.Graphics.RectInt32 clipRect, [in] Windows.Graphics.RectInt32 scrollRect);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionDrawingSurface)]
            [uuid(4791E19A-C83B-58B0-AC86-DFC58494F5F9)]
            interface ICompositionDrawingSurfaceFactory : IInspectable
            {
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionEasingFunction)]
            [uuid(8E1ECD0D-57D8-5BC9-9BCD-E43D0DD733C4)]
            interface ICompositionEasingFunction : IInspectable
            {
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionEasingFunction)]
            [uuid(7D7D32C3-574B-5620-9902-DB426851802F)]
            interface ICompositionEasingFunctionFactory : IInspectable
            {
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionEasingFunction)]
            [uuid(9D4B87FF-6DCA-5CE2-B69C-E52705B0FEF4)]
            interface ICompositionEasingFunctionStatics : IInspectable
            {
                HRESULT CreateCubicBezierEasingFunction([in] Microsoft.UI.Composition.Compositor* owner, [in] Windows.Foundation.Numerics.Vector2 controlPoint1, [in] Windows.Foundation.Numerics.Vector2 controlPoint2, [out] [retval] Microsoft.UI.Composition.CubicBezierEasingFunction** result);
                HRESULT CreateLinearEasingFunction([in] Microsoft.UI.Composition.Compositor* owner, [out] [retval] Microsoft.UI.Composition.LinearEasingFunction** result);
                [overload("CreateStepEasingFunction")] HRESULT CreateStepEasingFunction([in] Microsoft.UI.Composition.Compositor* owner, [out] [retval] Microsoft.UI.Composition.StepEasingFunction** result);
                [overload("CreateStepEasingFunction")] HRESULT CreateStepEasingFunctionWithStepCount([in] Microsoft.UI.Composition.Compositor* owner, [in] INT32 stepCount, [out] [retval] Microsoft.UI.Composition.StepEasingFunction** result);
                HRESULT CreateBackEasingFunction([in] Microsoft.UI.Composition.Compositor* owner, [in] Microsoft.UI.Composition.CompositionEasingFunctionMode mode, [in] FLOAT amplitude, [out] [retval] Microsoft.UI.Composition.BackEasingFunction** result);
                HRESULT CreateBounceEasingFunction([in] Microsoft.UI.Composition.Compositor* owner, [in] Microsoft.UI.Composition.CompositionEasingFunctionMode mode, [in] INT32 bounces, [in] FLOAT bounciness, [out] [retval] Microsoft.UI.Composition.BounceEasingFunction** result);
                HRESULT CreateCircleEasingFunction([in] Microsoft.UI.Composition.Compositor* owner, [in] Microsoft.UI.Composition.CompositionEasingFunctionMode mode, [out] [retval] Microsoft.UI.Composition.CircleEasingFunction** result);
                HRESULT CreateElasticEasingFunction([in] Microsoft.UI.Composition.Compositor* owner, [in] Microsoft.UI.Composition.CompositionEasingFunctionMode mode, [in] INT32 oscillations, [in] FLOAT springiness, [out] [retval] Microsoft.UI.Composition.ElasticEasingFunction** result);
                HRESULT CreateExponentialEasingFunction([in] Microsoft.UI.Composition.Compositor* owner, [in] Microsoft.UI.Composition.CompositionEasingFunctionMode mode, [in] FLOAT exponent, [out] [retval] Microsoft.UI.Composition.ExponentialEasingFunction** result);
                HRESULT CreatePowerEasingFunction([in] Microsoft.UI.Composition.Compositor* owner, [in] Microsoft.UI.Composition.CompositionEasingFunctionMode mode, [in] FLOAT power, [out] [retval] Microsoft.UI.Composition.PowerEasingFunction** result);
                HRESULT CreateSineEasingFunction([in] Microsoft.UI.Composition.Compositor* owner, [in] Microsoft.UI.Composition.CompositionEasingFunctionMode mode, [out] [retval] Microsoft.UI.Composition.SineEasingFunction** result);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionEffectBrush)]
            [uuid(62E0BBAB-1F45-5A44-9DDF-F0C38A02ED85)]
            interface ICompositionEffectBrush : IInspectable
            {
                HRESULT GetSourceParameter([in] HSTRING name, [out] [retval] Microsoft.UI.Composition.CompositionBrush** result);
                HRESULT SetSourceParameter([in] HSTRING name, [in] Microsoft.UI.Composition.CompositionBrush* source);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionEffectFactory)]
            [uuid(C50F407A-0231-5ED2-B7A7-CA66D3E14B3B)]
            interface ICompositionEffectFactory : IInspectable
            {
                HRESULT CreateBrush([out] [retval] Microsoft.UI.Composition.CompositionEffectBrush** result);
                [propget] HRESULT ExtendedError([out] [retval] HRESULT* value);
                [propget] HRESULT LoadStatus([out] [retval] Microsoft.UI.Composition.CompositionEffectFactoryLoadStatus* value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionEffectSourceParameter)]
            [uuid(BECE3367-5704-59F7-BE8C-D6293AF9C95F)]
            interface ICompositionEffectSourceParameter : IInspectable
            {
                [propget] HRESULT Name([out] [retval] HSTRING* value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionEffectSourceParameter)]
            [uuid(26185954-4489-5D0E-AE4D-7BC4BBBC6161)]
            interface ICompositionEffectSourceParameterFactory : IInspectable
            {
                HRESULT Create([in] HSTRING name, [out] [retval] Microsoft.UI.Composition.CompositionEffectSourceParameter** value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionEllipseGeometry)]
            [uuid(F2A21042-7A57-58C1-8B47-8BC8B21D3AA0)]
            interface ICompositionEllipseGeometry : IInspectable
            {
                [propget] HRESULT Center([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propput] HRESULT Center([in] Windows.Foundation.Numerics.Vector2 value);
                [propget] HRESULT Radius([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propput] HRESULT Radius([in] Windows.Foundation.Numerics.Vector2 value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionGeometricClip)]
            [uuid(E3C0A8C5-5297-5D69-8B91-F5330BB1CB27)]
            interface ICompositionGeometricClip : IInspectable
            {
                [propget] HRESULT Geometry([out] [retval] Microsoft.UI.Composition.CompositionGeometry** value);
                [propput] HRESULT Geometry([in] Microsoft.UI.Composition.CompositionGeometry* value);
                [propget] HRESULT ViewBox([out] [retval] Microsoft.UI.Composition.CompositionViewBox** value);
                [propput] HRESULT ViewBox([in] Microsoft.UI.Composition.CompositionViewBox* value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionGeometry)]
            [uuid(4E40BDB2-450B-5A81-9E9B-149417980CC4)]
            interface ICompositionGeometry : IInspectable
            {
                [propget] HRESULT TrimEnd([out] [retval] FLOAT* value);
                [propput] HRESULT TrimEnd([in] FLOAT value);
                [propget] HRESULT TrimOffset([out] [retval] FLOAT* value);
                [propput] HRESULT TrimOffset([in] FLOAT value);
                [propget] HRESULT TrimStart([out] [retval] FLOAT* value);
                [propput] HRESULT TrimStart([in] FLOAT value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionGeometry)]
            [uuid(B2FB802B-C691-5554-8312-9C6D358D6B9E)]
            interface ICompositionGeometryFactory : IInspectable
            {
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionGradientBrush)]
            [uuid(9165D1FB-C738-5F44-ADDC-309EE071D588)]
            interface ICompositionGradientBrush : IInspectable
            {
                [propget] HRESULT AnchorPoint([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propput] HRESULT AnchorPoint([in] Windows.Foundation.Numerics.Vector2 value);
                [propget] HRESULT CenterPoint([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propput] HRESULT CenterPoint([in] Windows.Foundation.Numerics.Vector2 value);
                [propget] HRESULT ColorStops([out] [retval] Microsoft.UI.Composition.CompositionColorGradientStopCollection** value);
                [propget] HRESULT ExtendMode([out] [retval] Microsoft.UI.Composition.CompositionGradientExtendMode* value);
                [propput] HRESULT ExtendMode([in] Microsoft.UI.Composition.CompositionGradientExtendMode value);
                [propget] HRESULT InterpolationSpace([out] [retval] Microsoft.UI.Composition.CompositionColorSpace* value);
                [propput] HRESULT InterpolationSpace([in] Microsoft.UI.Composition.CompositionColorSpace value);
                [propget] HRESULT Offset([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propput] HRESULT Offset([in] Windows.Foundation.Numerics.Vector2 value);
                [propget] HRESULT RotationAngle([out] [retval] FLOAT* value);
                [propput] HRESULT RotationAngle([in] FLOAT value);
                [propget] HRESULT RotationAngleInDegrees([out] [retval] FLOAT* value);
                [propput] HRESULT RotationAngleInDegrees([in] FLOAT value);
                [propget] HRESULT Scale([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propput] HRESULT Scale([in] Windows.Foundation.Numerics.Vector2 value);
                [propget] HRESULT TransformMatrix([out] [retval] Windows.Foundation.Numerics.Matrix3x2* value);
                [propput] HRESULT TransformMatrix([in] Windows.Foundation.Numerics.Matrix3x2 value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionGradientBrush)]
            [uuid(03E9EDF3-EE3D-58FC-8C0B-95E4B6060A94)]
            interface ICompositionGradientBrush2 : IInspectable
            {
                [propget] HRESULT MappingMode([out] [retval] Microsoft.UI.Composition.CompositionMappingMode* value);
                [propput] HRESULT MappingMode([in] Microsoft.UI.Composition.CompositionMappingMode value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionGradientBrush)]
            [uuid(B043B155-4B40-590D-A0D9-F8C1A7E0C88F)]
            interface ICompositionGradientBrushFactory : IInspectable
            {
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionGraphicsDevice)]
            [uuid(3D47E3F5-F76C-5F1F-88C0-54A5F2A090D6)]
            interface ICompositionGraphicsDevice : IInspectable
            {
                HRESULT CreateDrawingSurface([in] Windows.Foundation.Size sizePixels, [in] Microsoft.Graphics.DirectX.DirectXPixelFormat pixelFormat, [in] Microsoft.Graphics.DirectX.DirectXAlphaMode alphaMode, [out] [retval] Microsoft.UI.Composition.CompositionDrawingSurface** result);
                [eventadd] HRESULT RenderingDeviceReplaced([in] Windows.Foundation.TypedEventHandler<Microsoft.UI.Composition.CompositionGraphicsDevice*, Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT RenderingDeviceReplaced([in] EventRegistrationToken token);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionGraphicsDevice)]
            [uuid(FFD56707-1C7A-5DA0-AA1A-49CB935B5DCA)]
            interface ICompositionGraphicsDevice2 : IInspectable
            {
                HRESULT CreateDrawingSurface2([in] Windows.Graphics.SizeInt32 sizePixels, [in] Microsoft.Graphics.DirectX.DirectXPixelFormat pixelFormat, [in] Microsoft.Graphics.DirectX.DirectXAlphaMode alphaMode, [out] [retval] Microsoft.UI.Composition.CompositionDrawingSurface** result);
                HRESULT CreateVirtualDrawingSurface([in] Windows.Graphics.SizeInt32 sizePixels, [in] Microsoft.Graphics.DirectX.DirectXPixelFormat pixelFormat, [in] Microsoft.Graphics.DirectX.DirectXAlphaMode alphaMode, [out] [retval] Microsoft.UI.Composition.CompositionVirtualDrawingSurface** result);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionGraphicsDevice)]
            [uuid(FBBEF487-D5A4-5DB2-BF3E-9F488E659D11)]
            interface ICompositionGraphicsDevice3 : IInspectable
            {
                HRESULT CreateMipmapSurface([in] Windows.Graphics.SizeInt32 sizePixels, [in] Microsoft.Graphics.DirectX.DirectXPixelFormat pixelFormat, [in] Microsoft.Graphics.DirectX.DirectXAlphaMode alphaMode, [out] [retval] Microsoft.UI.Composition.CompositionMipmapSurface** result);
                HRESULT Trim();
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionGraphicsDevice)]
            [uuid(2B295C04-7B2E-5B0E-9762-2992313B700C)]
            interface ICompositionGraphicsDevice4 : IInspectable
            {
                HRESULT CaptureAsync([in] Microsoft.UI.Composition.Visual* captureVisual, [in] Windows.Graphics.SizeInt32 size, [in] Microsoft.Graphics.DirectX.DirectXPixelFormat pixelFormat, [in] Microsoft.Graphics.DirectX.DirectXAlphaMode alphaMode, [in] FLOAT sdrBoost, [out] [retval] Windows.Foundation.IAsyncOperation<Microsoft.UI.Composition.ICompositionSurface*>** operation);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionLight)]
            [uuid(6D633E77-A6B8-5A2D-8235-E0C380C3B47B)]
            interface ICompositionLight : IInspectable
            {
                [propget] HRESULT Targets([out] [retval] Microsoft.UI.Composition.VisualUnorderedCollection** value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionLight)]
            [uuid(0BB940A4-05EF-5920-BAE1-918B36D44380)]
            interface ICompositionLight2 : IInspectable
            {
                [propget] HRESULT ExclusionsFromTargets([out] [retval] Microsoft.UI.Composition.VisualUnorderedCollection** value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionLight)]
            [uuid(95CE4859-DD55-5C38-A3EB-13D053CEBB1E)]
            interface ICompositionLight3 : IInspectable
            {
                [propget] HRESULT IsEnabled([out] [retval] boolean* value);
                [propput] HRESULT IsEnabled([in] boolean value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionLight)]
            [uuid(CB29CAED-9245-51A6-BA56-ADDBAEFA54CC)]
            interface ICompositionLightFactory : IInspectable
            {
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionLineGeometry)]
            [uuid(489F9382-C186-5936-8946-C4F927E844AA)]
            interface ICompositionLineGeometry : IInspectable
            {
                [propget] HRESULT Start([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propput] HRESULT Start([in] Windows.Foundation.Numerics.Vector2 value);
                [propget] HRESULT End([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propput] HRESULT End([in] Windows.Foundation.Numerics.Vector2 value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionLinearGradientBrush)]
            [uuid(F726FB52-270C-58B1-A902-89576772DEDC)]
            interface ICompositionLinearGradientBrush : IInspectable
            {
                [propget] HRESULT EndPoint([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propput] HRESULT EndPoint([in] Windows.Foundation.Numerics.Vector2 value);
                [propget] HRESULT StartPoint([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propput] HRESULT StartPoint([in] Windows.Foundation.Numerics.Vector2 value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionMaskBrush)]
            [uuid(C9502786-65AA-5BE5-A679-C3B5DBFB0DC6)]
            interface ICompositionMaskBrush : IInspectable
            {
                [propget] HRESULT Mask([out] [retval] Microsoft.UI.Composition.CompositionBrush** value);
                [propput] HRESULT Mask([in] Microsoft.UI.Composition.CompositionBrush* value);
                [propget] HRESULT Source([out] [retval] Microsoft.UI.Composition.CompositionBrush** value);
                [propput] HRESULT Source([in] Microsoft.UI.Composition.CompositionBrush* value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionMipmapSurface)]
            [uuid(681F1E47-6E43-5B55-BE3A-E5C858A2D5FA)]
            interface ICompositionMipmapSurface : IInspectable
            {
                [propget] HRESULT LevelCount([out] [retval] UINT32* value);
                [propget] HRESULT AlphaMode([out] [retval] Microsoft.Graphics.DirectX.DirectXAlphaMode* value);
                [propget] HRESULT PixelFormat([out] [retval] Microsoft.Graphics.DirectX.DirectXPixelFormat* value);
                [propget] HRESULT SizeInt32([out] [retval] Windows.Graphics.SizeInt32* value);
                HRESULT GetDrawingSurfaceForLevel([in] UINT32 level, [out] [retval] Microsoft.UI.Composition.CompositionDrawingSurface** result);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionNineGridBrush)]
            [uuid(C77A3D21-C7EE-517A-98F4-AD9A7202BC86)]
            interface ICompositionNineGridBrush : IInspectable
            {
                [propget] HRESULT BottomInset([out] [retval] FLOAT* value);
                [propput] HRESULT BottomInset([in] FLOAT value);
                [propget] HRESULT BottomInsetScale([out] [retval] FLOAT* value);
                [propput] HRESULT BottomInsetScale([in] FLOAT value);
                [propget] HRESULT IsCenterHollow([out] [retval] boolean* value);
                [propput] HRESULT IsCenterHollow([in] boolean value);
                [propget] HRESULT LeftInset([out] [retval] FLOAT* value);
                [propput] HRESULT LeftInset([in] FLOAT value);
                [propget] HRESULT LeftInsetScale([out] [retval] FLOAT* value);
                [propput] HRESULT LeftInsetScale([in] FLOAT value);
                [propget] HRESULT RightInset([out] [retval] FLOAT* value);
                [propput] HRESULT RightInset([in] FLOAT value);
                [propget] HRESULT RightInsetScale([out] [retval] FLOAT* value);
                [propput] HRESULT RightInsetScale([in] FLOAT value);
                [propget] HRESULT Source([out] [retval] Microsoft.UI.Composition.CompositionBrush** value);
                [propput] HRESULT Source([in] Microsoft.UI.Composition.CompositionBrush* value);
                [propget] HRESULT TopInset([out] [retval] FLOAT* value);
                [propput] HRESULT TopInset([in] FLOAT value);
                [propget] HRESULT TopInsetScale([out] [retval] FLOAT* value);
                [propput] HRESULT TopInsetScale([in] FLOAT value);
                [overload("SetInsets")] HRESULT SetInsets([in] FLOAT inset);
                [overload("SetInsets")] HRESULT SetInsetsWithValues([in] FLOAT left, [in] FLOAT top, [in] FLOAT right, [in] FLOAT bottom);
                [overload("SetInsetScales")] HRESULT SetInsetScales([in] FLOAT scale);
                [overload("SetInsetScales")] HRESULT SetInsetScalesWithValues([in] FLOAT left, [in] FLOAT top, [in] FLOAT right, [in] FLOAT bottom);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionNotificationDeferral)]
            [uuid(396698B7-437B-5ACF-AEC9-6342C437FAF1)]
            interface ICompositionNotificationDeferral : IInspectable
            {
                HRESULT Complete();
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionObject)]
            [uuid(0E583D49-FB5E-5481-A426-D3C41E059A5A)]
            interface ICompositionObject : IInspectable
            {
                [propget] HRESULT Compositor([out] [retval] Microsoft.UI.Composition.Compositor** value);
                [propget] HRESULT Properties([out] [retval] Microsoft.UI.Composition.CompositionPropertySet** value);
                HRESULT StartAnimation([in] HSTRING propertyName, [in] Microsoft.UI.Composition.CompositionAnimation* animation);
                HRESULT StopAnimation([in] HSTRING propertyName);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionObject)]
            [uuid(BCBBFEBF-799C-51CE-9C82-B6E49E7E62E1)]
            interface ICompositionObject2 : IInspectable
            {
                [propget] HRESULT Comment([out] [retval] HSTRING* value);
                [propput] HRESULT Comment([in] HSTRING value);
                [propget] HRESULT ImplicitAnimations([out] [retval] Microsoft.UI.Composition.ImplicitAnimationCollection** value);
                [propput] HRESULT ImplicitAnimations([in] Microsoft.UI.Composition.ImplicitAnimationCollection* value);
                HRESULT StartAnimationGroup([in] Microsoft.UI.Composition.ICompositionAnimationBase* value);
                HRESULT StopAnimationGroup([in] Microsoft.UI.Composition.ICompositionAnimationBase* value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionObject)]
            [uuid(E571858A-4DB6-58D7-8A77-A9F1F0281DB4)]
            interface ICompositionObject3 : IInspectable
            {
                [propget] HRESULT DispatcherQueue([out] [retval] Microsoft.System.DispatcherQueue** value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionObject)]
            [uuid(029AD57C-5497-51F3-8B40-E4E235992C6F)]
            interface ICompositionObject4 : IInspectable
            {
                HRESULT TryGetAnimationController([in] HSTRING propertyName, [out] [retval] Microsoft.UI.Composition.AnimationController** result);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionObject)]
            [uuid(6133C5F9-CD3B-56B2-876F-EB849DB14911)]
            interface ICompositionObjectFactory : IInspectable
            {
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionObject)]
            [uuid(A091356C-38AE-514C-9B58-AD5C8C7936AD)]
            interface ICompositionObjectStatics : IInspectable
            {
                HRESULT StartAnimationWithIAnimationObject([in] Microsoft.UI.Composition.IAnimationObject* target, [in] HSTRING propertyName, [in] Microsoft.UI.Composition.CompositionAnimation* animation);
                HRESULT StartAnimationGroupWithIAnimationObject([in] Microsoft.UI.Composition.IAnimationObject* target, [in] Microsoft.UI.Composition.ICompositionAnimationBase* animation);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionPath)]
            [uuid(17C518C0-D7A2-54BE-AC7F-C408562A6A20)]
            interface ICompositionPath : IInspectable
            {
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionPath)]
            [uuid(618601F8-4CA8-53F9-8E76-5DDC40DFE7F4)]
            interface ICompositionPathFactory : IInspectable
            {
                HRESULT Create([in] Microsoft.Graphics.IGeometrySource2D* source, [out] [retval] Microsoft.UI.Composition.CompositionPath** value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionPathGeometry)]
            [uuid(0F6E6B82-060B-571E-B849-AB8E0D723962)]
            interface ICompositionPathGeometry : IInspectable
            {
                [propget] HRESULT Path([out] [retval] Microsoft.UI.Composition.CompositionPath** value);
                [propput] HRESULT Path([in] Microsoft.UI.Composition.CompositionPath* value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionProjectedShadow)]
            [uuid(D400AB10-8B92-5ABB-9E23-807974FC6961)]
            interface ICompositionProjectedShadow : IInspectable
            {
                [propget] HRESULT BlurRadiusMultiplier([out] [retval] FLOAT* value);
                [propput] HRESULT BlurRadiusMultiplier([in] FLOAT value);
                [propget] HRESULT Casters([out] [retval] Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection** value);
                [propget] HRESULT LightSource([out] [retval] Microsoft.UI.Composition.CompositionLight** value);
                [propput] HRESULT LightSource([in] Microsoft.UI.Composition.CompositionLight* value);
                [propget] HRESULT MaxBlurRadius([out] [retval] FLOAT* value);
                [propput] HRESULT MaxBlurRadius([in] FLOAT value);
                [propget] HRESULT MinBlurRadius([out] [retval] FLOAT* value);
                [propput] HRESULT MinBlurRadius([in] FLOAT value);
                [propget] HRESULT Receivers([out] [retval] Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection** value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionProjectedShadow)]
            [uuid(BE1AA693-593C-5CAC-A001-B2B4CF090098)]
            interface ICompositionProjectedShadow2 : IInspectable
            {
                [propget] HRESULT MaxOpacity([out] [retval] FLOAT* value);
                [propput] HRESULT MaxOpacity([in] FLOAT value);
                [propget] HRESULT MinOpacity([out] [retval] FLOAT* value);
                [propput] HRESULT MinOpacity([in] FLOAT value);
                [propget] HRESULT OpacityFalloff([out] [retval] FLOAT* value);
                [propput] HRESULT OpacityFalloff([in] FLOAT value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionProjectedShadowCaster)]
            [uuid(15A9F2D0-6BAE-521B-90C7-C7500F2BF562)]
            interface ICompositionProjectedShadowCaster : IInspectable
            {
                [propget] HRESULT Brush([out] [retval] Microsoft.UI.Composition.CompositionBrush** value);
                [propput] HRESULT Brush([in] Microsoft.UI.Composition.CompositionBrush* value);
                [propget] HRESULT CastingVisual([out] [retval] Microsoft.UI.Composition.Visual** value);
                [propput] HRESULT CastingVisual([in] Microsoft.UI.Composition.Visual* value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionProjectedShadowCaster)]
            [uuid(0EB2F457-2EE9-5745-A0FD-E11D9E111F98)]
            interface ICompositionProjectedShadowCaster2 : IInspectable
            {
                [propget] HRESULT AncestorClip([out] [retval] Microsoft.UI.Composition.Visual** value);
                [propput] HRESULT AncestorClip([in] Microsoft.UI.Composition.Visual* value);
                [propget] HRESULT Mask([out] [retval] Microsoft.UI.Composition.CompositionBrush** value);
                [propput] HRESULT Mask([in] Microsoft.UI.Composition.CompositionBrush* value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection)]
            [uuid(B120BFDC-533C-57A9-AE16-D43BA52472C4)]
            interface ICompositionProjectedShadowCasterCollection : IInspectable
            {
                [propget] HRESULT Count([out] [retval] INT32* value);
                HRESULT InsertAbove([in] Microsoft.UI.Composition.CompositionProjectedShadowCaster* newCaster, [in] Microsoft.UI.Composition.CompositionProjectedShadowCaster* reference);
                HRESULT InsertAtBottom([in] Microsoft.UI.Composition.CompositionProjectedShadowCaster* newCaster);
                HRESULT InsertAtTop([in] Microsoft.UI.Composition.CompositionProjectedShadowCaster* newCaster);
                HRESULT InsertBelow([in] Microsoft.UI.Composition.CompositionProjectedShadowCaster* newCaster, [in] Microsoft.UI.Composition.CompositionProjectedShadowCaster* reference);
                HRESULT Remove([in] Microsoft.UI.Composition.CompositionProjectedShadowCaster* caster);
                HRESULT RemoveAll();
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionProjectedShadowCasterCollection)]
            [uuid(43A98014-B88B-5B2A-B1E2-5E776AB77538)]
            interface ICompositionProjectedShadowCasterCollectionStatics : IInspectable
            {
                [propget] HRESULT MaxRespectedCasters([out] [retval] INT32* value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionProjectedShadowReceiver)]
            [uuid(29FE12B0-F1A0-50E1-AF28-2E943BC819D6)]
            interface ICompositionProjectedShadowReceiver : IInspectable
            {
                [propget] HRESULT ReceivingVisual([out] [retval] Microsoft.UI.Composition.Visual** value);
                [propput] HRESULT ReceivingVisual([in] Microsoft.UI.Composition.Visual* value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionProjectedShadowReceiver)]
            [uuid(931AF4B8-6DB0-5C6E-8B5A-2A39A83FFCEF)]
            interface ICompositionProjectedShadowReceiver2 : IInspectable
            {
                [propget] HRESULT DrawOrder([out] [retval] Microsoft.UI.Composition.CompositionProjectedShadowDrawOrder* value);
                [propput] HRESULT DrawOrder([in] Microsoft.UI.Composition.CompositionProjectedShadowDrawOrder value);
                [propget] HRESULT Mask([out] [retval] Microsoft.UI.Composition.CompositionBrush** value);
                [propput] HRESULT Mask([in] Microsoft.UI.Composition.CompositionBrush* value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionProjectedShadowReceiverUnorderedCollection)]
            [uuid(2D35F751-A1FA-5FFF-B156-6D8FCD8362ED)]
            interface ICompositionProjectedShadowReceiverUnorderedCollection : IInspectable
            {
                HRESULT Add([in] Microsoft.UI.Composition.CompositionProjectedShadowReceiver* value);
                [propget] HRESULT Count([out] [retval] INT32* value);
                HRESULT Remove([in] Microsoft.UI.Composition.CompositionProjectedShadowReceiver* value);
                HRESULT RemoveAll();
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionPropertySet)]
            [uuid(97F7A17B-97BE-5545-9F1C-0B9D44577F57)]
            interface ICompositionPropertySet : IInspectable
            {
                HRESULT InsertColor([in] HSTRING propertyName, [in] Windows.UI.Color value);
                HRESULT InsertMatrix3x2([in] HSTRING propertyName, [in] Windows.Foundation.Numerics.Matrix3x2 value);
                HRESULT InsertMatrix4x4([in] HSTRING propertyName, [in] Windows.Foundation.Numerics.Matrix4x4 value);
                HRESULT InsertQuaternion([in] HSTRING propertyName, [in] Windows.Foundation.Numerics.Quaternion value);
                HRESULT InsertScalar([in] HSTRING propertyName, [in] FLOAT value);
                HRESULT InsertVector2([in] HSTRING propertyName, [in] Windows.Foundation.Numerics.Vector2 value);
                HRESULT InsertVector3([in] HSTRING propertyName, [in] Windows.Foundation.Numerics.Vector3 value);
                HRESULT InsertVector4([in] HSTRING propertyName, [in] Windows.Foundation.Numerics.Vector4 value);
                HRESULT TryGetColor([in] HSTRING propertyName, [out] Windows.UI.Color* value, [out] [retval] Microsoft.UI.Composition.CompositionGetValueStatus* result);
                HRESULT TryGetMatrix3x2([in] HSTRING propertyName, [out] Windows.Foundation.Numerics.Matrix3x2* value, [out] [retval] Microsoft.UI.Composition.CompositionGetValueStatus* result);
                HRESULT TryGetMatrix4x4([in] HSTRING propertyName, [out] Windows.Foundation.Numerics.Matrix4x4* value, [out] [retval] Microsoft.UI.Composition.CompositionGetValueStatus* result);
                HRESULT TryGetQuaternion([in] HSTRING propertyName, [out] Windows.Foundation.Numerics.Quaternion* value, [out] [retval] Microsoft.UI.Composition.CompositionGetValueStatus* result);
                HRESULT TryGetScalar([in] HSTRING propertyName, [out] FLOAT* value, [out] [retval] Microsoft.UI.Composition.CompositionGetValueStatus* result);
                HRESULT TryGetVector2([in] HSTRING propertyName, [out] Windows.Foundation.Numerics.Vector2* value, [out] [retval] Microsoft.UI.Composition.CompositionGetValueStatus* result);
                HRESULT TryGetVector3([in] HSTRING propertyName, [out] Windows.Foundation.Numerics.Vector3* value, [out] [retval] Microsoft.UI.Composition.CompositionGetValueStatus* result);
                HRESULT TryGetVector4([in] HSTRING propertyName, [out] Windows.Foundation.Numerics.Vector4* value, [out] [retval] Microsoft.UI.Composition.CompositionGetValueStatus* result);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionPropertySet)]
            [uuid(3DB6D621-3497-55E4-95BF-8AE5E7C34C33)]
            interface ICompositionPropertySet2 : IInspectable
            {
                HRESULT InsertBoolean([in] HSTRING propertyName, [in] boolean value);
                HRESULT TryGetBoolean([in] HSTRING propertyName, [out] boolean* value, [out] [retval] Microsoft.UI.Composition.CompositionGetValueStatus* result);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionRadialGradientBrush)]
            [uuid(17662F3F-D351-5435-B3B4-EC26CEFECCC5)]
            interface ICompositionRadialGradientBrush : IInspectable
            {
                [propget] HRESULT EllipseCenter([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propput] HRESULT EllipseCenter([in] Windows.Foundation.Numerics.Vector2 value);
                [propget] HRESULT EllipseRadius([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propput] HRESULT EllipseRadius([in] Windows.Foundation.Numerics.Vector2 value);
                [propget] HRESULT GradientOriginOffset([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propput] HRESULT GradientOriginOffset([in] Windows.Foundation.Numerics.Vector2 value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionRectangleGeometry)]
            [uuid(BD551FCF-2C7F-5125-AC44-50A4F1D8FA76)]
            interface ICompositionRectangleGeometry : IInspectable
            {
                [propget] HRESULT Offset([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propput] HRESULT Offset([in] Windows.Foundation.Numerics.Vector2 value);
                [propget] HRESULT Size([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propput] HRESULT Size([in] Windows.Foundation.Numerics.Vector2 value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionRoundedRectangleGeometry)]
            [uuid(02EAFC87-8D1F-5445-A416-D81BAEE8A750)]
            interface ICompositionRoundedRectangleGeometry : IInspectable
            {
                [propget] HRESULT CornerRadius([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propput] HRESULT CornerRadius([in] Windows.Foundation.Numerics.Vector2 value);
                [propget] HRESULT Offset([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propput] HRESULT Offset([in] Windows.Foundation.Numerics.Vector2 value);
                [propget] HRESULT Size([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propput] HRESULT Size([in] Windows.Foundation.Numerics.Vector2 value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionScopedBatch)]
            [uuid(D31CA572-99CE-5969-B042-6C2D330A3859)]
            interface ICompositionScopedBatch : IInspectable
            {
                [propget] HRESULT IsActive([out] [retval] boolean* value);
                [propget] HRESULT IsEnded([out] [retval] boolean* value);
                HRESULT End();
                HRESULT Resume();
                HRESULT Suspend();
                [eventadd] HRESULT Completed([in] Windows.Foundation.TypedEventHandler<IInspectable*, Microsoft.UI.Composition.CompositionBatchCompletedEventArgs*>* handler, [out] [retval] EventRegistrationToken* token);
                [eventremove] HRESULT Completed([in] EventRegistrationToken token);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionShadow)]
            [uuid(176B8BB5-4DAE-59B2-B9A0-2499B243267C)]
            interface ICompositionShadow : IInspectable
            {
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionShadow)]
            [uuid(FF27546D-9750-54AE-AB8C-126CBE9158C3)]
            interface ICompositionShadowFactory : IInspectable
            {
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionShape)]
            [uuid(ED75D4D8-437F-5640-9720-FAAE35CE5895)]
            interface ICompositionShape : IInspectable
            {
                [propget] HRESULT CenterPoint([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propput] HRESULT CenterPoint([in] Windows.Foundation.Numerics.Vector2 value);
                [propget] HRESULT Offset([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propput] HRESULT Offset([in] Windows.Foundation.Numerics.Vector2 value);
                [propget] HRESULT RotationAngle([out] [retval] FLOAT* value);
                [propput] HRESULT RotationAngle([in] FLOAT value);
                [propget] HRESULT RotationAngleInDegrees([out] [retval] FLOAT* value);
                [propput] HRESULT RotationAngleInDegrees([in] FLOAT value);
                [propget] HRESULT Scale([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propput] HRESULT Scale([in] Windows.Foundation.Numerics.Vector2 value);
                [propget] HRESULT TransformMatrix([out] [retval] Windows.Foundation.Numerics.Matrix3x2* value);
                [propput] HRESULT TransformMatrix([in] Windows.Foundation.Numerics.Matrix3x2 value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionShape)]
            [uuid(7AA2B987-9CDD-5B6E-8AC1-E989D78B4811)]
            interface ICompositionShapeFactory : IInspectable
            {
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionSpriteShape)]
            [uuid(982138F2-5781-509A-BA5D-112BCB0B98EF)]
            interface ICompositionSpriteShape : IInspectable
            {
                [propget] HRESULT FillBrush([out] [retval] Microsoft.UI.Composition.CompositionBrush** value);
                [propput] HRESULT FillBrush([in] Microsoft.UI.Composition.CompositionBrush* value);
                [propget] HRESULT Geometry([out] [retval] Microsoft.UI.Composition.CompositionGeometry** value);
                [propput] HRESULT Geometry([in] Microsoft.UI.Composition.CompositionGeometry* value);
                [propget] HRESULT IsStrokeNonScaling([out] [retval] boolean* value);
                [propput] HRESULT IsStrokeNonScaling([in] boolean value);
                [propget] HRESULT StrokeBrush([out] [retval] Microsoft.UI.Composition.CompositionBrush** value);
                [propput] HRESULT StrokeBrush([in] Microsoft.UI.Composition.CompositionBrush* value);
                [propget] HRESULT StrokeDashArray([out] [retval] Microsoft.UI.Composition.CompositionStrokeDashArray** value);
                [propget] HRESULT StrokeDashCap([out] [retval] Microsoft.UI.Composition.CompositionStrokeCap* value);
                [propput] HRESULT StrokeDashCap([in] Microsoft.UI.Composition.CompositionStrokeCap value);
                [propget] HRESULT StrokeDashOffset([out] [retval] FLOAT* value);
                [propput] HRESULT StrokeDashOffset([in] FLOAT value);
                [propget] HRESULT StrokeEndCap([out] [retval] Microsoft.UI.Composition.CompositionStrokeCap* value);
                [propput] HRESULT StrokeEndCap([in] Microsoft.UI.Composition.CompositionStrokeCap value);
                [propget] HRESULT StrokeLineJoin([out] [retval] Microsoft.UI.Composition.CompositionStrokeLineJoin* value);
                [propput] HRESULT StrokeLineJoin([in] Microsoft.UI.Composition.CompositionStrokeLineJoin value);
                [propget] HRESULT StrokeMiterLimit([out] [retval] FLOAT* value);
                [propput] HRESULT StrokeMiterLimit([in] FLOAT value);
                [propget] HRESULT StrokeStartCap([out] [retval] Microsoft.UI.Composition.CompositionStrokeCap* value);
                [propput] HRESULT StrokeStartCap([in] Microsoft.UI.Composition.CompositionStrokeCap value);
                [propget] HRESULT StrokeThickness([out] [retval] FLOAT* value);
                [propput] HRESULT StrokeThickness([in] FLOAT value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [uuid(9EC612C3-A5D2-4F97-9DF3-6B49CE736215)]
            interface ICompositionSurface : IInspectable
            {
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionSurfaceBrush)]
            [uuid(616BB5A5-0A33-512D-B4B1-3D3734F04ACA)]
            interface ICompositionSurfaceBrush : IInspectable
            {
                [propget] HRESULT BitmapInterpolationMode([out] [retval] Microsoft.UI.Composition.CompositionBitmapInterpolationMode* value);
                [propput] HRESULT BitmapInterpolationMode([in] Microsoft.UI.Composition.CompositionBitmapInterpolationMode value);
                [propget] HRESULT HorizontalAlignmentRatio([out] [retval] FLOAT* value);
                [propput] HRESULT HorizontalAlignmentRatio([in] FLOAT value);
                [propget] HRESULT Stretch([out] [retval] Microsoft.UI.Composition.CompositionStretch* value);
                [propput] HRESULT Stretch([in] Microsoft.UI.Composition.CompositionStretch value);
                [propget] HRESULT Surface([out] [retval] Microsoft.UI.Composition.ICompositionSurface** value);
                [propput] HRESULT Surface([in] Microsoft.UI.Composition.ICompositionSurface* value);
                [propget] HRESULT VerticalAlignmentRatio([out] [retval] FLOAT* value);
                [propput] HRESULT VerticalAlignmentRatio([in] FLOAT value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionSurfaceBrush)]
            [uuid(9904B7E3-084B-58B5-9AE1-3A2040DD7A22)]
            interface ICompositionSurfaceBrush2 : IInspectable
            {
                [propget] HRESULT AnchorPoint([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propput] HRESULT AnchorPoint([in] Windows.Foundation.Numerics.Vector2 value);
                [propget] HRESULT CenterPoint([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propput] HRESULT CenterPoint([in] Windows.Foundation.Numerics.Vector2 value);
                [propget] HRESULT Offset([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propput] HRESULT Offset([in] Windows.Foundation.Numerics.Vector2 value);
                [propget] HRESULT RotationAngle([out] [retval] FLOAT* value);
                [propput] HRESULT RotationAngle([in] FLOAT value);
                [propget] HRESULT RotationAngleInDegrees([out] [retval] FLOAT* value);
                [propput] HRESULT RotationAngleInDegrees([in] FLOAT value);
                [propget] HRESULT Scale([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propput] HRESULT Scale([in] Windows.Foundation.Numerics.Vector2 value);
                [propget] HRESULT TransformMatrix([out] [retval] Windows.Foundation.Numerics.Matrix3x2* value);
                [propput] HRESULT TransformMatrix([in] Windows.Foundation.Numerics.Matrix3x2 value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionSurfaceBrush)]
            [uuid(8AA74C78-680C-5791-AB07-92DB0F37E352)]
            interface ICompositionSurfaceBrush3 : IInspectable
            {
                [propget] HRESULT SnapToPixels([out] [retval] boolean* value);
                [propput] HRESULT SnapToPixels([in] boolean value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [uuid(88AC5DF6-377F-5CF7-A02E-ED5074D30452)]
            interface ICompositionSurfaceFacade : IInspectable
            {
                HRESULT GetRealSurface([out] [retval] Microsoft.UI.Composition.ICompositionSurface** result);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionTransform)]
            [uuid(670E1826-1932-51D0-BBB3-063B4CA94B56)]
            interface ICompositionTransform : IInspectable
            {
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionTransform)]
            [uuid(78CC7BF2-CDC0-59D2-9C04-8D208DE7EF5E)]
            interface ICompositionTransformFactory : IInspectable
            {
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionViewBox)]
            [uuid(667E4071-ADDD-5DED-B6C0-09E03A14BE7E)]
            interface ICompositionViewBox : IInspectable
            {
                [propget] HRESULT HorizontalAlignmentRatio([out] [retval] FLOAT* value);
                [propput] HRESULT HorizontalAlignmentRatio([in] FLOAT value);
                [propget] HRESULT Offset([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propput] HRESULT Offset([in] Windows.Foundation.Numerics.Vector2 value);
                [propget] HRESULT Size([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propput] HRESULT Size([in] Windows.Foundation.Numerics.Vector2 value);
                [propget] HRESULT Stretch([out] [retval] Microsoft.UI.Composition.CompositionStretch* value);
                [propput] HRESULT Stretch([in] Microsoft.UI.Composition.CompositionStretch value);
                [propget] HRESULT VerticalAlignmentRatio([out] [retval] FLOAT* value);
                [propput] HRESULT VerticalAlignmentRatio([in] FLOAT value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionVirtualDrawingSurface)]
            [uuid(D741B99D-E248-5BA7-B728-8BEEA53FE28E)]
            interface ICompositionVirtualDrawingSurface : IInspectable
            {
                HRESULT Trim([in] UINT32 __rectsSize, [in] [size_is(__rectsSize)] Windows.Graphics.RectInt32* rects);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionVirtualDrawingSurface)]
            [uuid(85895891-3F06-52E2-B5EA-D1FB595F6574)]
            interface ICompositionVirtualDrawingSurfaceFactory : IInspectable
            {
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CompositionVisualSurface)]
            [uuid(49E3624B-4D2E-53E7-9E02-F64831681134)]
            interface ICompositionVisualSurface : IInspectable
            {
                [propget] HRESULT SourceVisual([out] [retval] Microsoft.UI.Composition.Visual** value);
                [propput] HRESULT SourceVisual([in] Microsoft.UI.Composition.Visual* value);
                [propget] HRESULT SourceOffset([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propput] HRESULT SourceOffset([in] Windows.Foundation.Numerics.Vector2 value);
                [propget] HRESULT SourceSize([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propput] HRESULT SourceSize([in] Windows.Foundation.Numerics.Vector2 value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.Compositor)]
            [uuid(95213C13-C4CB-57DE-B267-D21AB901AE38)]
            interface ICompositor : IInspectable
            {
                HRESULT CreateColorKeyFrameAnimation([out] [retval] Microsoft.UI.Composition.ColorKeyFrameAnimation** result);
                [overload("CreateColorBrush")] HRESULT CreateColorBrush([out] [retval] Microsoft.UI.Composition.CompositionColorBrush** result);
                [overload("CreateColorBrush")] HRESULT CreateColorBrushWithColor([in] Windows.UI.Color color, [out] [retval] Microsoft.UI.Composition.CompositionColorBrush** result);
                HRESULT CreateContainerVisual([out] [retval] Microsoft.UI.Composition.ContainerVisual** result);
                HRESULT CreateCubicBezierEasingFunction([in] Windows.Foundation.Numerics.Vector2 controlPoint1, [in] Windows.Foundation.Numerics.Vector2 controlPoint2, [out] [retval] Microsoft.UI.Composition.CubicBezierEasingFunction** result);
                [overload("CreateEffectFactory")] HRESULT CreateEffectFactory([in] Windows.Graphics.Effects.IGraphicsEffect* graphicsEffect, [out] [retval] Microsoft.UI.Composition.CompositionEffectFactory** result);
                [overload("CreateEffectFactory")] HRESULT CreateEffectFactoryWithProperties([in] Windows.Graphics.Effects.IGraphicsEffect* graphicsEffect, [in] Windows.Foundation.Collections.IIterable<HSTRING>* animatableProperties, [out] [retval] Microsoft.UI.Composition.CompositionEffectFactory** result);
                [overload("CreateExpressionAnimation")] HRESULT CreateExpressionAnimation([out] [retval] Microsoft.UI.Composition.ExpressionAnimation** result);
                [overload("CreateExpressionAnimation")] HRESULT CreateExpressionAnimationWithExpression([in] HSTRING expression, [out] [retval] Microsoft.UI.Composition.ExpressionAnimation** result);
                [overload("CreateInsetClip")] HRESULT CreateInsetClip([out] [retval] Microsoft.UI.Composition.InsetClip** result);
                [overload("CreateInsetClip")] HRESULT CreateInsetClipWithInsets([in] FLOAT leftInset, [in] FLOAT topInset, [in] FLOAT rightInset, [in] FLOAT bottomInset, [out] [retval] Microsoft.UI.Composition.InsetClip** result);
                HRESULT CreateLinearEasingFunction([out] [retval] Microsoft.UI.Composition.LinearEasingFunction** result);
                HRESULT CreatePropertySet([out] [retval] Microsoft.UI.Composition.CompositionPropertySet** result);
                HRESULT CreateQuaternionKeyFrameAnimation([out] [retval] Microsoft.UI.Composition.QuaternionKeyFrameAnimation** result);
                HRESULT CreateScalarKeyFrameAnimation([out] [retval] Microsoft.UI.Composition.ScalarKeyFrameAnimation** result);
                HRESULT CreateScopedBatch([in] Microsoft.UI.Composition.CompositionBatchTypes batchType, [out] [retval] Microsoft.UI.Composition.CompositionScopedBatch** result);
                HRESULT CreateSpriteVisual([out] [retval] Microsoft.UI.Composition.SpriteVisual** result);
                [overload("CreateSurfaceBrush")] HRESULT CreateSurfaceBrush([out] [retval] Microsoft.UI.Composition.CompositionSurfaceBrush** result);
                [overload("CreateSurfaceBrush")] HRESULT CreateSurfaceBrushWithSurface([in] Microsoft.UI.Composition.ICompositionSurface* surface, [out] [retval] Microsoft.UI.Composition.CompositionSurfaceBrush** result);
                HRESULT CreateVector2KeyFrameAnimation([out] [retval] Microsoft.UI.Composition.Vector2KeyFrameAnimation** result);
                HRESULT CreateVector3KeyFrameAnimation([out] [retval] Microsoft.UI.Composition.Vector3KeyFrameAnimation** result);
                HRESULT CreateVector4KeyFrameAnimation([out] [retval] Microsoft.UI.Composition.Vector4KeyFrameAnimation** result);
                HRESULT GetCommitBatch([in] Microsoft.UI.Composition.CompositionBatchTypes batchType, [out] [retval] Microsoft.UI.Composition.CompositionCommitBatch** result);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.Compositor)]
            [uuid(A9FFEDAD-3982-576D-A38A-C888FF605819)]
            interface ICompositor2 : IInspectable
            {
                HRESULT CreateAmbientLight([out] [retval] Microsoft.UI.Composition.AmbientLight** result);
                HRESULT CreateAnimationGroup([out] [retval] Microsoft.UI.Composition.CompositionAnimationGroup** result);
                HRESULT CreateBackdropBrush([out] [retval] Microsoft.UI.Composition.CompositionBackdropBrush** result);
                HRESULT CreateDistantLight([out] [retval] Microsoft.UI.Composition.DistantLight** result);
                HRESULT CreateDropShadow([out] [retval] Microsoft.UI.Composition.DropShadow** result);
                HRESULT CreateImplicitAnimationCollection([out] [retval] Microsoft.UI.Composition.ImplicitAnimationCollection** result);
                HRESULT CreateLayerVisual([out] [retval] Microsoft.UI.Composition.LayerVisual** result);
                HRESULT CreateMaskBrush([out] [retval] Microsoft.UI.Composition.CompositionMaskBrush** result);
                HRESULT CreateNineGridBrush([out] [retval] Microsoft.UI.Composition.CompositionNineGridBrush** result);
                HRESULT CreatePointLight([out] [retval] Microsoft.UI.Composition.PointLight** result);
                HRESULT CreateSpotLight([out] [retval] Microsoft.UI.Composition.SpotLight** result);
                [overload("CreateStepEasingFunction")] HRESULT CreateStepEasingFunction([out] [retval] Microsoft.UI.Composition.StepEasingFunction** result);
                [overload("CreateStepEasingFunction")] HRESULT CreateStepEasingFunctionWithStepCount([in] INT32 stepCount, [out] [retval] Microsoft.UI.Composition.StepEasingFunction** result);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.Compositor)]
            [uuid(EE444BCA-735C-5CF2-B79D-A6DD46C16160)]
            interface ICompositor4 : IInspectable
            {
                [overload("CreateColorGradientStop")] HRESULT CreateColorGradientStop([out] [retval] Microsoft.UI.Composition.CompositionColorGradientStop** result);
                [overload("CreateColorGradientStop")] HRESULT CreateColorGradientStopWithOffsetAndColor([in] FLOAT offset, [in] Windows.UI.Color color, [out] [retval] Microsoft.UI.Composition.CompositionColorGradientStop** result);
                HRESULT CreateLinearGradientBrush([out] [retval] Microsoft.UI.Composition.CompositionLinearGradientBrush** result);
                HRESULT CreateSpringScalarAnimation([out] [retval] Microsoft.UI.Composition.SpringScalarNaturalMotionAnimation** result);
                HRESULT CreateSpringVector2Animation([out] [retval] Microsoft.UI.Composition.SpringVector2NaturalMotionAnimation** result);
                HRESULT CreateSpringVector3Animation([out] [retval] Microsoft.UI.Composition.SpringVector3NaturalMotionAnimation** result);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.Compositor)]
            [uuid(BB52D644-A030-5C19-B883-577DED739AE7)]
            interface ICompositor5 : IInspectable
            {
                [propget] HRESULT Comment([out] [retval] HSTRING* value);
                [propput] HRESULT Comment([in] HSTRING value);
                [propget] HRESULT GlobalPlaybackRate([out] [retval] FLOAT* value);
                [propput] HRESULT GlobalPlaybackRate([in] FLOAT value);
                HRESULT CreateBounceScalarAnimation([out] [retval] Microsoft.UI.Composition.BounceScalarNaturalMotionAnimation** result);
                HRESULT CreateBounceVector2Animation([out] [retval] Microsoft.UI.Composition.BounceVector2NaturalMotionAnimation** result);
                HRESULT CreateBounceVector3Animation([out] [retval] Microsoft.UI.Composition.BounceVector3NaturalMotionAnimation** result);
                HRESULT CreateContainerShape([out] [retval] Microsoft.UI.Composition.CompositionContainerShape** result);
                HRESULT CreateEllipseGeometry([out] [retval] Microsoft.UI.Composition.CompositionEllipseGeometry** result);
                HRESULT CreateLineGeometry([out] [retval] Microsoft.UI.Composition.CompositionLineGeometry** result);
                [overload("CreatePathGeometry")] HRESULT CreatePathGeometry([out] [retval] Microsoft.UI.Composition.CompositionPathGeometry** result);
                [overload("CreatePathGeometry")] HRESULT CreatePathGeometryWithPath([in] Microsoft.UI.Composition.CompositionPath* path, [out] [retval] Microsoft.UI.Composition.CompositionPathGeometry** result);
                HRESULT CreatePathKeyFrameAnimation([out] [retval] Microsoft.UI.Composition.PathKeyFrameAnimation** result);
                HRESULT CreateRectangleGeometry([out] [retval] Microsoft.UI.Composition.CompositionRectangleGeometry** result);
                HRESULT CreateRoundedRectangleGeometry([out] [retval] Microsoft.UI.Composition.CompositionRoundedRectangleGeometry** result);
                HRESULT CreateShapeVisual([out] [retval] Microsoft.UI.Composition.ShapeVisual** result);
                [overload("CreateSpriteShape")] HRESULT CreateSpriteShape([out] [retval] Microsoft.UI.Composition.CompositionSpriteShape** result);
                [overload("CreateSpriteShape")] HRESULT CreateSpriteShapeWithGeometry([in] Microsoft.UI.Composition.CompositionGeometry* geometry, [out] [retval] Microsoft.UI.Composition.CompositionSpriteShape** result);
                HRESULT CreateViewBox([out] [retval] Microsoft.UI.Composition.CompositionViewBox** result);
                HRESULT RequestCommitAsync([out] [retval] Windows.Foundation.IAsyncAction** operation);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.Compositor)]
            [uuid(5FD20200-C188-5737-B567-5E61741AF19C)]
            interface ICompositor6 : IInspectable
            {
                [overload("CreateGeometricClip")] HRESULT CreateGeometricClip([out] [retval] Microsoft.UI.Composition.CompositionGeometricClip** result);
                [overload("CreateGeometricClip")] HRESULT CreateGeometricClipWithGeometry([in] Microsoft.UI.Composition.CompositionGeometry* geometry, [out] [retval] Microsoft.UI.Composition.CompositionGeometricClip** result);
                [overload("CreateRedirectVisual")] HRESULT CreateRedirectVisual([out] [retval] Microsoft.UI.Composition.RedirectVisual** result);
                [overload("CreateRedirectVisual")] HRESULT CreateRedirectVisualWithSourceVisual([in] Microsoft.UI.Composition.Visual* source, [out] [retval] Microsoft.UI.Composition.RedirectVisual** result);
                HRESULT CreateBooleanKeyFrameAnimation([out] [retval] Microsoft.UI.Composition.BooleanKeyFrameAnimation** result);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.Compositor)]
            [uuid(B3C54EF3-A0FB-593B-971B-D798146D650F)]
            interface ICompositor7 : IInspectable
            {
                [propget] HRESULT DispatcherQueue([out] [retval] Microsoft.System.DispatcherQueue** value);
                HRESULT CreateAnimationPropertyInfo([out] [retval] Microsoft.UI.Composition.AnimationPropertyInfo** result);
                [overload("CreateRectangleClip")] HRESULT CreateRectangleClip([out] [retval] Microsoft.UI.Composition.RectangleClip** result);
                [overload("CreateRectangleClip")] HRESULT CreateRectangleClipWithSides([in] FLOAT left, [in] FLOAT top, [in] FLOAT right, [in] FLOAT bottom, [out] [retval] Microsoft.UI.Composition.RectangleClip** result);
                [overload("CreateRectangleClip")] HRESULT CreateRectangleClipWithSidesAndRadius([in] FLOAT left, [in] FLOAT top, [in] FLOAT right, [in] FLOAT bottom, [in] Windows.Foundation.Numerics.Vector2 topLeftRadius, [in] Windows.Foundation.Numerics.Vector2 topRightRadius, [in] Windows.Foundation.Numerics.Vector2 bottomRightRadius, [in] Windows.Foundation.Numerics.Vector2 bottomLeftRadius, [out] [retval] Microsoft.UI.Composition.RectangleClip** result);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.Compositor)]
            [uuid(6BAA947A-F103-55C6-91AD-3D275BEA65C4)]
            interface ICompositorStatics : IInspectable
            {
                [propget] HRESULT MaxGlobalPlaybackRate([out] [retval] FLOAT* value);
                [propget] HRESULT MinGlobalPlaybackRate([out] [retval] FLOAT* value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.Compositor)]
            [uuid(60AB2BF2-B95C-5944-8B36-C9773B9F5256)]
            interface ICompositorWithProjectedShadow : IInspectable
            {
                HRESULT CreateProjectedShadowCaster([out] [retval] Microsoft.UI.Composition.CompositionProjectedShadowCaster** result);
                HRESULT CreateProjectedShadow([out] [retval] Microsoft.UI.Composition.CompositionProjectedShadow** result);
                HRESULT CreateProjectedShadowReceiver([out] [retval] Microsoft.UI.Composition.CompositionProjectedShadowReceiver** result);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.Compositor)]
            [uuid(FA4F8F7D-5CC7-5C9C-883B-FE878A2F3E30)]
            interface ICompositorWithRadialGradient : IInspectable
            {
                HRESULT CreateRadialGradientBrush([out] [retval] Microsoft.UI.Composition.CompositionRadialGradientBrush** result);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.Compositor)]
            [uuid(5FCFE24A-690A-5378-ACEE-561E84BFB982)]
            interface ICompositorWithVisualSurface : IInspectable
            {
                HRESULT CreateVisualSurface([out] [retval] Microsoft.UI.Composition.CompositionVisualSurface** result);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.ContainerVisual)]
            [uuid(C70DBCE1-2C2F-5D8E-91A4-AAE1121E6186)]
            interface IContainerVisual : IInspectable
            {
                [propget] HRESULT Children([out] [retval] Microsoft.UI.Composition.VisualCollection** value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.ContainerVisual)]
            [uuid(3FA45EEB-C6DD-5AFD-971D-EAAF6245E716)]
            interface IContainerVisualFactory : IInspectable
            {
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.CubicBezierEasingFunction)]
            [uuid(35E7FCDE-F9CE-590A-8B88-64A82A6B4B48)]
            interface ICubicBezierEasingFunction : IInspectable
            {
                [propget] HRESULT ControlPoint1([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propget] HRESULT ControlPoint2([out] [retval] Windows.Foundation.Numerics.Vector2* value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.DistantLight)]
            [uuid(125EF556-56EE-5C60-B944-571928CA03F5)]
            interface IDistantLight : IInspectable
            {
                [propget] HRESULT Color([out] [retval] Windows.UI.Color* value);
                [propput] HRESULT Color([in] Windows.UI.Color value);
                [propget] HRESULT CoordinateSpace([out] [retval] Microsoft.UI.Composition.Visual** value);
                [propput] HRESULT CoordinateSpace([in] Microsoft.UI.Composition.Visual* value);
                [propget] HRESULT Direction([out] [retval] Windows.Foundation.Numerics.Vector3* value);
                [propput] HRESULT Direction([in] Windows.Foundation.Numerics.Vector3 value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.DistantLight)]
            [uuid(9F97BFEC-B6B9-51EE-8480-B546468C748F)]
            interface IDistantLight2 : IInspectable
            {
                [propget] HRESULT Intensity([out] [retval] FLOAT* value);
                [propput] HRESULT Intensity([in] FLOAT value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.DropShadow)]
            [uuid(977095D2-265F-5F58-9789-CB7F85E98C9E)]
            interface IDropShadow : IInspectable
            {
                [propget] HRESULT BlurRadius([out] [retval] FLOAT* value);
                [propput] HRESULT BlurRadius([in] FLOAT value);
                [propget] HRESULT Color([out] [retval] Windows.UI.Color* value);
                [propput] HRESULT Color([in] Windows.UI.Color value);
                [propget] HRESULT Mask([out] [retval] Microsoft.UI.Composition.CompositionBrush** value);
                [propput] HRESULT Mask([in] Microsoft.UI.Composition.CompositionBrush* value);
                [propget] HRESULT Offset([out] [retval] Windows.Foundation.Numerics.Vector3* value);
                [propput] HRESULT Offset([in] Windows.Foundation.Numerics.Vector3 value);
                [propget] HRESULT Opacity([out] [retval] FLOAT* value);
                [propput] HRESULT Opacity([in] FLOAT value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.DropShadow)]
            [uuid(CBC7C266-2D33-5711-B3B4-5699410BEF56)]
            interface IDropShadow2 : IInspectable
            {
                [propget] HRESULT SourcePolicy([out] [retval] Microsoft.UI.Composition.CompositionDropShadowSourcePolicy* value);
                [propput] HRESULT SourcePolicy([in] Microsoft.UI.Composition.CompositionDropShadowSourcePolicy value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.ElasticEasingFunction)]
            [uuid(B952E12F-4A50-51A9-A11A-23855F4AAE07)]
            interface IElasticEasingFunction : IInspectable
            {
                [propget] HRESULT Mode([out] [retval] Microsoft.UI.Composition.CompositionEasingFunctionMode* value);
                [propget] HRESULT Oscillations([out] [retval] INT32* value);
                [propget] HRESULT Springiness([out] [retval] FLOAT* value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.ExponentialEasingFunction)]
            [uuid(DF29ECC1-3FFC-565F-9D6C-533586908106)]
            interface IExponentialEasingFunction : IInspectable
            {
                [propget] HRESULT Mode([out] [retval] Microsoft.UI.Composition.CompositionEasingFunctionMode* value);
                [propget] HRESULT Exponent([out] [retval] FLOAT* value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.ExpressionAnimation)]
            [uuid(7FFF5826-1992-56C0-9060-5ADE561A4F2D)]
            interface IExpressionAnimation : IInspectable
            {
                [propget] HRESULT Expression([out] [retval] HSTRING* value);
                [propput] HRESULT Expression([in] HSTRING value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.ImplicitAnimationCollection)]
            [uuid(C5C0689E-F5AE-5BED-829B-C522CDA39717)]
            interface IImplicitAnimationCollection : IInspectable
            {
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.InsetClip)]
            [uuid(F9D99475-7B59-5B28-A1D2-B832DA6988C9)]
            interface IInsetClip : IInspectable
            {
                [propget] HRESULT BottomInset([out] [retval] FLOAT* value);
                [propput] HRESULT BottomInset([in] FLOAT value);
                [propget] HRESULT LeftInset([out] [retval] FLOAT* value);
                [propput] HRESULT LeftInset([in] FLOAT value);
                [propget] HRESULT RightInset([out] [retval] FLOAT* value);
                [propput] HRESULT RightInset([in] FLOAT value);
                [propget] HRESULT TopInset([out] [retval] FLOAT* value);
                [propput] HRESULT TopInset([in] FLOAT value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.KeyFrameAnimation)]
            [uuid(5A8F57F0-F059-5B47-B308-C4C80FC71248)]
            interface IKeyFrameAnimation : IInspectable
            {
                [propget] HRESULT DelayTime([out] [retval] Windows.Foundation.TimeSpan* value);
                [propput] HRESULT DelayTime([in] Windows.Foundation.TimeSpan value);
                [propget] HRESULT Duration([out] [retval] Windows.Foundation.TimeSpan* value);
                [propput] HRESULT Duration([in] Windows.Foundation.TimeSpan value);
                [propget] HRESULT IterationBehavior([out] [retval] Microsoft.UI.Composition.AnimationIterationBehavior* value);
                [propput] HRESULT IterationBehavior([in] Microsoft.UI.Composition.AnimationIterationBehavior value);
                [propget] HRESULT IterationCount([out] [retval] INT32* value);
                [propput] HRESULT IterationCount([in] INT32 value);
                [propget] HRESULT KeyFrameCount([out] [retval] INT32* value);
                [propget] HRESULT StopBehavior([out] [retval] Microsoft.UI.Composition.AnimationStopBehavior* value);
                [propput] HRESULT StopBehavior([in] Microsoft.UI.Composition.AnimationStopBehavior value);
                [overload("InsertExpressionKeyFrame")] HRESULT InsertExpressionKeyFrame([in] FLOAT normalizedProgressKey, [in] HSTRING value);
                [overload("InsertExpressionKeyFrame")] HRESULT InsertExpressionKeyFrameWithEasingFunction([in] FLOAT normalizedProgressKey, [in] HSTRING value, [in] Microsoft.UI.Composition.CompositionEasingFunction* easingFunction);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.KeyFrameAnimation)]
            [uuid(414692E5-8A7E-58EA-83E1-25CE475D9300)]
            interface IKeyFrameAnimation2 : IInspectable
            {
                [propget] HRESULT Direction([out] [retval] Microsoft.UI.Composition.AnimationDirection* value);
                [propput] HRESULT Direction([in] Microsoft.UI.Composition.AnimationDirection value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.KeyFrameAnimation)]
            [uuid(4F97E180-9BCB-5FC4-ABBE-43AA3BE327E7)]
            interface IKeyFrameAnimation3 : IInspectable
            {
                [propget] HRESULT DelayBehavior([out] [retval] Microsoft.UI.Composition.AnimationDelayBehavior* value);
                [propput] HRESULT DelayBehavior([in] Microsoft.UI.Composition.AnimationDelayBehavior value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.KeyFrameAnimation)]
            [uuid(7CCCFC87-3BAF-5100-B5F8-2F779F954F19)]
            interface IKeyFrameAnimationFactory : IInspectable
            {
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.LayerVisual)]
            [uuid(64D05CA1-3BF6-5D4F-98A1-7500F2F23EBE)]
            interface ILayerVisual : IInspectable
            {
                [propget] HRESULT Effect([out] [retval] Microsoft.UI.Composition.CompositionEffectBrush** value);
                [propput] HRESULT Effect([in] Microsoft.UI.Composition.CompositionEffectBrush* value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.LayerVisual)]
            [uuid(9AB2E401-AF45-54DA-9991-DD31273155D2)]
            interface ILayerVisual2 : IInspectable
            {
                [propget] HRESULT Shadow([out] [retval] Microsoft.UI.Composition.CompositionShadow** value);
                [propput] HRESULT Shadow([in] Microsoft.UI.Composition.CompositionShadow* value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.LinearEasingFunction)]
            [uuid(79BFEEF6-70C7-50A6-BB3A-0E9636148695)]
            interface ILinearEasingFunction : IInspectable
            {
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.NaturalMotionAnimation)]
            [uuid(2FF54EBB-A035-50BE-A73C-20014975EE31)]
            interface INaturalMotionAnimation : IInspectable
            {
                [propget] HRESULT DelayBehavior([out] [retval] Microsoft.UI.Composition.AnimationDelayBehavior* value);
                [propput] HRESULT DelayBehavior([in] Microsoft.UI.Composition.AnimationDelayBehavior value);
                [propget] HRESULT DelayTime([out] [retval] Windows.Foundation.TimeSpan* value);
                [propput] HRESULT DelayTime([in] Windows.Foundation.TimeSpan value);
                [propget] HRESULT StopBehavior([out] [retval] Microsoft.UI.Composition.AnimationStopBehavior* value);
                [propput] HRESULT StopBehavior([in] Microsoft.UI.Composition.AnimationStopBehavior value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.NaturalMotionAnimation)]
            [uuid(0411A259-2622-59E2-A59E-1E23D8F83A9F)]
            interface INaturalMotionAnimationFactory : IInspectable
            {
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.PathKeyFrameAnimation)]
            [uuid(2B692808-43DA-5118-B66D-904A3EC74FD9)]
            interface IPathKeyFrameAnimation : IInspectable
            {
                [overload("InsertKeyFrame")] HRESULT InsertKeyFrame([in] FLOAT normalizedProgressKey, [in] Microsoft.UI.Composition.CompositionPath* path);
                [overload("InsertKeyFrame")] HRESULT InsertKeyFrameWithEasingFunction([in] FLOAT normalizedProgressKey, [in] Microsoft.UI.Composition.CompositionPath* path, [in] Microsoft.UI.Composition.CompositionEasingFunction* easingFunction);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.PointLight)]
            [uuid(ED5CC102-F0AC-59A8-8678-CE54146E7BE8)]
            interface IPointLight : IInspectable
            {
                [propget] HRESULT Color([out] [retval] Windows.UI.Color* value);
                [propput] HRESULT Color([in] Windows.UI.Color value);
                [propget] HRESULT ConstantAttenuation([out] [retval] FLOAT* value);
                [propput] HRESULT ConstantAttenuation([in] FLOAT value);
                [propget] HRESULT CoordinateSpace([out] [retval] Microsoft.UI.Composition.Visual** value);
                [propput] HRESULT CoordinateSpace([in] Microsoft.UI.Composition.Visual* value);
                [propget] HRESULT LinearAttenuation([out] [retval] FLOAT* value);
                [propput] HRESULT LinearAttenuation([in] FLOAT value);
                [propget] HRESULT Offset([out] [retval] Windows.Foundation.Numerics.Vector3* value);
                [propput] HRESULT Offset([in] Windows.Foundation.Numerics.Vector3 value);
                [propget] HRESULT QuadraticAttenuation([out] [retval] FLOAT* value);
                [propput] HRESULT QuadraticAttenuation([in] FLOAT value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.PointLight)]
            [uuid(DE466104-59D9-57D2-92B5-554D6D82EDF2)]
            interface IPointLight2 : IInspectable
            {
                [propget] HRESULT Intensity([out] [retval] FLOAT* value);
                [propput] HRESULT Intensity([in] FLOAT value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.PointLight)]
            [uuid(BE30E87A-8CBB-5A56-8D24-2CD865F383B3)]
            interface IPointLight3 : IInspectable
            {
                [propget] HRESULT MinAttenuationCutoff([out] [retval] FLOAT* value);
                [propput] HRESULT MinAttenuationCutoff([in] FLOAT value);
                [propget] HRESULT MaxAttenuationCutoff([out] [retval] FLOAT* value);
                [propput] HRESULT MaxAttenuationCutoff([in] FLOAT value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.PowerEasingFunction)]
            [uuid(0268A272-EA06-5FB0-8DEF-49726BCEE39B)]
            interface IPowerEasingFunction : IInspectable
            {
                [propget] HRESULT Mode([out] [retval] Microsoft.UI.Composition.CompositionEasingFunctionMode* value);
                [propget] HRESULT Power([out] [retval] FLOAT* value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.QuaternionKeyFrameAnimation)]
            [uuid(E72D1026-DA3B-5D56-858B-3A9AA3C57D70)]
            interface IQuaternionKeyFrameAnimation : IInspectable
            {
                [overload("InsertKeyFrame")] HRESULT InsertKeyFrame([in] FLOAT normalizedProgressKey, [in] Windows.Foundation.Numerics.Quaternion value);
                [overload("InsertKeyFrame")] HRESULT InsertKeyFrameWithEasingFunction([in] FLOAT normalizedProgressKey, [in] Windows.Foundation.Numerics.Quaternion value, [in] Microsoft.UI.Composition.CompositionEasingFunction* easingFunction);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.RectangleClip)]
            [uuid(BC261502-2259-5C01-8616-556110A09657)]
            interface IRectangleClip : IInspectable
            {
                [propget] HRESULT Bottom([out] [retval] FLOAT* value);
                [propput] HRESULT Bottom([in] FLOAT value);
                [propget] HRESULT BottomLeftRadius([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propput] HRESULT BottomLeftRadius([in] Windows.Foundation.Numerics.Vector2 value);
                [propget] HRESULT BottomRightRadius([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propput] HRESULT BottomRightRadius([in] Windows.Foundation.Numerics.Vector2 value);
                [propget] HRESULT Left([out] [retval] FLOAT* value);
                [propput] HRESULT Left([in] FLOAT value);
                [propget] HRESULT Right([out] [retval] FLOAT* value);
                [propput] HRESULT Right([in] FLOAT value);
                [propget] HRESULT Top([out] [retval] FLOAT* value);
                [propput] HRESULT Top([in] FLOAT value);
                [propget] HRESULT TopLeftRadius([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propput] HRESULT TopLeftRadius([in] Windows.Foundation.Numerics.Vector2 value);
                [propget] HRESULT TopRightRadius([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propput] HRESULT TopRightRadius([in] Windows.Foundation.Numerics.Vector2 value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.RedirectVisual)]
            [uuid(6C10081A-CDE1-50D9-AC05-78D6845B656F)]
            interface IRedirectVisual : IInspectable
            {
                [propget] HRESULT Source([out] [retval] Microsoft.UI.Composition.Visual** value);
                [propput] HRESULT Source([in] Microsoft.UI.Composition.Visual* value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.RenderingDeviceReplacedEventArgs)]
            [uuid(FE5B97C7-F656-56D6-A0CD-3E1227E4DD44)]
            interface IRenderingDeviceReplacedEventArgs : IInspectable
            {
                [propget] HRESULT GraphicsDevice([out] [retval] Microsoft.UI.Composition.CompositionGraphicsDevice** value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.ScalarKeyFrameAnimation)]
            [uuid(5A5F8ABE-D129-5B25-8AFF-8180FD9BFB22)]
            interface IScalarKeyFrameAnimation : IInspectable
            {
                [overload("InsertKeyFrame")] HRESULT InsertKeyFrame([in] FLOAT normalizedProgressKey, [in] FLOAT value);
                [overload("InsertKeyFrame")] HRESULT InsertKeyFrameWithEasingFunction([in] FLOAT normalizedProgressKey, [in] FLOAT value, [in] Microsoft.UI.Composition.CompositionEasingFunction* easingFunction);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.ScalarNaturalMotionAnimation)]
            [uuid(903224B0-2DBE-56EB-B9EA-33D2E3113181)]
            interface IScalarNaturalMotionAnimation : IInspectable
            {
                [propget] HRESULT FinalValue([out] [retval] Windows.Foundation.IReference<FLOAT>** value);
                [propput] HRESULT FinalValue([in] Windows.Foundation.IReference<FLOAT>* value);
                [propget] HRESULT InitialValue([out] [retval] Windows.Foundation.IReference<FLOAT>** value);
                [propput] HRESULT InitialValue([in] Windows.Foundation.IReference<FLOAT>* value);
                [propget] HRESULT InitialVelocity([out] [retval] FLOAT* value);
                [propput] HRESULT InitialVelocity([in] FLOAT value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.ScalarNaturalMotionAnimation)]
            [uuid(14F8A9AB-976C-5E6F-890B-9A74D07FA39F)]
            interface IScalarNaturalMotionAnimationFactory : IInspectable
            {
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.ShapeVisual)]
            [uuid(A911C80B-A5A5-5ACA-B8FF-C43F08F06143)]
            interface IShapeVisual : IInspectable
            {
                [propget] HRESULT Shapes([out] [retval] Microsoft.UI.Composition.CompositionShapeCollection** value);
                [propget] HRESULT ViewBox([out] [retval] Microsoft.UI.Composition.CompositionViewBox** value);
                [propput] HRESULT ViewBox([in] Microsoft.UI.Composition.CompositionViewBox* value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.SineEasingFunction)]
            [uuid(7FCCB5F8-CB0E-5A01-A26B-98880FF49DC6)]
            interface ISineEasingFunction : IInspectable
            {
                [propget] HRESULT Mode([out] [retval] Microsoft.UI.Composition.CompositionEasingFunctionMode* value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.SpotLight)]
            [uuid(5935496A-0586-5F77-BD03-D5A6BB9E8FA0)]
            interface ISpotLight : IInspectable
            {
                [propget] HRESULT ConstantAttenuation([out] [retval] FLOAT* value);
                [propput] HRESULT ConstantAttenuation([in] FLOAT value);
                [propget] HRESULT CoordinateSpace([out] [retval] Microsoft.UI.Composition.Visual** value);
                [propput] HRESULT CoordinateSpace([in] Microsoft.UI.Composition.Visual* value);
                [propget] HRESULT Direction([out] [retval] Windows.Foundation.Numerics.Vector3* value);
                [propput] HRESULT Direction([in] Windows.Foundation.Numerics.Vector3 value);
                [propget] HRESULT InnerConeAngle([out] [retval] FLOAT* value);
                [propput] HRESULT InnerConeAngle([in] FLOAT value);
                [propget] HRESULT InnerConeAngleInDegrees([out] [retval] FLOAT* value);
                [propput] HRESULT InnerConeAngleInDegrees([in] FLOAT value);
                [propget] HRESULT InnerConeColor([out] [retval] Windows.UI.Color* value);
                [propput] HRESULT InnerConeColor([in] Windows.UI.Color value);
                [propget] HRESULT LinearAttenuation([out] [retval] FLOAT* value);
                [propput] HRESULT LinearAttenuation([in] FLOAT value);
                [propget] HRESULT Offset([out] [retval] Windows.Foundation.Numerics.Vector3* value);
                [propput] HRESULT Offset([in] Windows.Foundation.Numerics.Vector3 value);
                [propget] HRESULT OuterConeAngle([out] [retval] FLOAT* value);
                [propput] HRESULT OuterConeAngle([in] FLOAT value);
                [propget] HRESULT OuterConeAngleInDegrees([out] [retval] FLOAT* value);
                [propput] HRESULT OuterConeAngleInDegrees([in] FLOAT value);
                [propget] HRESULT OuterConeColor([out] [retval] Windows.UI.Color* value);
                [propput] HRESULT OuterConeColor([in] Windows.UI.Color value);
                [propget] HRESULT QuadraticAttenuation([out] [retval] FLOAT* value);
                [propput] HRESULT QuadraticAttenuation([in] FLOAT value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.SpotLight)]
            [uuid(49DD3B50-EC5C-5B6C-BAA1-8504B13E3A67)]
            interface ISpotLight2 : IInspectable
            {
                [propget] HRESULT InnerConeIntensity([out] [retval] FLOAT* value);
                [propput] HRESULT InnerConeIntensity([in] FLOAT value);
                [propget] HRESULT OuterConeIntensity([out] [retval] FLOAT* value);
                [propput] HRESULT OuterConeIntensity([in] FLOAT value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.SpotLight)]
            [uuid(C6919941-0D9F-58C8-91E2-ADEF6E5E70A4)]
            interface ISpotLight3 : IInspectable
            {
                [propget] HRESULT MinAttenuationCutoff([out] [retval] FLOAT* value);
                [propput] HRESULT MinAttenuationCutoff([in] FLOAT value);
                [propget] HRESULT MaxAttenuationCutoff([out] [retval] FLOAT* value);
                [propput] HRESULT MaxAttenuationCutoff([in] FLOAT value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.SpringScalarNaturalMotionAnimation)]
            [uuid(6F720AFD-D3D0-5E78-9C2E-83092F6EA45E)]
            interface ISpringScalarNaturalMotionAnimation : IInspectable
            {
                [propget] HRESULT DampingRatio([out] [retval] FLOAT* value);
                [propput] HRESULT DampingRatio([in] FLOAT value);
                [propget] HRESULT Period([out] [retval] Windows.Foundation.TimeSpan* value);
                [propput] HRESULT Period([in] Windows.Foundation.TimeSpan value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.SpringVector2NaturalMotionAnimation)]
            [uuid(5B4580A4-2594-521E-B288-EAF2C2A16A66)]
            interface ISpringVector2NaturalMotionAnimation : IInspectable
            {
                [propget] HRESULT DampingRatio([out] [retval] FLOAT* value);
                [propput] HRESULT DampingRatio([in] FLOAT value);
                [propget] HRESULT Period([out] [retval] Windows.Foundation.TimeSpan* value);
                [propput] HRESULT Period([in] Windows.Foundation.TimeSpan value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.SpringVector3NaturalMotionAnimation)]
            [uuid(02D9E1C6-7434-5464-A1F6-D644CE1FC9A6)]
            interface ISpringVector3NaturalMotionAnimation : IInspectable
            {
                [propget] HRESULT DampingRatio([out] [retval] FLOAT* value);
                [propput] HRESULT DampingRatio([in] FLOAT value);
                [propget] HRESULT Period([out] [retval] Windows.Foundation.TimeSpan* value);
                [propput] HRESULT Period([in] Windows.Foundation.TimeSpan value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.SpriteVisual)]
            [uuid(7E964632-45E4-5761-806D-5B4022C14F26)]
            interface ISpriteVisual : IInspectable
            {
                [propget] HRESULT Brush([out] [retval] Microsoft.UI.Composition.CompositionBrush** value);
                [propput] HRESULT Brush([in] Microsoft.UI.Composition.CompositionBrush* value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.SpriteVisual)]
            [uuid(3CB43662-9ECF-5128-850D-9EB8437774F0)]
            interface ISpriteVisual2 : IInspectable
            {
                [propget] HRESULT Shadow([out] [retval] Microsoft.UI.Composition.CompositionShadow** value);
                [propput] HRESULT Shadow([in] Microsoft.UI.Composition.CompositionShadow* value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.StepEasingFunction)]
            [uuid(C7B1D4CF-C562-56B3-B4E6-B21326165F71)]
            interface IStepEasingFunction : IInspectable
            {
                [propget] HRESULT FinalStep([out] [retval] INT32* value);
                [propput] HRESULT FinalStep([in] INT32 value);
                [propget] HRESULT InitialStep([out] [retval] INT32* value);
                [propput] HRESULT InitialStep([in] INT32 value);
                [propget] HRESULT IsFinalStepSingleFrame([out] [retval] boolean* value);
                [propput] HRESULT IsFinalStepSingleFrame([in] boolean value);
                [propget] HRESULT IsInitialStepSingleFrame([out] [retval] boolean* value);
                [propput] HRESULT IsInitialStepSingleFrame([in] boolean value);
                [propget] HRESULT StepCount([out] [retval] INT32* value);
                [propput] HRESULT StepCount([in] INT32 value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.Vector2KeyFrameAnimation)]
            [uuid(E9C5E3FD-43B7-526E-9DA0-4C3EA96DB27D)]
            interface IVector2KeyFrameAnimation : IInspectable
            {
                [overload("InsertKeyFrame")] HRESULT InsertKeyFrame([in] FLOAT normalizedProgressKey, [in] Windows.Foundation.Numerics.Vector2 value);
                [overload("InsertKeyFrame")] HRESULT InsertKeyFrameWithEasingFunction([in] FLOAT normalizedProgressKey, [in] Windows.Foundation.Numerics.Vector2 value, [in] Microsoft.UI.Composition.CompositionEasingFunction* easingFunction);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.Vector2NaturalMotionAnimation)]
            [uuid(E00E60CE-D1BE-5C24-885D-C1D0A749D109)]
            interface IVector2NaturalMotionAnimation : IInspectable
            {
                [propget] HRESULT FinalValue([out] [retval] Windows.Foundation.IReference<Windows.Foundation.Numerics.Vector2>** value);
                [propput] HRESULT FinalValue([in] Windows.Foundation.IReference<Windows.Foundation.Numerics.Vector2>* value);
                [propget] HRESULT InitialValue([out] [retval] Windows.Foundation.IReference<Windows.Foundation.Numerics.Vector2>** value);
                [propput] HRESULT InitialValue([in] Windows.Foundation.IReference<Windows.Foundation.Numerics.Vector2>* value);
                [propget] HRESULT InitialVelocity([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propput] HRESULT InitialVelocity([in] Windows.Foundation.Numerics.Vector2 value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.Vector2NaturalMotionAnimation)]
            [uuid(E39AEAD8-80F9-5F64-8644-E9E5646B796F)]
            interface IVector2NaturalMotionAnimationFactory : IInspectable
            {
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.Vector3KeyFrameAnimation)]
            [uuid(D7DA980E-2DDE-5DD1-A40C-D6868DD2449E)]
            interface IVector3KeyFrameAnimation : IInspectable
            {
                [overload("InsertKeyFrame")] HRESULT InsertKeyFrame([in] FLOAT normalizedProgressKey, [in] Windows.Foundation.Numerics.Vector3 value);
                [overload("InsertKeyFrame")] HRESULT InsertKeyFrameWithEasingFunction([in] FLOAT normalizedProgressKey, [in] Windows.Foundation.Numerics.Vector3 value, [in] Microsoft.UI.Composition.CompositionEasingFunction* easingFunction);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.Vector3NaturalMotionAnimation)]
            [uuid(13FEEEF2-D2C0-5B72-AD67-983A19B9B783)]
            interface IVector3NaturalMotionAnimation : IInspectable
            {
                [propget] HRESULT FinalValue([out] [retval] Windows.Foundation.IReference<Windows.Foundation.Numerics.Vector3>** value);
                [propput] HRESULT FinalValue([in] Windows.Foundation.IReference<Windows.Foundation.Numerics.Vector3>* value);
                [propget] HRESULT InitialValue([out] [retval] Windows.Foundation.IReference<Windows.Foundation.Numerics.Vector3>** value);
                [propput] HRESULT InitialValue([in] Windows.Foundation.IReference<Windows.Foundation.Numerics.Vector3>* value);
                [propget] HRESULT InitialVelocity([out] [retval] Windows.Foundation.Numerics.Vector3* value);
                [propput] HRESULT InitialVelocity([in] Windows.Foundation.Numerics.Vector3 value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.Vector3NaturalMotionAnimation)]
            [uuid(428241CB-BE9C-5C2A-939C-EC78AA60BB8A)]
            interface IVector3NaturalMotionAnimationFactory : IInspectable
            {
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.Vector4KeyFrameAnimation)]
            [uuid(16CEA3B9-C5E3-5F6F-B5C7-DA29A31CCFC7)]
            interface IVector4KeyFrameAnimation : IInspectable
            {
                [overload("InsertKeyFrame")] HRESULT InsertKeyFrame([in] FLOAT normalizedProgressKey, [in] Windows.Foundation.Numerics.Vector4 value);
                [overload("InsertKeyFrame")] HRESULT InsertKeyFrameWithEasingFunction([in] FLOAT normalizedProgressKey, [in] Windows.Foundation.Numerics.Vector4 value, [in] Microsoft.UI.Composition.CompositionEasingFunction* easingFunction);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.Visual)]
            [uuid(C0EEAB6C-C897-5AC6-A1C9-63ABD5055B9B)]
            interface IVisual : IInspectable
            {
                [propget] HRESULT AnchorPoint([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propput] HRESULT AnchorPoint([in] Windows.Foundation.Numerics.Vector2 value);
                [propget] HRESULT BackfaceVisibility([out] [retval] Microsoft.UI.Composition.CompositionBackfaceVisibility* value);
                [propput] HRESULT BackfaceVisibility([in] Microsoft.UI.Composition.CompositionBackfaceVisibility value);
                [propget] HRESULT BorderMode([out] [retval] Microsoft.UI.Composition.CompositionBorderMode* value);
                [propput] HRESULT BorderMode([in] Microsoft.UI.Composition.CompositionBorderMode value);
                [propget] HRESULT CenterPoint([out] [retval] Windows.Foundation.Numerics.Vector3* value);
                [propput] HRESULT CenterPoint([in] Windows.Foundation.Numerics.Vector3 value);
                [propget] HRESULT Clip([out] [retval] Microsoft.UI.Composition.CompositionClip** value);
                [propput] HRESULT Clip([in] Microsoft.UI.Composition.CompositionClip* value);
                [propget] HRESULT CompositeMode([out] [retval] Microsoft.UI.Composition.CompositionCompositeMode* value);
                [propput] HRESULT CompositeMode([in] Microsoft.UI.Composition.CompositionCompositeMode value);
                [propget] HRESULT IsVisible([out] [retval] boolean* value);
                [propput] HRESULT IsVisible([in] boolean value);
                [propget] HRESULT Offset([out] [retval] Windows.Foundation.Numerics.Vector3* value);
                [propput] HRESULT Offset([in] Windows.Foundation.Numerics.Vector3 value);
                [propget] HRESULT Opacity([out] [retval] FLOAT* value);
                [propput] HRESULT Opacity([in] FLOAT value);
                [propget] HRESULT Orientation([out] [retval] Windows.Foundation.Numerics.Quaternion* value);
                [propput] HRESULT Orientation([in] Windows.Foundation.Numerics.Quaternion value);
                [propget] HRESULT Parent([out] [retval] Microsoft.UI.Composition.ContainerVisual** value);
                [propget] HRESULT RotationAngle([out] [retval] FLOAT* value);
                [propput] HRESULT RotationAngle([in] FLOAT value);
                [propget] HRESULT RotationAngleInDegrees([out] [retval] FLOAT* value);
                [propput] HRESULT RotationAngleInDegrees([in] FLOAT value);
                [propget] HRESULT RotationAxis([out] [retval] Windows.Foundation.Numerics.Vector3* value);
                [propput] HRESULT RotationAxis([in] Windows.Foundation.Numerics.Vector3 value);
                [propget] HRESULT Scale([out] [retval] Windows.Foundation.Numerics.Vector3* value);
                [propput] HRESULT Scale([in] Windows.Foundation.Numerics.Vector3 value);
                [propget] HRESULT Size([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propput] HRESULT Size([in] Windows.Foundation.Numerics.Vector2 value);
                [propget] HRESULT TransformMatrix([out] [retval] Windows.Foundation.Numerics.Matrix4x4* value);
                [propput] HRESULT TransformMatrix([in] Windows.Foundation.Numerics.Matrix4x4 value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.Visual)]
            [uuid(492A7995-0C5C-5993-A283-52E4DA3050EE)]
            interface IVisual2 : IInspectable
            {
                [propget] HRESULT ParentForTransform([out] [retval] Microsoft.UI.Composition.Visual** value);
                [propput] HRESULT ParentForTransform([in] Microsoft.UI.Composition.Visual* value);
                [propget] HRESULT RelativeOffsetAdjustment([out] [retval] Windows.Foundation.Numerics.Vector3* value);
                [propput] HRESULT RelativeOffsetAdjustment([in] Windows.Foundation.Numerics.Vector3 value);
                [propget] HRESULT RelativeSizeAdjustment([out] [retval] Windows.Foundation.Numerics.Vector2* value);
                [propput] HRESULT RelativeSizeAdjustment([in] Windows.Foundation.Numerics.Vector2 value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.Visual)]
            [uuid(972B70B0-950D-5656-A380-BD4A70775868)]
            interface IVisual3 : IInspectable
            {
                [propget] HRESULT IsHitTestVisible([out] [retval] boolean* value);
                [propput] HRESULT IsHitTestVisible([in] boolean value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.Visual)]
            [uuid(27CB223F-C431-57AC-B61E-D6B7515D579F)]
            interface IVisual4 : IInspectable
            {
                [propget] HRESULT IsPixelSnappingEnabled([out] [retval] boolean* value);
                [propput] HRESULT IsPixelSnappingEnabled([in] boolean value);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.VisualCollection)]
            [uuid(D002896D-67D8-5F69-AB70-581FA3BF370F)]
            interface IVisualCollection : IInspectable
            {
                [propget] HRESULT Count([out] [retval] INT32* value);
                HRESULT InsertAbove([in] Microsoft.UI.Composition.Visual* newChild, [in] Microsoft.UI.Composition.Visual* sibling);
                HRESULT InsertAtBottom([in] Microsoft.UI.Composition.Visual* newChild);
                HRESULT InsertAtTop([in] Microsoft.UI.Composition.Visual* newChild);
                HRESULT InsertBelow([in] Microsoft.UI.Composition.Visual* newChild, [in] Microsoft.UI.Composition.Visual* sibling);
                HRESULT Remove([in] Microsoft.UI.Composition.Visual* child);
                HRESULT RemoveAll();
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [uuid(2180F1F5-B5D8-4BF6-920A-12006E63EFEF)]
            interface IVisualElement : IInspectable
            {
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [uuid(BC950C8D-1DB0-53AA-9DEE-34271CD18CE6)]
            interface IVisualElement2 : IInspectable
            {
                HRESULT GetVisualInternal([out] [retval] Microsoft.UI.Composition.Visual** result);
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.Visual)]
            [uuid(77BB4668-83FA-5BB5-B78B-5E6FDC3D4038)]
            interface IVisualFactory : IInspectable
            {
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [exclusiveto(Microsoft.UI.Composition.VisualUnorderedCollection)]
            [uuid(4A97216E-793E-54E3-96E8-F9DB790119CD)]
            interface IVisualUnorderedCollection : IInspectable
            {
                [propget] HRESULT Count([out] [retval] INT32* value);
                HRESULT Add([in] Microsoft.UI.Composition.Visual* newVisual);
                HRESULT Remove([in] Microsoft.UI.Composition.Visual* visual);
                HRESULT RemoveAll();
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass AmbientLight : Microsoft.UI.Composition.CompositionLight
            {
                [default] interface Microsoft.UI.Composition.IAmbientLight;
                [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.IAmbientLight2;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [static(Microsoft.UI.Composition.IAnimationControllerStatics, Microsoft.Foundation.LiftedContract, 1.0)]
            [threading(both)]
            runtimeclass AnimationController : Microsoft.UI.Composition.CompositionObject
            {
                [default] interface Microsoft.UI.Composition.IAnimationController;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass AnimationPropertyInfo : Microsoft.UI.Composition.CompositionObject
            {
                [default] interface Microsoft.UI.Composition.IAnimationPropertyInfo;
                [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.IAnimationPropertyInfo2;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass BackEasingFunction : Microsoft.UI.Composition.CompositionEasingFunction
            {
                [default] interface Microsoft.UI.Composition.IBackEasingFunction;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass BooleanKeyFrameAnimation : Microsoft.UI.Composition.KeyFrameAnimation
            {
                [default] interface Microsoft.UI.Composition.IBooleanKeyFrameAnimation;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass BounceEasingFunction : Microsoft.UI.Composition.CompositionEasingFunction
            {
                [default] interface Microsoft.UI.Composition.IBounceEasingFunction;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass BounceScalarNaturalMotionAnimation : Microsoft.UI.Composition.ScalarNaturalMotionAnimation
            {
                [default] interface Microsoft.UI.Composition.IBounceScalarNaturalMotionAnimation;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass BounceVector2NaturalMotionAnimation : Microsoft.UI.Composition.Vector2NaturalMotionAnimation
            {
                [default] interface Microsoft.UI.Composition.IBounceVector2NaturalMotionAnimation;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass BounceVector3NaturalMotionAnimation : Microsoft.UI.Composition.Vector3NaturalMotionAnimation
            {
                [default] interface Microsoft.UI.Composition.IBounceVector3NaturalMotionAnimation;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CircleEasingFunction : Microsoft.UI.Composition.CompositionEasingFunction
            {
                [default] interface Microsoft.UI.Composition.ICircleEasingFunction;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass ColorKeyFrameAnimation : Microsoft.UI.Composition.KeyFrameAnimation
            {
                [default] interface Microsoft.UI.Composition.IColorKeyFrameAnimation;
            }

            [composable(Microsoft.UI.Composition.ICompositionAnimationFactory, public, Microsoft.Foundation.LiftedContract, 1.0)]
            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CompositionAnimation : Microsoft.UI.Composition.CompositionObject
            {
                [default] interface Microsoft.UI.Composition.ICompositionAnimation;
                [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.ICompositionAnimation2;
                [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.ICompositionAnimation3;
                [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.ICompositionAnimation4;
                [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.ICompositionAnimationBase;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CompositionAnimationGroup : Microsoft.UI.Composition.CompositionObject
            {
                [default] interface Microsoft.UI.Composition.ICompositionAnimationGroup;
                interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Composition.CompositionAnimation*>;
                interface Microsoft.UI.Composition.ICompositionAnimationBase;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [static(Microsoft.UI.Composition.ICompositionApiInformationStatics, Microsoft.Foundation.LiftedContract, 1.0)]
            [threading(both)]
            runtimeclass CompositionApiInformation
            {
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CompositionBackdropBrush : Microsoft.UI.Composition.CompositionBrush
            {
                [default] interface Microsoft.UI.Composition.ICompositionBackdropBrush;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CompositionBatchCompletedEventArgs : Microsoft.UI.Composition.CompositionObject
            {
                [default] interface Microsoft.UI.Composition.ICompositionBatchCompletedEventArgs;
            }

            [composable(Microsoft.UI.Composition.ICompositionBrushFactory, public, Microsoft.Foundation.LiftedContract, 1.0)]
            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CompositionBrush : Microsoft.UI.Composition.CompositionObject
            {
                [default] interface Microsoft.UI.Composition.ICompositionBrush;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [static(Microsoft.UI.Composition.ICompositionCapabilitiesStatics, Microsoft.Foundation.LiftedContract, 1.0)]
            [threading(both)]
            runtimeclass CompositionCapabilities
            {
                [default] interface Microsoft.UI.Composition.ICompositionCapabilities;
            }

            [composable(Microsoft.UI.Composition.ICompositionClipFactory, public, Microsoft.Foundation.LiftedContract, 1.0)]
            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CompositionClip : Microsoft.UI.Composition.CompositionObject
            {
                [default] interface Microsoft.UI.Composition.ICompositionClip;
                [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.ICompositionClip2;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CompositionColorBrush : Microsoft.UI.Composition.CompositionBrush
            {
                [default] interface Microsoft.UI.Composition.ICompositionColorBrush;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CompositionColorGradientStop : Microsoft.UI.Composition.CompositionObject
            {
                [default] interface Microsoft.UI.Composition.ICompositionColorGradientStop;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass CompositionColorGradientStopCollection
            {
                [default] interface Microsoft.UI.Composition.ICompositionColorGradientStopCollection;
                interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Composition.CompositionColorGradientStop*>;
                interface Windows.Foundation.Collections.IVector<Microsoft.UI.Composition.CompositionColorGradientStop*>;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CompositionCommitBatch : Microsoft.UI.Composition.CompositionObject
            {
                [default] interface Microsoft.UI.Composition.ICompositionCommitBatch;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CompositionContainerShape : Microsoft.UI.Composition.CompositionShape
            {
                [default] interface Microsoft.UI.Composition.ICompositionContainerShape;
            }

            [composable(Microsoft.UI.Composition.ICompositionDrawingSurfaceFactory, public, Microsoft.Foundation.LiftedContract, 1.0)]
            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CompositionDrawingSurface : Microsoft.UI.Composition.CompositionObject
            {
                [default] interface Microsoft.UI.Composition.ICompositionDrawingSurface;
                [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.ICompositionDrawingSurface2;
                interface Microsoft.UI.Composition.ICompositionSurface;
            }

            [composable(Microsoft.UI.Composition.ICompositionEasingFunctionFactory, public, Microsoft.Foundation.LiftedContract, 1.0)]
            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [static(Microsoft.UI.Composition.ICompositionEasingFunctionStatics, Microsoft.Foundation.LiftedContract, 1.0)]
            [threading(both)]
            runtimeclass CompositionEasingFunction : Microsoft.UI.Composition.CompositionObject
            {
                [default] interface Microsoft.UI.Composition.ICompositionEasingFunction;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CompositionEffectBrush : Microsoft.UI.Composition.CompositionBrush
            {
                [default] interface Microsoft.UI.Composition.ICompositionEffectBrush;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CompositionEffectFactory : Microsoft.UI.Composition.CompositionObject
            {
                [default] interface Microsoft.UI.Composition.ICompositionEffectFactory;
            }

            [activatable(Microsoft.UI.Composition.ICompositionEffectSourceParameterFactory, Microsoft.Foundation.LiftedContract, 1.0)]
            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CompositionEffectSourceParameter
            {
                [default] interface Microsoft.UI.Composition.ICompositionEffectSourceParameter;
                interface Windows.Graphics.Effects.IGraphicsEffectSource;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CompositionEllipseGeometry : Microsoft.UI.Composition.CompositionGeometry
            {
                [default] interface Microsoft.UI.Composition.ICompositionEllipseGeometry;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CompositionGeometricClip : Microsoft.UI.Composition.CompositionClip
            {
                [default] interface Microsoft.UI.Composition.ICompositionGeometricClip;
            }

            [composable(Microsoft.UI.Composition.ICompositionGeometryFactory, public, Microsoft.Foundation.LiftedContract, 1.0)]
            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CompositionGeometry : Microsoft.UI.Composition.CompositionObject
            {
                [default] interface Microsoft.UI.Composition.ICompositionGeometry;
            }

            [composable(Microsoft.UI.Composition.ICompositionGradientBrushFactory, public, Microsoft.Foundation.LiftedContract, 1.0)]
            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CompositionGradientBrush : Microsoft.UI.Composition.CompositionBrush
            {
                [default] interface Microsoft.UI.Composition.ICompositionGradientBrush;
                [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.ICompositionGradientBrush2;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CompositionGraphicsDevice : Microsoft.UI.Composition.CompositionObject
            {
                [default] interface Microsoft.UI.Composition.ICompositionGraphicsDevice;
                [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.ICompositionGraphicsDevice2;
                [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.ICompositionGraphicsDevice3;
                [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.ICompositionGraphicsDevice4;
            }

            [composable(Microsoft.UI.Composition.ICompositionLightFactory, public, Microsoft.Foundation.LiftedContract, 1.0)]
            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CompositionLight : Microsoft.UI.Composition.CompositionObject
            {
                [default] interface Microsoft.UI.Composition.ICompositionLight;
                [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.ICompositionLight2;
                [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.ICompositionLight3;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CompositionLineGeometry : Microsoft.UI.Composition.CompositionGeometry
            {
                [default] interface Microsoft.UI.Composition.ICompositionLineGeometry;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CompositionLinearGradientBrush : Microsoft.UI.Composition.CompositionGradientBrush
            {
                [default] interface Microsoft.UI.Composition.ICompositionLinearGradientBrush;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CompositionMaskBrush : Microsoft.UI.Composition.CompositionBrush
            {
                [default] interface Microsoft.UI.Composition.ICompositionMaskBrush;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CompositionMipmapSurface : Microsoft.UI.Composition.CompositionObject
            {
                [default] interface Microsoft.UI.Composition.ICompositionMipmapSurface;
                interface Microsoft.UI.Composition.ICompositionSurface;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CompositionNineGridBrush : Microsoft.UI.Composition.CompositionBrush
            {
                [default] interface Microsoft.UI.Composition.ICompositionNineGridBrush;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            runtimeclass CompositionNotificationDeferral
            {
                [default] interface Microsoft.UI.Composition.ICompositionNotificationDeferral;
            }

            [composable(Microsoft.UI.Composition.ICompositionObjectFactory, public, Microsoft.Foundation.LiftedContract, 1.0)]
            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [static(Microsoft.UI.Composition.ICompositionObjectStatics, Microsoft.Foundation.LiftedContract, 1.0)]
            [threading(both)]
            runtimeclass CompositionObject
            {
                [default] interface Microsoft.UI.Composition.ICompositionObject;
                [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.ICompositionObject2;
                [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.ICompositionObject3;
                [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.ICompositionObject4;
                interface Windows.Foundation.IClosable;
                [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.IAnimationObject;
            }

            [activatable(Microsoft.UI.Composition.ICompositionPathFactory, Microsoft.Foundation.LiftedContract, 1.0)]
            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CompositionPath
            {
                [default] interface Microsoft.UI.Composition.ICompositionPath;
                interface Microsoft.Graphics.IGeometrySource2D;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CompositionPathGeometry : Microsoft.UI.Composition.CompositionGeometry
            {
                [default] interface Microsoft.UI.Composition.ICompositionPathGeometry;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CompositionProjectedShadow : Microsoft.UI.Composition.CompositionObject
            {
                [default] interface Microsoft.UI.Composition.ICompositionProjectedShadow;
                [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.ICompositionProjectedShadow2;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CompositionProjectedShadowCaster : Microsoft.UI.Composition.CompositionObject
            {
                [default] interface Microsoft.UI.Composition.ICompositionProjectedShadowCaster;
                [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.ICompositionProjectedShadowCaster2;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [static(Microsoft.UI.Composition.ICompositionProjectedShadowCasterCollectionStatics, Microsoft.Foundation.LiftedContract, 1.0)]
            [threading(both)]
            runtimeclass CompositionProjectedShadowCasterCollection : Microsoft.UI.Composition.CompositionObject
            {
                [default] interface Microsoft.UI.Composition.ICompositionProjectedShadowCasterCollection;
                interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Composition.CompositionProjectedShadowCaster*>;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CompositionProjectedShadowReceiver : Microsoft.UI.Composition.CompositionObject
            {
                [default] interface Microsoft.UI.Composition.ICompositionProjectedShadowReceiver;
                [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.ICompositionProjectedShadowReceiver2;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CompositionProjectedShadowReceiverUnorderedCollection : Microsoft.UI.Composition.CompositionObject
            {
                [default] interface Microsoft.UI.Composition.ICompositionProjectedShadowReceiverUnorderedCollection;
                interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Composition.CompositionProjectedShadowReceiver*>;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CompositionPropertySet : Microsoft.UI.Composition.CompositionObject
            {
                [default] interface Microsoft.UI.Composition.ICompositionPropertySet;
                [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.ICompositionPropertySet2;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CompositionRadialGradientBrush : Microsoft.UI.Composition.CompositionGradientBrush
            {
                [default] interface Microsoft.UI.Composition.ICompositionRadialGradientBrush;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CompositionRectangleGeometry : Microsoft.UI.Composition.CompositionGeometry
            {
                [default] interface Microsoft.UI.Composition.ICompositionRectangleGeometry;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CompositionRoundedRectangleGeometry : Microsoft.UI.Composition.CompositionGeometry
            {
                [default] interface Microsoft.UI.Composition.ICompositionRoundedRectangleGeometry;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CompositionScopedBatch : Microsoft.UI.Composition.CompositionObject
            {
                [default] interface Microsoft.UI.Composition.ICompositionScopedBatch;
            }

            [composable(Microsoft.UI.Composition.ICompositionShadowFactory, public, Microsoft.Foundation.LiftedContract, 1.0)]
            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CompositionShadow : Microsoft.UI.Composition.CompositionObject
            {
                [default] interface Microsoft.UI.Composition.ICompositionShadow;
            }

            [composable(Microsoft.UI.Composition.ICompositionShapeFactory, public, Microsoft.Foundation.LiftedContract, 1.0)]
            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CompositionShape : Microsoft.UI.Composition.CompositionObject
            {
                [default] interface Microsoft.UI.Composition.ICompositionShape;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CompositionShapeCollection : Microsoft.UI.Composition.CompositionObject
            {
                [default] interface Windows.Foundation.Collections.IVector<Microsoft.UI.Composition.CompositionShape*>;
                interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Composition.CompositionShape*>;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CompositionSpriteShape : Microsoft.UI.Composition.CompositionShape
            {
                [default] interface Microsoft.UI.Composition.ICompositionSpriteShape;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CompositionStrokeDashArray : Microsoft.UI.Composition.CompositionObject
            {
                [default] interface Windows.Foundation.Collections.IVector<FLOAT>;
                interface Windows.Foundation.Collections.IIterable<FLOAT>;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CompositionSurfaceBrush : Microsoft.UI.Composition.CompositionBrush
            {
                [default] interface Microsoft.UI.Composition.ICompositionSurfaceBrush;
                [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.ICompositionSurfaceBrush2;
                [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.ICompositionSurfaceBrush3;
            }

            [composable(Microsoft.UI.Composition.ICompositionTransformFactory, public, Microsoft.Foundation.LiftedContract, 1.0)]
            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CompositionTransform : Microsoft.UI.Composition.CompositionObject
            {
                [default] interface Microsoft.UI.Composition.ICompositionTransform;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CompositionViewBox : Microsoft.UI.Composition.CompositionObject
            {
                [default] interface Microsoft.UI.Composition.ICompositionViewBox;
            }

            [composable(Microsoft.UI.Composition.ICompositionVirtualDrawingSurfaceFactory, public, Microsoft.Foundation.LiftedContract, 1.0)]
            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CompositionVirtualDrawingSurface : Microsoft.UI.Composition.CompositionDrawingSurface
            {
                [default] interface Microsoft.UI.Composition.ICompositionVirtualDrawingSurface;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CompositionVisualSurface : Microsoft.UI.Composition.CompositionObject
            {
                [default] interface Microsoft.UI.Composition.ICompositionVisualSurface;
                interface Microsoft.UI.Composition.ICompositionSurface;
            }

            [activatable(Microsoft.Foundation.LiftedContract, 1.0)]
            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [static(Microsoft.UI.Composition.ICompositorStatics, Microsoft.Foundation.LiftedContract, 1.0)]
            [threading(both)]
            runtimeclass Compositor
            {
                [default] interface Microsoft.UI.Composition.ICompositor;
                [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.ICompositor2;
                [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.ICompositor4;
                [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.ICompositor5;
                [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.ICompositor6;
                [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.ICompositor7;
                [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.ICompositorWithProjectedShadow;
                [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.ICompositorWithRadialGradient;
                [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.ICompositorWithVisualSurface;
                interface Windows.Foundation.IClosable;
            }

            [composable(Microsoft.UI.Composition.IContainerVisualFactory, public, Microsoft.Foundation.LiftedContract, 1.0)]
            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass ContainerVisual : Microsoft.UI.Composition.Visual
            {
                [default] interface Microsoft.UI.Composition.IContainerVisual;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass CubicBezierEasingFunction : Microsoft.UI.Composition.CompositionEasingFunction
            {
                [default] interface Microsoft.UI.Composition.ICubicBezierEasingFunction;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass DistantLight : Microsoft.UI.Composition.CompositionLight
            {
                [default] interface Microsoft.UI.Composition.IDistantLight;
                [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.IDistantLight2;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass DropShadow : Microsoft.UI.Composition.CompositionShadow
            {
                [default] interface Microsoft.UI.Composition.IDropShadow;
                [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.IDropShadow2;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass ElasticEasingFunction : Microsoft.UI.Composition.CompositionEasingFunction
            {
                [default] interface Microsoft.UI.Composition.IElasticEasingFunction;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass ExponentialEasingFunction : Microsoft.UI.Composition.CompositionEasingFunction
            {
                [default] interface Microsoft.UI.Composition.IExponentialEasingFunction;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass ExpressionAnimation : Microsoft.UI.Composition.CompositionAnimation
            {
                [default] interface Microsoft.UI.Composition.IExpressionAnimation;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass ImplicitAnimationCollection : Microsoft.UI.Composition.CompositionObject
            {
                [default] interface Microsoft.UI.Composition.IImplicitAnimationCollection;
                interface Windows.Foundation.Collections.IIterable<Windows.Foundation.Collections.IKeyValuePair<HSTRING, Microsoft.UI.Composition.ICompositionAnimationBase*>*>;
                interface Windows.Foundation.Collections.IMap<HSTRING, Microsoft.UI.Composition.ICompositionAnimationBase*>;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass InitialValueExpressionCollection : Microsoft.UI.Composition.CompositionObject
            {
                [default] interface Windows.Foundation.Collections.IMap<HSTRING, HSTRING>;
                interface Windows.Foundation.Collections.IIterable<Windows.Foundation.Collections.IKeyValuePair<HSTRING, HSTRING>*>;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass InsetClip : Microsoft.UI.Composition.CompositionClip
            {
                [default] interface Microsoft.UI.Composition.IInsetClip;
            }

            [composable(Microsoft.UI.Composition.IKeyFrameAnimationFactory, public, Microsoft.Foundation.LiftedContract, 1.0)]
            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass KeyFrameAnimation : Microsoft.UI.Composition.CompositionAnimation
            {
                [default] interface Microsoft.UI.Composition.IKeyFrameAnimation;
                [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.IKeyFrameAnimation2;
                [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.IKeyFrameAnimation3;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass LayerVisual : Microsoft.UI.Composition.ContainerVisual
            {
                [default] interface Microsoft.UI.Composition.ILayerVisual;
                [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.ILayerVisual2;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass LinearEasingFunction : Microsoft.UI.Composition.CompositionEasingFunction
            {
                [default] interface Microsoft.UI.Composition.ILinearEasingFunction;
            }

            [composable(Microsoft.UI.Composition.INaturalMotionAnimationFactory, public, Microsoft.Foundation.LiftedContract, 1.0)]
            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass NaturalMotionAnimation : Microsoft.UI.Composition.CompositionAnimation
            {
                [default] interface Microsoft.UI.Composition.INaturalMotionAnimation;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass PathKeyFrameAnimation : Microsoft.UI.Composition.KeyFrameAnimation
            {
                [default] interface Microsoft.UI.Composition.IPathKeyFrameAnimation;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass PointLight : Microsoft.UI.Composition.CompositionLight
            {
                [default] interface Microsoft.UI.Composition.IPointLight;
                [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.IPointLight2;
                [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.IPointLight3;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass PowerEasingFunction : Microsoft.UI.Composition.CompositionEasingFunction
            {
                [default] interface Microsoft.UI.Composition.IPowerEasingFunction;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass QuaternionKeyFrameAnimation : Microsoft.UI.Composition.KeyFrameAnimation
            {
                [default] interface Microsoft.UI.Composition.IQuaternionKeyFrameAnimation;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass RectangleClip : Microsoft.UI.Composition.CompositionClip
            {
                [default] interface Microsoft.UI.Composition.IRectangleClip;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass RedirectVisual : Microsoft.UI.Composition.ContainerVisual
            {
                [default] interface Microsoft.UI.Composition.IRedirectVisual;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass RenderingDeviceReplacedEventArgs : Microsoft.UI.Composition.CompositionObject
            {
                [default] interface Microsoft.UI.Composition.IRenderingDeviceReplacedEventArgs;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass ScalarKeyFrameAnimation : Microsoft.UI.Composition.KeyFrameAnimation
            {
                [default] interface Microsoft.UI.Composition.IScalarKeyFrameAnimation;
            }

            [composable(Microsoft.UI.Composition.IScalarNaturalMotionAnimationFactory, public, Microsoft.Foundation.LiftedContract, 1.0)]
            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass ScalarNaturalMotionAnimation : Microsoft.UI.Composition.NaturalMotionAnimation
            {
                [default] interface Microsoft.UI.Composition.IScalarNaturalMotionAnimation;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass ShapeVisual : Microsoft.UI.Composition.ContainerVisual
            {
                [default] interface Microsoft.UI.Composition.IShapeVisual;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass SineEasingFunction : Microsoft.UI.Composition.CompositionEasingFunction
            {
                [default] interface Microsoft.UI.Composition.ISineEasingFunction;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass SpotLight : Microsoft.UI.Composition.CompositionLight
            {
                [default] interface Microsoft.UI.Composition.ISpotLight;
                [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.ISpotLight2;
                [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.ISpotLight3;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass SpringScalarNaturalMotionAnimation : Microsoft.UI.Composition.ScalarNaturalMotionAnimation
            {
                [default] interface Microsoft.UI.Composition.ISpringScalarNaturalMotionAnimation;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass SpringVector2NaturalMotionAnimation : Microsoft.UI.Composition.Vector2NaturalMotionAnimation
            {
                [default] interface Microsoft.UI.Composition.ISpringVector2NaturalMotionAnimation;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass SpringVector3NaturalMotionAnimation : Microsoft.UI.Composition.Vector3NaturalMotionAnimation
            {
                [default] interface Microsoft.UI.Composition.ISpringVector3NaturalMotionAnimation;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass SpriteVisual : Microsoft.UI.Composition.ContainerVisual
            {
                [default] interface Microsoft.UI.Composition.ISpriteVisual;
                [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.ISpriteVisual2;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass StepEasingFunction : Microsoft.UI.Composition.CompositionEasingFunction
            {
                [default] interface Microsoft.UI.Composition.IStepEasingFunction;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass Vector2KeyFrameAnimation : Microsoft.UI.Composition.KeyFrameAnimation
            {
                [default] interface Microsoft.UI.Composition.IVector2KeyFrameAnimation;
            }

            [composable(Microsoft.UI.Composition.IVector2NaturalMotionAnimationFactory, public, Microsoft.Foundation.LiftedContract, 1.0)]
            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass Vector2NaturalMotionAnimation : Microsoft.UI.Composition.NaturalMotionAnimation
            {
                [default] interface Microsoft.UI.Composition.IVector2NaturalMotionAnimation;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass Vector3KeyFrameAnimation : Microsoft.UI.Composition.KeyFrameAnimation
            {
                [default] interface Microsoft.UI.Composition.IVector3KeyFrameAnimation;
            }

            [composable(Microsoft.UI.Composition.IVector3NaturalMotionAnimationFactory, public, Microsoft.Foundation.LiftedContract, 1.0)]
            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass Vector3NaturalMotionAnimation : Microsoft.UI.Composition.NaturalMotionAnimation
            {
                [default] interface Microsoft.UI.Composition.IVector3NaturalMotionAnimation;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass Vector4KeyFrameAnimation : Microsoft.UI.Composition.KeyFrameAnimation
            {
                [default] interface Microsoft.UI.Composition.IVector4KeyFrameAnimation;
            }

            [composable(Microsoft.UI.Composition.IVisualFactory, public, Microsoft.Foundation.LiftedContract, 1.0)]
            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass Visual : Microsoft.UI.Composition.CompositionObject
            {
                [default] interface Microsoft.UI.Composition.IVisual;
                [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.IVisual2;
                [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.IVisual3;
                [contract(Microsoft.Foundation.LiftedContract, 1.0)] interface Microsoft.UI.Composition.IVisual4;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass VisualCollection : Microsoft.UI.Composition.CompositionObject
            {
                [default] interface Microsoft.UI.Composition.IVisualCollection;
                interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Composition.Visual*>;
            }

            [contract(Microsoft.Foundation.LiftedContract, 1.0)]
            [marshaling_behavior(agile)]
            [threading(both)]
            runtimeclass VisualUnorderedCollection : Microsoft.UI.Composition.CompositionObject
            {
                [default] interface Microsoft.UI.Composition.IVisualUnorderedCollection;
                interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Composition.Visual*>;
            }
        }
    }
}
