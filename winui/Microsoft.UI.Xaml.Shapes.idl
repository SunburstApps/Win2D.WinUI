//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "windowscontracts.idl";
import "Windows.Foundation.idl";
import "Microsoft.UI.Composition.idl";
import "Microsoft.UI.Xaml.idl";
import "Microsoft.UI.Xaml.Media.idl";

// Forward Declare
namespace Microsoft
{
    namespace UI
    {
        namespace Composition
        {
            runtimeclass CompositionBrush;
        }
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            runtimeclass DependencyProperty;
        }
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Media
            {
                runtimeclass Brush;

                runtimeclass DoubleCollection;

                typedef enum FillRule FillRule;

                runtimeclass Geometry;

                typedef enum PenLineCap PenLineCap;

                typedef enum PenLineJoin PenLineJoin;

                runtimeclass PointCollection;

                typedef enum Stretch Stretch;

                runtimeclass Transform;
            }
        }
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            apicontract WinUIContract;
        }
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Shapes
            {
                interface IEllipse;

                interface ILine;

                interface ILineStatics;

                interface IPath;

                interface IPathFactory;

                interface IPathStatics;

                interface IPolygon;

                interface IPolygonStatics;

                interface IPolyline;

                interface IPolylineStatics;

                interface IRectangle;

                interface IRectangleStatics;

                interface IShape;

                interface IShapeFactory;

                interface IShapeStatics;

                runtimeclass Ellipse;

                runtimeclass Line;

                runtimeclass Path;

                runtimeclass Polygon;

                runtimeclass Polyline;

                runtimeclass Rectangle;

                runtimeclass Shape;
            }
        }
    }
}

// Generic instantiations

// Type definition
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Shapes
            {
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Shapes.Ellipse)]
                [uuid(805C39AA-FA8A-5E0B-9847-4AB81B42A3DF)]
                interface IEllipse : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Shapes.Line)]
                [uuid(507B3858-AF7E-559B-A87E-4CC6A5D8BA96)]
                interface ILine : IInspectable
                {
                    [propget] HRESULT X1([out] [retval] DOUBLE* value);
                    [propput] HRESULT X1([in] DOUBLE value);
                    [propget] HRESULT Y1([out] [retval] DOUBLE* value);
                    [propput] HRESULT Y1([in] DOUBLE value);
                    [propget] HRESULT X2([out] [retval] DOUBLE* value);
                    [propput] HRESULT X2([in] DOUBLE value);
                    [propget] HRESULT Y2([out] [retval] DOUBLE* value);
                    [propput] HRESULT Y2([in] DOUBLE value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Shapes.Line)]
                [uuid(A425BF93-F1F3-5DCB-997E-B6A26F7AE8C0)]
                interface ILineStatics : IInspectable
                {
                    [propget] HRESULT X1Property([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT Y1Property([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT X2Property([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT Y2Property([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Shapes.Path)]
                [uuid(757D1CD8-0EC0-55C5-B400-66657E493E78)]
                interface IPath : IInspectable
                {
                    [propget] HRESULT Data([out] [retval] Microsoft.UI.Xaml.Media.Geometry** value);
                    [propput] HRESULT Data([in] Microsoft.UI.Xaml.Media.Geometry* value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Shapes.Path)]
                [uuid(5E82E4C9-7502-5B1F-B940-C3346A71362A)]
                interface IPathFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Shapes.Path** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Shapes.Path)]
                [uuid(2146D36F-721C-5B54-AF7D-60F3ADC4FBCA)]
                interface IPathStatics : IInspectable
                {
                    [propget] HRESULT DataProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Shapes.Polygon)]
                [uuid(FA126347-D1D4-54DD-B1A4-C35019397944)]
                interface IPolygon : IInspectable
                {
                    [propget] HRESULT FillRule([out] [retval] Microsoft.UI.Xaml.Media.FillRule* value);
                    [propput] HRESULT FillRule([in] Microsoft.UI.Xaml.Media.FillRule value);
                    [propget] HRESULT Points([out] [retval] Microsoft.UI.Xaml.Media.PointCollection** value);
                    [propput] HRESULT Points([in] Microsoft.UI.Xaml.Media.PointCollection* value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Shapes.Polygon)]
                [uuid(85DDBADA-9E37-5971-A9AA-DCE31F9CF67A)]
                interface IPolygonStatics : IInspectable
                {
                    [propget] HRESULT FillRuleProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PointsProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Shapes.Polyline)]
                [uuid(C7F0BEC6-184C-5D96-8102-04DD211E100C)]
                interface IPolyline : IInspectable
                {
                    [propget] HRESULT FillRule([out] [retval] Microsoft.UI.Xaml.Media.FillRule* value);
                    [propput] HRESULT FillRule([in] Microsoft.UI.Xaml.Media.FillRule value);
                    [propget] HRESULT Points([out] [retval] Microsoft.UI.Xaml.Media.PointCollection** value);
                    [propput] HRESULT Points([in] Microsoft.UI.Xaml.Media.PointCollection* value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Shapes.Polyline)]
                [uuid(48840FE7-D735-5080-9C6D-2862665CDDA0)]
                interface IPolylineStatics : IInspectable
                {
                    [propget] HRESULT FillRuleProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT PointsProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Shapes.Rectangle)]
                [uuid(BF7D30B9-152C-556E-9F10-D0B7EBA4E52F)]
                interface IRectangle : IInspectable
                {
                    [propget] HRESULT RadiusX([out] [retval] DOUBLE* value);
                    [propput] HRESULT RadiusX([in] DOUBLE value);
                    [propget] HRESULT RadiusY([out] [retval] DOUBLE* value);
                    [propput] HRESULT RadiusY([in] DOUBLE value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Shapes.Rectangle)]
                [uuid(3CC3CC79-C332-5AD0-8743-1F1B1E670A86)]
                interface IRectangleStatics : IInspectable
                {
                    [propget] HRESULT RadiusXProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT RadiusYProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Shapes.Shape)]
                [uuid(9941AAD3-6AF2-5BA2-9085-8506D5F2485E)]
                interface IShape : IInspectable
                {
                    [propget] HRESULT Fill([out] [retval] Microsoft.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT Fill([in] Microsoft.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT Stroke([out] [retval] Microsoft.UI.Xaml.Media.Brush** value);
                    [propput] HRESULT Stroke([in] Microsoft.UI.Xaml.Media.Brush* value);
                    [propget] HRESULT StrokeMiterLimit([out] [retval] DOUBLE* value);
                    [propput] HRESULT StrokeMiterLimit([in] DOUBLE value);
                    [propget] HRESULT StrokeThickness([out] [retval] DOUBLE* value);
                    [propput] HRESULT StrokeThickness([in] DOUBLE value);
                    [propget] HRESULT StrokeStartLineCap([out] [retval] Microsoft.UI.Xaml.Media.PenLineCap* value);
                    [propput] HRESULT StrokeStartLineCap([in] Microsoft.UI.Xaml.Media.PenLineCap value);
                    [propget] HRESULT StrokeEndLineCap([out] [retval] Microsoft.UI.Xaml.Media.PenLineCap* value);
                    [propput] HRESULT StrokeEndLineCap([in] Microsoft.UI.Xaml.Media.PenLineCap value);
                    [propget] HRESULT StrokeLineJoin([out] [retval] Microsoft.UI.Xaml.Media.PenLineJoin* value);
                    [propput] HRESULT StrokeLineJoin([in] Microsoft.UI.Xaml.Media.PenLineJoin value);
                    [propget] HRESULT StrokeDashOffset([out] [retval] DOUBLE* value);
                    [propput] HRESULT StrokeDashOffset([in] DOUBLE value);
                    [propget] HRESULT StrokeDashCap([out] [retval] Microsoft.UI.Xaml.Media.PenLineCap* value);
                    [propput] HRESULT StrokeDashCap([in] Microsoft.UI.Xaml.Media.PenLineCap value);
                    [propget] HRESULT StrokeDashArray([out] [retval] Microsoft.UI.Xaml.Media.DoubleCollection** value);
                    [propput] HRESULT StrokeDashArray([in] Microsoft.UI.Xaml.Media.DoubleCollection* value);
                    [propget] HRESULT Stretch([out] [retval] Microsoft.UI.Xaml.Media.Stretch* value);
                    [propput] HRESULT Stretch([in] Microsoft.UI.Xaml.Media.Stretch value);
                    [propget] HRESULT GeometryTransform([out] [retval] Microsoft.UI.Xaml.Media.Transform** value);
                    HRESULT GetAlphaMask([out] [retval] Microsoft.UI.Composition.CompositionBrush** result);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Shapes.Shape)]
                [uuid(4FECAFAF-8265-5252-BA5C-F43639F974A5)]
                interface IShapeFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Xaml.Shapes.Shape** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Shapes.Shape)]
                [uuid(EA407C43-8A09-587A-958A-4DD17D217CE1)]
                interface IShapeStatics : IInspectable
                {
                    [propget] HRESULT FillProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT StrokeProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT StrokeMiterLimitProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT StrokeThicknessProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT StrokeStartLineCapProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT StrokeEndLineCapProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT StrokeLineJoinProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT StrokeDashOffsetProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT StrokeDashCapProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT StrokeDashArrayProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT StretchProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [threading(both)]
                runtimeclass Ellipse : Microsoft.UI.Xaml.Shapes.Shape
                {
                    [default] interface Microsoft.UI.Xaml.Shapes.IEllipse;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Shapes.ILineStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass Line : Microsoft.UI.Xaml.Shapes.Shape
                {
                    [default] interface Microsoft.UI.Xaml.Shapes.ILine;
                }

                [composable(Microsoft.UI.Xaml.Shapes.IPathFactory, public, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Shapes.IPathStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass Path : Microsoft.UI.Xaml.Shapes.Shape
                {
                    [default] interface Microsoft.UI.Xaml.Shapes.IPath;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Shapes.IPolygonStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass Polygon : Microsoft.UI.Xaml.Shapes.Shape
                {
                    [default] interface Microsoft.UI.Xaml.Shapes.IPolygon;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Shapes.IPolylineStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass Polyline : Microsoft.UI.Xaml.Shapes.Shape
                {
                    [default] interface Microsoft.UI.Xaml.Shapes.IPolyline;
                }

                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Shapes.IRectangleStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass Rectangle : Microsoft.UI.Xaml.Shapes.Shape
                {
                    [default] interface Microsoft.UI.Xaml.Shapes.IRectangle;
                }

                [composable(Microsoft.UI.Xaml.Shapes.IShapeFactory, protected, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Shapes.IShapeStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass Shape : Microsoft.UI.Xaml.FrameworkElement
                {
                    [default] interface Microsoft.UI.Xaml.Shapes.IShape;
                }
            }
        }
    }
}
