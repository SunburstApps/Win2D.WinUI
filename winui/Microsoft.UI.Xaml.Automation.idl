//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "windowscontracts.idl";
import "Windows.Foundation.idl";
import "Microsoft.UI.Xaml.idl";
import "Microsoft.UI.Xaml.Automation.Peers.idl";

// Forward Declare
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Automation
            {
                namespace Peers
                {
                    typedef enum AccessibilityView AccessibilityView;

                    typedef enum AutomationHeadingLevel AutomationHeadingLevel;

                    typedef enum AutomationLandmarkType AutomationLandmarkType;

                    typedef enum AutomationLiveSetting AutomationLiveSetting;
                }
            }
        }
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            runtimeclass DependencyObject;

            runtimeclass DependencyProperty;

            runtimeclass UIElement;

            apicontract WinUIContract;
        }
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Automation
            {
                typedef enum AnnotationType AnnotationType;

                typedef enum AutomationActiveEnd AutomationActiveEnd;

                typedef enum AutomationAnimationStyle AutomationAnimationStyle;

                typedef enum AutomationBulletStyle AutomationBulletStyle;

                typedef enum AutomationCaretBidiMode AutomationCaretBidiMode;

                typedef enum AutomationCaretPosition AutomationCaretPosition;

                typedef enum AutomationFlowDirections AutomationFlowDirections;

                typedef enum AutomationOutlineStyles AutomationOutlineStyles;

                typedef enum AutomationStyleId AutomationStyleId;

                typedef enum AutomationTextDecorationLineStyle AutomationTextDecorationLineStyle;

                typedef enum AutomationTextEditChangeType AutomationTextEditChangeType;

                typedef enum DockPosition DockPosition;

                typedef enum ExpandCollapseState ExpandCollapseState;

                typedef enum RowOrColumnMajor RowOrColumnMajor;

                typedef enum ScrollAmount ScrollAmount;

                typedef enum SupportedTextSelection SupportedTextSelection;

                typedef enum SynchronizedInputType SynchronizedInputType;

                typedef enum ToggleState ToggleState;

                typedef enum WindowInteractionState WindowInteractionState;

                typedef enum WindowVisualState WindowVisualState;

                typedef enum ZoomUnit ZoomUnit;

                interface IAnnotationPatternIdentifiers;

                interface IAnnotationPatternIdentifiersStatics;

                interface IAutomationAnnotation;

                interface IAutomationAnnotationFactory;

                interface IAutomationAnnotationStatics;

                interface IAutomationElementIdentifiers;

                interface IAutomationElementIdentifiersStatics;

                interface IAutomationProperties;

                interface IAutomationPropertiesStatics;

                interface IAutomationProperty;

                interface IDockPatternIdentifiers;

                interface IDockPatternIdentifiersStatics;

                interface IDragPatternIdentifiers;

                interface IDragPatternIdentifiersStatics;

                interface IDropTargetPatternIdentifiers;

                interface IDropTargetPatternIdentifiersStatics;

                interface IExpandCollapsePatternIdentifiers;

                interface IExpandCollapsePatternIdentifiersStatics;

                interface IGridItemPatternIdentifiers;

                interface IGridItemPatternIdentifiersStatics;

                interface IGridPatternIdentifiers;

                interface IGridPatternIdentifiersStatics;

                interface IMultipleViewPatternIdentifiers;

                interface IMultipleViewPatternIdentifiersStatics;

                interface IRangeValuePatternIdentifiers;

                interface IRangeValuePatternIdentifiersStatics;

                interface IScrollPatternIdentifiers;

                interface IScrollPatternIdentifiersStatics;

                interface ISelectionItemPatternIdentifiers;

                interface ISelectionItemPatternIdentifiersStatics;

                interface ISelectionPatternIdentifiers;

                interface ISelectionPatternIdentifiersStatics;

                interface ISpreadsheetItemPatternIdentifiers;

                interface ISpreadsheetItemPatternIdentifiersStatics;

                interface IStylesPatternIdentifiers;

                interface IStylesPatternIdentifiersStatics;

                interface ITableItemPatternIdentifiers;

                interface ITableItemPatternIdentifiersStatics;

                interface ITablePatternIdentifiers;

                interface ITablePatternIdentifiersStatics;

                interface ITogglePatternIdentifiers;

                interface ITogglePatternIdentifiersStatics;

                interface ITransformPattern2Identifiers;

                interface ITransformPattern2IdentifiersStatics;

                interface ITransformPatternIdentifiers;

                interface ITransformPatternIdentifiersStatics;

                interface IValuePatternIdentifiers;

                interface IValuePatternIdentifiersStatics;

                interface IWindowPatternIdentifiers;

                interface IWindowPatternIdentifiersStatics;

                runtimeclass AnnotationPatternIdentifiers;

                runtimeclass AutomationAnnotation;

                runtimeclass AutomationElementIdentifiers;

                runtimeclass AutomationProperties;

                runtimeclass AutomationProperty;

                runtimeclass DockPatternIdentifiers;

                runtimeclass DragPatternIdentifiers;

                runtimeclass DropTargetPatternIdentifiers;

                runtimeclass ExpandCollapsePatternIdentifiers;

                runtimeclass GridItemPatternIdentifiers;

                runtimeclass GridPatternIdentifiers;

                runtimeclass MultipleViewPatternIdentifiers;

                runtimeclass RangeValuePatternIdentifiers;

                runtimeclass ScrollPatternIdentifiers;

                runtimeclass SelectionItemPatternIdentifiers;

                runtimeclass SelectionPatternIdentifiers;

                runtimeclass SpreadsheetItemPatternIdentifiers;

                runtimeclass StylesPatternIdentifiers;

                runtimeclass TableItemPatternIdentifiers;

                runtimeclass TablePatternIdentifiers;

                runtimeclass TogglePatternIdentifiers;

                runtimeclass TransformPattern2Identifiers;

                runtimeclass TransformPatternIdentifiers;

                runtimeclass ValuePatternIdentifiers;

                runtimeclass WindowPatternIdentifiers;
            }
        }
    }
}

// Generic instantiations
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Automation
            {
                declare
                {
                    interface Windows.Foundation.Collections.IIterable<Microsoft.UI.Xaml.Automation.AutomationAnnotation*>;

                    interface Windows.Foundation.Collections.IIterator<Microsoft.UI.Xaml.Automation.AutomationAnnotation*>;

                    interface Windows.Foundation.Collections.IVectorView<Microsoft.UI.Xaml.Automation.AutomationAnnotation*>;

                    interface Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Automation.AutomationAnnotation*>;
                }
            }
        }
    }
}

// Type definition
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Automation
            {
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                enum AnnotationType
                {
                    Unknown                = 60000,
                    SpellingError          = 60001,
                    GrammarError           = 60002,
                    Comment                = 60003,
                    FormulaError           = 60004,
                    TrackChanges           = 60005,
                    Header                 = 60006,
                    Footer                 = 60007,
                    Highlighted            = 60008,
                    Endnote                = 60009,
                    Footnote               = 60010,
                    InsertionChange        = 60011,
                    DeletionChange         = 60012,
                    MoveChange             = 60013,
                    FormatChange           = 60014,
                    UnsyncedChange         = 60015,
                    EditingLockedChange    = 60016,
                    ExternalChange         = 60017,
                    ConflictingChange      = 60018,
                    Author                 = 60019,
                    AdvancedProofingIssue  = 60020,
                    DataValidationError    = 60021,
                    CircularReferenceError = 60022
                };

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                enum AutomationActiveEnd
                {
                    None  = 0,
                    Start = 1,
                    End   = 2
                };

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                enum AutomationAnimationStyle
                {
                    None               = 0,
                    LasVegasLights     = 1,
                    BlinkingBackground = 2,
                    SparkleText        = 3,
                    MarchingBlackAnts  = 4,
                    MarchingRedAnts    = 5,
                    Shimmer            = 6,
                    Other              = 7
                };

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                enum AutomationBulletStyle
                {
                    None               = 0,
                    HollowRoundBullet  = 1,
                    FilledRoundBullet  = 2,
                    HollowSquareBullet = 3,
                    FilledSquareBullet = 4,
                    DashBullet         = 5,
                    Other              = 6
                };

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                enum AutomationCaretBidiMode
                {
                    LTR = 0,
                    RTL = 1
                };

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                enum AutomationCaretPosition
                {
                    Unknown         = 0,
                    EndOfLine       = 1,
                    BeginningOfLine = 2
                };

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                enum AutomationFlowDirections
                {
                    Default     = 0,
                    RightToLeft = 1,
                    BottomToTop = 2,
                    Vertical    = 3
                };

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                enum AutomationOutlineStyles
                {
                    None     = 0,
                    Outline  = 1,
                    Shadow   = 2,
                    Engraved = 3,
                    Embossed = 4
                };

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                enum AutomationStyleId
                {
                    Heading1     = 70001,
                    Heading2     = 70002,
                    Heading3     = 70003,
                    Heading4     = 70004,
                    Heading5     = 70005,
                    Heading6     = 70006,
                    Heading7     = 70007,
                    Heading8     = 70008,
                    Heading9     = 70009,
                    Title        = 70010,
                    Subtitle     = 70011,
                    Normal       = 70012,
                    Emphasis     = 70013,
                    Quote        = 70014,
                    BulletedList = 70015
                };

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                enum AutomationTextDecorationLineStyle
                {
                    None            = 0,
                    Single          = 1,
                    WordsOnly       = 2,
                    Double          = 3,
                    Dot             = 4,
                    Dash            = 5,
                    DashDot         = 6,
                    DashDotDot      = 7,
                    Wavy            = 8,
                    ThickSingle     = 9,
                    DoubleWavy      = 10,
                    ThickWavy       = 11,
                    LongDash        = 12,
                    ThickDash       = 13,
                    ThickDashDot    = 14,
                    ThickDashDotDot = 15,
                    ThickDot        = 16,
                    ThickLongDash   = 17,
                    Other           = 18
                };

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                enum AutomationTextEditChangeType
                {
                    None                 = 0,
                    AutoCorrect          = 1,
                    Composition          = 2,
                    CompositionFinalized = 3
                };

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                enum DockPosition
                {
                    Top    = 0,
                    Left   = 1,
                    Bottom = 2,
                    Right  = 3,
                    Fill   = 4,
                    None   = 5
                };

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                enum ExpandCollapseState
                {
                    Collapsed         = 0,
                    Expanded          = 1,
                    PartiallyExpanded = 2,
                    LeafNode          = 3
                };

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                enum RowOrColumnMajor
                {
                    RowMajor      = 0,
                    ColumnMajor   = 1,
                    Indeterminate = 2
                };

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                enum ScrollAmount
                {
                    LargeDecrement = 0,
                    SmallDecrement = 1,
                    NoAmount       = 2,
                    LargeIncrement = 3,
                    SmallIncrement = 4
                };

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                enum SupportedTextSelection
                {
                    None     = 0,
                    Single   = 1,
                    Multiple = 2
                };

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                enum SynchronizedInputType
                {
                    KeyUp          = 1,
                    KeyDown        = 2,
                    LeftMouseUp    = 4,
                    LeftMouseDown  = 8,
                    RightMouseUp   = 16,
                    RightMouseDown = 32
                };

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                enum ToggleState
                {
                    Off           = 0,
                    On            = 1,
                    Indeterminate = 2
                };

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                enum WindowInteractionState
                {
                    Running                 = 0,
                    Closing                 = 1,
                    ReadyForUserInteraction = 2,
                    BlockedByModalWindow    = 3,
                    NotResponding           = 4
                };

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                enum WindowVisualState
                {
                    Normal    = 0,
                    Maximized = 1,
                    Minimized = 2
                };

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                enum ZoomUnit
                {
                    NoAmount       = 0,
                    LargeDecrement = 1,
                    SmallDecrement = 2,
                    LargeIncrement = 3,
                    SmallIncrement = 4
                };

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.AnnotationPatternIdentifiers)]
                [uuid(92D76915-0CD3-59CD-8AE0-C9004628BA1E)]
                interface IAnnotationPatternIdentifiers : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.AnnotationPatternIdentifiers)]
                [uuid(20A136E2-4A47-5DE5-9E1E-ECFC6D92F52A)]
                interface IAnnotationPatternIdentifiersStatics : IInspectable
                {
                    [propget] HRESULT AnnotationTypeIdProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT AnnotationTypeNameProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT AuthorProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT DateTimeProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT TargetProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.AutomationAnnotation)]
                [uuid(C2CC46AD-1414-5F1B-808A-89E5D53D82FE)]
                interface IAutomationAnnotation : IInspectable
                {
                    [propget] HRESULT Type([out] [retval] Microsoft.UI.Xaml.Automation.AnnotationType* value);
                    [propput] HRESULT Type([in] Microsoft.UI.Xaml.Automation.AnnotationType value);
                    [propget] HRESULT Element([out] [retval] Microsoft.UI.Xaml.UIElement** value);
                    [propput] HRESULT Element([in] Microsoft.UI.Xaml.UIElement* value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.AutomationAnnotation)]
                [uuid(95F82773-EAC5-572E-87DE-24D9514B9A89)]
                interface IAutomationAnnotationFactory : IInspectable
                {
                    HRESULT CreateInstance([in] Microsoft.UI.Xaml.Automation.AnnotationType type, [out] [retval] Microsoft.UI.Xaml.Automation.AutomationAnnotation** value);
                    HRESULT CreateWithElementParameter([in] Microsoft.UI.Xaml.Automation.AnnotationType type, [in] Microsoft.UI.Xaml.UIElement* element, [out] [retval] Microsoft.UI.Xaml.Automation.AutomationAnnotation** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.AutomationAnnotation)]
                [uuid(C5ABDC1E-FC26-5444-A8B3-59B2C0A95578)]
                interface IAutomationAnnotationStatics : IInspectable
                {
                    [propget] HRESULT TypeProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT ElementProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers)]
                [uuid(2FB51A33-B0CF-5A4C-9ED3-267ECA7AEEFC)]
                interface IAutomationElementIdentifiers : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.AutomationElementIdentifiers)]
                [uuid(72AF6B8C-3E12-5E7A-A2EC-26DC193F9DF9)]
                interface IAutomationElementIdentifiersStatics : IInspectable
                {
                    [propget] HRESULT AcceleratorKeyProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT AccessKeyProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT AutomationIdProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT BoundingRectangleProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT ClassNameProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT ClickablePointProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT ControlTypeProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT HasKeyboardFocusProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT HelpTextProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT IsContentElementProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT IsControlElementProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT IsEnabledProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT IsKeyboardFocusableProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT IsOffscreenProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT IsPasswordProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT IsRequiredForFormProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT ItemStatusProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT ItemTypeProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT LabeledByProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT LocalizedControlTypeProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT NameProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT OrientationProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT LiveSettingProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT ControlledPeersProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT PositionInSetProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT SizeOfSetProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT LevelProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT AnnotationsProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT LandmarkTypeProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT LocalizedLandmarkTypeProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT IsPeripheralProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT IsDataValidForFormProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT FullDescriptionProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT DescribedByProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT FlowsToProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT FlowsFromProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT CultureProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT HeadingLevelProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT IsDialogProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.AutomationProperties)]
                [uuid(525C6A71-DD8A-52A0-977B-DB1B02F8E896)]
                interface IAutomationProperties : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.AutomationProperties)]
                [uuid(B1E3E0F3-112F-5966-87DC-7862D4AD50E5)]
                interface IAutomationPropertiesStatics : IInspectable
                {
                    [propget] HRESULT AcceleratorKeyProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetAcceleratorKey([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] HSTRING* result);
                    HRESULT SetAcceleratorKey([in] Microsoft.UI.Xaml.DependencyObject* element, [in] HSTRING value);
                    [propget] HRESULT AccessKeyProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetAccessKey([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] HSTRING* result);
                    HRESULT SetAccessKey([in] Microsoft.UI.Xaml.DependencyObject* element, [in] HSTRING value);
                    [propget] HRESULT AutomationIdProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetAutomationId([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] HSTRING* result);
                    HRESULT SetAutomationId([in] Microsoft.UI.Xaml.DependencyObject* element, [in] HSTRING value);
                    [propget] HRESULT HelpTextProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetHelpText([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] HSTRING* result);
                    HRESULT SetHelpText([in] Microsoft.UI.Xaml.DependencyObject* element, [in] HSTRING value);
                    [propget] HRESULT IsRequiredForFormProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetIsRequiredForForm([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] boolean* result);
                    HRESULT SetIsRequiredForForm([in] Microsoft.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT ItemStatusProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetItemStatus([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] HSTRING* result);
                    HRESULT SetItemStatus([in] Microsoft.UI.Xaml.DependencyObject* element, [in] HSTRING value);
                    [propget] HRESULT ItemTypeProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetItemType([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] HSTRING* result);
                    HRESULT SetItemType([in] Microsoft.UI.Xaml.DependencyObject* element, [in] HSTRING value);
                    [propget] HRESULT LabeledByProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetLabeledBy([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] Microsoft.UI.Xaml.UIElement** result);
                    HRESULT SetLabeledBy([in] Microsoft.UI.Xaml.DependencyObject* element, [in] Microsoft.UI.Xaml.UIElement* value);
                    [propget] HRESULT NameProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetName([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] HSTRING* result);
                    HRESULT SetName([in] Microsoft.UI.Xaml.DependencyObject* element, [in] HSTRING value);
                    [propget] HRESULT LiveSettingProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetLiveSetting([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] Microsoft.UI.Xaml.Automation.Peers.AutomationLiveSetting* result);
                    HRESULT SetLiveSetting([in] Microsoft.UI.Xaml.DependencyObject* element, [in] Microsoft.UI.Xaml.Automation.Peers.AutomationLiveSetting value);
                    [propget] HRESULT AccessibilityViewProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetAccessibilityView([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] Microsoft.UI.Xaml.Automation.Peers.AccessibilityView* result);
                    HRESULT SetAccessibilityView([in] Microsoft.UI.Xaml.DependencyObject* element, [in] Microsoft.UI.Xaml.Automation.Peers.AccessibilityView value);
                    [propget] HRESULT ControlledPeersProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetControlledPeers([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.UIElement*>** result);
                    [propget] HRESULT PositionInSetProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetPositionInSet([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] INT32* result);
                    HRESULT SetPositionInSet([in] Microsoft.UI.Xaml.DependencyObject* element, [in] INT32 value);
                    [propget] HRESULT SizeOfSetProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetSizeOfSet([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] INT32* result);
                    HRESULT SetSizeOfSet([in] Microsoft.UI.Xaml.DependencyObject* element, [in] INT32 value);
                    [propget] HRESULT LevelProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetLevel([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] INT32* result);
                    HRESULT SetLevel([in] Microsoft.UI.Xaml.DependencyObject* element, [in] INT32 value);
                    [propget] HRESULT AnnotationsProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetAnnotations([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.Automation.AutomationAnnotation*>** result);
                    [propget] HRESULT LandmarkTypeProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetLandmarkType([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] Microsoft.UI.Xaml.Automation.Peers.AutomationLandmarkType* result);
                    HRESULT SetLandmarkType([in] Microsoft.UI.Xaml.DependencyObject* element, [in] Microsoft.UI.Xaml.Automation.Peers.AutomationLandmarkType value);
                    [propget] HRESULT LocalizedLandmarkTypeProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetLocalizedLandmarkType([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] HSTRING* result);
                    HRESULT SetLocalizedLandmarkType([in] Microsoft.UI.Xaml.DependencyObject* element, [in] HSTRING value);
                    [propget] HRESULT IsPeripheralProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetIsPeripheral([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] boolean* result);
                    HRESULT SetIsPeripheral([in] Microsoft.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT IsDataValidForFormProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetIsDataValidForForm([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] boolean* result);
                    HRESULT SetIsDataValidForForm([in] Microsoft.UI.Xaml.DependencyObject* element, [in] boolean value);
                    [propget] HRESULT FullDescriptionProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetFullDescription([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] HSTRING* result);
                    HRESULT SetFullDescription([in] Microsoft.UI.Xaml.DependencyObject* element, [in] HSTRING value);
                    [propget] HRESULT LocalizedControlTypeProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetLocalizedControlType([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] HSTRING* result);
                    HRESULT SetLocalizedControlType([in] Microsoft.UI.Xaml.DependencyObject* element, [in] HSTRING value);
                    [propget] HRESULT DescribedByProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetDescribedBy([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.DependencyObject*>** result);
                    [propget] HRESULT FlowsToProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetFlowsTo([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.DependencyObject*>** result);
                    [propget] HRESULT FlowsFromProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetFlowsFrom([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] Windows.Foundation.Collections.IVector<Microsoft.UI.Xaml.DependencyObject*>** result);
                    [propget] HRESULT CultureProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetCulture([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] INT32* result);
                    HRESULT SetCulture([in] Microsoft.UI.Xaml.DependencyObject* element, [in] INT32 value);
                    [propget] HRESULT HeadingLevelProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetHeadingLevel([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] Microsoft.UI.Xaml.Automation.Peers.AutomationHeadingLevel* result);
                    HRESULT SetHeadingLevel([in] Microsoft.UI.Xaml.DependencyObject* element, [in] Microsoft.UI.Xaml.Automation.Peers.AutomationHeadingLevel value);
                    [propget] HRESULT IsDialogProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT GetIsDialog([in] Microsoft.UI.Xaml.DependencyObject* element, [out] [retval] boolean* result);
                    HRESULT SetIsDialog([in] Microsoft.UI.Xaml.DependencyObject* element, [in] boolean value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.AutomationProperty)]
                [uuid(5CA6B2C8-FF86-5A41-AA18-6948FAE592CF)]
                interface IAutomationProperty : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.DockPatternIdentifiers)]
                [uuid(75574F99-D145-547E-972B-7D879F93C03E)]
                interface IDockPatternIdentifiers : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.DockPatternIdentifiers)]
                [uuid(02D5A72C-F49D-53A9-B9FB-AF2719D16CCF)]
                interface IDockPatternIdentifiersStatics : IInspectable
                {
                    [propget] HRESULT DockPositionProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.DragPatternIdentifiers)]
                [uuid(AA2FDFD5-FB45-5D2B-8D92-A8E7B07061C2)]
                interface IDragPatternIdentifiers : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.DragPatternIdentifiers)]
                [uuid(482EEE70-0BFC-5552-9E7D-8DFFC526B2F7)]
                interface IDragPatternIdentifiersStatics : IInspectable
                {
                    [propget] HRESULT DropEffectProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT DropEffectsProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT GrabbedItemsProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT IsGrabbedProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.DropTargetPatternIdentifiers)]
                [uuid(133E8FF3-1DDD-5CBB-B908-1484D7C04DA7)]
                interface IDropTargetPatternIdentifiers : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.DropTargetPatternIdentifiers)]
                [uuid(6DA6F0BD-B942-5283-BE35-501AE87F88C7)]
                interface IDropTargetPatternIdentifiersStatics : IInspectable
                {
                    [propget] HRESULT DropTargetEffectProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT DropTargetEffectsProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.ExpandCollapsePatternIdentifiers)]
                [uuid(CEC15D9F-8630-569A-86A0-524BBEA618FF)]
                interface IExpandCollapsePatternIdentifiers : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.ExpandCollapsePatternIdentifiers)]
                [uuid(283101F4-C40C-55BF-A23B-D62B73B6AA35)]
                interface IExpandCollapsePatternIdentifiersStatics : IInspectable
                {
                    [propget] HRESULT ExpandCollapseStateProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.GridItemPatternIdentifiers)]
                [uuid(93609087-1114-557D-B17B-F801E41CEBBB)]
                interface IGridItemPatternIdentifiers : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.GridItemPatternIdentifiers)]
                [uuid(8072BC18-87D0-5A02-A0A1-F9AEC968C0E7)]
                interface IGridItemPatternIdentifiersStatics : IInspectable
                {
                    [propget] HRESULT ColumnProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT ColumnSpanProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT ContainingGridProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT RowProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT RowSpanProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.GridPatternIdentifiers)]
                [uuid(E5E1E250-C37C-54A2-8C61-1D9CCD3BB39C)]
                interface IGridPatternIdentifiers : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.GridPatternIdentifiers)]
                [uuid(E861604C-101F-5A6D-A308-3714F510F744)]
                interface IGridPatternIdentifiersStatics : IInspectable
                {
                    [propget] HRESULT ColumnCountProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT RowCountProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.MultipleViewPatternIdentifiers)]
                [uuid(70E4C847-2B82-5ECF-B808-E9D453C1FE53)]
                interface IMultipleViewPatternIdentifiers : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.MultipleViewPatternIdentifiers)]
                [uuid(AC71DAEF-D094-5C90-94AF-1FA474AB45FE)]
                interface IMultipleViewPatternIdentifiersStatics : IInspectable
                {
                    [propget] HRESULT CurrentViewProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT SupportedViewsProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.RangeValuePatternIdentifiers)]
                [uuid(C114DB37-6A75-5EF1-A542-D3B13F92CBFE)]
                interface IRangeValuePatternIdentifiers : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.RangeValuePatternIdentifiers)]
                [uuid(0AAA9AD7-F9B8-52A1-BC96-2A97FE389ED0)]
                interface IRangeValuePatternIdentifiersStatics : IInspectable
                {
                    [propget] HRESULT IsReadOnlyProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT LargeChangeProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT MaximumProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT MinimumProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT SmallChangeProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT ValueProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.ScrollPatternIdentifiers)]
                [uuid(04F1A4B8-EDC7-55F2-96DF-A9C7E809372E)]
                interface IScrollPatternIdentifiers : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.ScrollPatternIdentifiers)]
                [uuid(0F94F2F0-E0D2-5A24-B415-8D1506CE47AA)]
                interface IScrollPatternIdentifiersStatics : IInspectable
                {
                    [propget] HRESULT HorizontallyScrollableProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT HorizontalScrollPercentProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT HorizontalViewSizeProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT NoScroll([out] [retval] DOUBLE* value);
                    [propget] HRESULT VerticallyScrollableProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT VerticalScrollPercentProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT VerticalViewSizeProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.SelectionItemPatternIdentifiers)]
                [uuid(CE3A549D-A2CB-594D-A2A4-44778C09CCA5)]
                interface ISelectionItemPatternIdentifiers : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.SelectionItemPatternIdentifiers)]
                [uuid(2B8EAD7C-4E03-5B84-9E34-8B7384CBD862)]
                interface ISelectionItemPatternIdentifiersStatics : IInspectable
                {
                    [propget] HRESULT IsSelectedProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT SelectionContainerProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.SelectionPatternIdentifiers)]
                [uuid(401743D2-1FBA-5D05-B89F-631676453237)]
                interface ISelectionPatternIdentifiers : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.SelectionPatternIdentifiers)]
                [uuid(F3ED111B-B20A-5E5E-A232-07F607FD5C07)]
                interface ISelectionPatternIdentifiersStatics : IInspectable
                {
                    [propget] HRESULT CanSelectMultipleProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT IsSelectionRequiredProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT SelectionProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.SpreadsheetItemPatternIdentifiers)]
                [uuid(DCA2EC46-8564-5C9C-BA90-2C08455F697B)]
                interface ISpreadsheetItemPatternIdentifiers : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.SpreadsheetItemPatternIdentifiers)]
                [uuid(7EB10F80-8D3A-59AD-A2B9-05D8CECF18DB)]
                interface ISpreadsheetItemPatternIdentifiersStatics : IInspectable
                {
                    [propget] HRESULT FormulaProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.StylesPatternIdentifiers)]
                [uuid(13AECA5E-B496-5DF5-AEA5-330E1F0490EB)]
                interface IStylesPatternIdentifiers : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.StylesPatternIdentifiers)]
                [uuid(B232287A-BC4C-581E-A33C-3D6AEE10D04B)]
                interface IStylesPatternIdentifiersStatics : IInspectable
                {
                    [propget] HRESULT ExtendedPropertiesProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT FillColorProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT FillPatternColorProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT FillPatternStyleProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT ShapeProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT StyleIdProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT StyleNameProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.TableItemPatternIdentifiers)]
                [uuid(B4DE5D03-A5B4-5CA1-8715-16C8C6A10FCC)]
                interface ITableItemPatternIdentifiers : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.TableItemPatternIdentifiers)]
                [uuid(81D24BD7-66FB-53EF-9B32-D00F9C240A14)]
                interface ITableItemPatternIdentifiersStatics : IInspectable
                {
                    [propget] HRESULT ColumnHeaderItemsProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT RowHeaderItemsProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.TablePatternIdentifiers)]
                [uuid(3D7F9C0B-FF8F-50FA-BC01-2CC3C2E06E2C)]
                interface ITablePatternIdentifiers : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.TablePatternIdentifiers)]
                [uuid(3660935E-BCBB-5848-8E9A-264854F7A19A)]
                interface ITablePatternIdentifiersStatics : IInspectable
                {
                    [propget] HRESULT ColumnHeadersProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT RowHeadersProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT RowOrColumnMajorProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.TogglePatternIdentifiers)]
                [uuid(A0D2DF4C-BA59-51D9-9C01-034D7941C280)]
                interface ITogglePatternIdentifiers : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.TogglePatternIdentifiers)]
                [uuid(862920B5-DCB3-5691-A456-C2F15C476DFB)]
                interface ITogglePatternIdentifiersStatics : IInspectable
                {
                    [propget] HRESULT ToggleStateProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.TransformPattern2Identifiers)]
                [uuid(6EF7595C-DB8C-51B0-878B-34B7EF12F4DA)]
                interface ITransformPattern2Identifiers : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.TransformPattern2Identifiers)]
                [uuid(D9876FF5-89ED-5333-8111-AD25A28BEE8B)]
                interface ITransformPattern2IdentifiersStatics : IInspectable
                {
                    [propget] HRESULT CanZoomProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT ZoomLevelProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT MaxZoomProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT MinZoomProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.TransformPatternIdentifiers)]
                [uuid(2348187B-C50F-5A0E-BC05-305AC71B3B6B)]
                interface ITransformPatternIdentifiers : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.TransformPatternIdentifiers)]
                [uuid(CB7D84E4-5429-5188-8AA0-5F96558A8790)]
                interface ITransformPatternIdentifiersStatics : IInspectable
                {
                    [propget] HRESULT CanMoveProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT CanResizeProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT CanRotateProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.ValuePatternIdentifiers)]
                [uuid(FB493395-FB97-59D5-9323-4651CE964B55)]
                interface IValuePatternIdentifiers : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.ValuePatternIdentifiers)]
                [uuid(2019FAF5-CE64-59A7-BC13-0677C3146724)]
                interface IValuePatternIdentifiersStatics : IInspectable
                {
                    [propget] HRESULT IsReadOnlyProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT ValueProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.WindowPatternIdentifiers)]
                [uuid(BEC579E1-91BE-5D8F-AACA-6AD8839872D2)]
                interface IWindowPatternIdentifiers : IInspectable
                {
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [exclusiveto(Microsoft.UI.Xaml.Automation.WindowPatternIdentifiers)]
                [uuid(06762744-D3D7-5441-B879-373681D47F64)]
                interface IWindowPatternIdentifiersStatics : IInspectable
                {
                    [propget] HRESULT CanMaximizeProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT CanMinimizeProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT IsModalProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT IsTopmostProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT WindowInteractionStateProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                    [propget] HRESULT WindowVisualStateProperty([out] [retval] Microsoft.UI.Xaml.Automation.AutomationProperty** value);
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Automation.IAnnotationPatternIdentifiersStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass AnnotationPatternIdentifiers
                {
                    [default] interface Microsoft.UI.Xaml.Automation.IAnnotationPatternIdentifiers;
                }

                [activatable(Microsoft.UI.Xaml.Automation.IAutomationAnnotationFactory, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [activatable(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Automation.IAutomationAnnotationStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass AutomationAnnotation : Microsoft.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Xaml.Automation.IAutomationAnnotation;
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiersStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass AutomationElementIdentifiers
                {
                    [default] interface Microsoft.UI.Xaml.Automation.IAutomationElementIdentifiers;
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Automation.IAutomationPropertiesStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass AutomationProperties
                {
                    [default] interface Microsoft.UI.Xaml.Automation.IAutomationProperties;
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                runtimeclass AutomationProperty
                {
                    [default] interface Microsoft.UI.Xaml.Automation.IAutomationProperty;
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Automation.IDockPatternIdentifiersStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass DockPatternIdentifiers
                {
                    [default] interface Microsoft.UI.Xaml.Automation.IDockPatternIdentifiers;
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Automation.IDragPatternIdentifiersStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass DragPatternIdentifiers
                {
                    [default] interface Microsoft.UI.Xaml.Automation.IDragPatternIdentifiers;
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Automation.IDropTargetPatternIdentifiersStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass DropTargetPatternIdentifiers
                {
                    [default] interface Microsoft.UI.Xaml.Automation.IDropTargetPatternIdentifiers;
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Automation.IExpandCollapsePatternIdentifiersStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass ExpandCollapsePatternIdentifiers
                {
                    [default] interface Microsoft.UI.Xaml.Automation.IExpandCollapsePatternIdentifiers;
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Automation.IGridItemPatternIdentifiersStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass GridItemPatternIdentifiers
                {
                    [default] interface Microsoft.UI.Xaml.Automation.IGridItemPatternIdentifiers;
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Automation.IGridPatternIdentifiersStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass GridPatternIdentifiers
                {
                    [default] interface Microsoft.UI.Xaml.Automation.IGridPatternIdentifiers;
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Automation.IMultipleViewPatternIdentifiersStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass MultipleViewPatternIdentifiers
                {
                    [default] interface Microsoft.UI.Xaml.Automation.IMultipleViewPatternIdentifiers;
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Automation.IRangeValuePatternIdentifiersStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass RangeValuePatternIdentifiers
                {
                    [default] interface Microsoft.UI.Xaml.Automation.IRangeValuePatternIdentifiers;
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Automation.IScrollPatternIdentifiersStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass ScrollPatternIdentifiers
                {
                    [default] interface Microsoft.UI.Xaml.Automation.IScrollPatternIdentifiers;
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Automation.ISelectionItemPatternIdentifiersStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass SelectionItemPatternIdentifiers
                {
                    [default] interface Microsoft.UI.Xaml.Automation.ISelectionItemPatternIdentifiers;
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Automation.ISelectionPatternIdentifiersStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass SelectionPatternIdentifiers
                {
                    [default] interface Microsoft.UI.Xaml.Automation.ISelectionPatternIdentifiers;
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Automation.ISpreadsheetItemPatternIdentifiersStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass SpreadsheetItemPatternIdentifiers
                {
                    [default] interface Microsoft.UI.Xaml.Automation.ISpreadsheetItemPatternIdentifiers;
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Automation.IStylesPatternIdentifiersStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass StylesPatternIdentifiers
                {
                    [default] interface Microsoft.UI.Xaml.Automation.IStylesPatternIdentifiers;
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Automation.ITableItemPatternIdentifiersStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass TableItemPatternIdentifiers
                {
                    [default] interface Microsoft.UI.Xaml.Automation.ITableItemPatternIdentifiers;
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Automation.ITablePatternIdentifiersStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass TablePatternIdentifiers
                {
                    [default] interface Microsoft.UI.Xaml.Automation.ITablePatternIdentifiers;
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Automation.ITogglePatternIdentifiersStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass TogglePatternIdentifiers
                {
                    [default] interface Microsoft.UI.Xaml.Automation.ITogglePatternIdentifiers;
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Automation.ITransformPattern2IdentifiersStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass TransformPattern2Identifiers
                {
                    [default] interface Microsoft.UI.Xaml.Automation.ITransformPattern2Identifiers;
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Automation.ITransformPatternIdentifiersStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass TransformPatternIdentifiers
                {
                    [default] interface Microsoft.UI.Xaml.Automation.ITransformPatternIdentifiers;
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Automation.IValuePatternIdentifiersStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass ValuePatternIdentifiers
                {
                    [default] interface Microsoft.UI.Xaml.Automation.IValuePatternIdentifiers;
                }

                [contract(Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Xaml.Automation.IWindowPatternIdentifiersStatics, Microsoft.UI.Xaml.WinUIContract, 1.0)]
                [threading(both)]
                runtimeclass WindowPatternIdentifiers
                {
                    [default] interface Microsoft.UI.Xaml.Automation.IWindowPatternIdentifiers;
                }
            }
        }
    }
}
