//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "windowscontracts.idl";
import "Windows.Foundation.idl";
import "Microsoft.UI.Composition.idl";
import "Microsoft.UI.Xaml.idl";
import "Microsoft.UI.Xaml.Media.idl";
import "Windows.UI.idl";

// Forward Declare
namespace Microsoft
{
    namespace UI
    {
        namespace Composition
        {
            runtimeclass CompositionBrush;

            runtimeclass ExpressionAnimation;

            runtimeclass SpotLight;
        }
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            typedef enum ApplicationTheme ApplicationTheme;

            runtimeclass DependencyObject;

            runtimeclass DependencyProperty;
        }
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Xaml
        {
            namespace Media
            {
                runtimeclass AcrylicBrush;

                runtimeclass RevealBrush;

                runtimeclass XamlLight;
            }
        }
    }
}
namespace Windows
{
    namespace UI
    {
        typedef struct Color Color;
    }
}
namespace Microsoft
{
    namespace UI
    {
        namespace Private
        {
            namespace Media
            {
                interface IAcrylicTestApi;

                interface IMaterialHelperTestApi;

                interface IMaterialHelperTestApiStatics;

                interface IRevealBorderLight;

                interface IRevealBorderLightFactory;

                interface IRevealBrushTestApi;

                interface IRevealHoverLight;

                interface IRevealHoverLightFactory;

                interface IRevealTestApi;

                interface IXamlAmbientLight;

                interface IXamlAmbientLightFactory;

                interface IXamlAmbientLightStatics;

                runtimeclass AcrylicTestApi;

                runtimeclass MaterialHelperTestApi;

                runtimeclass RevealBorderLight;

                runtimeclass RevealBrushTestApi;

                runtimeclass RevealHoverLight;

                runtimeclass RevealTestApi;

                runtimeclass XamlAmbientLight;
            }
        }
    }
}

// Generic instantiations

// Type definition
namespace Microsoft
{
    namespace UI
    {
        namespace Private
        {
            namespace Media
            {
                [exclusiveto(Microsoft.UI.Private.Media.AcrylicTestApi)]
                [uuid(9BABF1E4-0D89-559B-9440-2967A0B77447)]
                [version(0x00000001)]
                interface IAcrylicTestApi : IInspectable
                {
                    [propget] HRESULT AcrylicBrush([out] [retval] Microsoft.UI.Xaml.Media.AcrylicBrush** value);
                    [propput] HRESULT AcrylicBrush([in] Microsoft.UI.Xaml.Media.AcrylicBrush* value);
                    [propget] HRESULT IsUsingAcrylicBrush([out] [retval] boolean* value);
                    [propget] HRESULT CompositionBrush([out] [retval] Microsoft.UI.Composition.CompositionBrush** value);
                    [propget] HRESULT NoiseBrush([out] [retval] Microsoft.UI.Composition.CompositionBrush** value);
                    HRESULT ForceCreateAcrylicBrush([in] boolean useCrossFadeEffect);
                }

                [exclusiveto(Microsoft.UI.Private.Media.MaterialHelperTestApi)]
                [uuid(FFEB6DAD-B1FC-56E7-9820-667BD14B4791)]
                [version(0x00000001)]
                interface IMaterialHelperTestApi : IInspectable
                {
                }

                [exclusiveto(Microsoft.UI.Private.Media.MaterialHelperTestApi)]
                [uuid(7FC11A83-CB9E-50B4-B4B3-645F08552BDA)]
                [version(0x00000001)]
                interface IMaterialHelperTestApiStatics : IInspectable
                {
                    [propget] HRESULT SimulateDisabledByPolicy([out] [retval] boolean* value);
                    [propput] HRESULT SimulateDisabledByPolicy([in] boolean value);
                    [propget] HRESULT IgnoreAreEffectsFast([out] [retval] boolean* value);
                    [propput] HRESULT IgnoreAreEffectsFast([in] boolean value);
                }

                [exclusiveto(Microsoft.UI.Private.Media.RevealBorderLight)]
                [uuid(79B08056-EB41-522C-A555-67E2B2367AA7)]
                [version(0x00000001)]
                interface IRevealBorderLight : IInspectable
                {
                }

                [exclusiveto(Microsoft.UI.Private.Media.RevealBorderLight)]
                [uuid(7D80896E-163E-5988-A1C3-3BD217FC97EB)]
                [version(0x00000001)]
                interface IRevealBorderLightFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Private.Media.RevealBorderLight** value);
                }

                [exclusiveto(Microsoft.UI.Private.Media.RevealBrushTestApi)]
                [uuid(583F836F-F467-5AF2-9FC4-AB90F0D79DF2)]
                [version(0x00000001)]
                interface IRevealBrushTestApi : IInspectable
                {
                    [propget] HRESULT RevealBrush([out] [retval] Microsoft.UI.Xaml.Media.RevealBrush** value);
                    [propput] HRESULT RevealBrush([in] Microsoft.UI.Xaml.Media.RevealBrush* value);
                    [propget] HRESULT IsInFallbackMode([out] [retval] boolean* value);
                    [propget] HRESULT IsAmbientLightSet([out] [retval] boolean* value);
                    [propget] HRESULT IsBorderLightSet([out] [retval] boolean* value);
                    [propget] HRESULT IsHoverLightSet([out] [retval] boolean* value);
                    [propget] HRESULT CompositionBrush([out] [retval] Microsoft.UI.Composition.CompositionBrush** value);
                    [propget] HRESULT NoiseBrush([out] [retval] Microsoft.UI.Composition.CompositionBrush** value);
                }

                [exclusiveto(Microsoft.UI.Private.Media.RevealHoverLight)]
                [uuid(52B1094D-D146-5B7A-99E6-B47465E0845B)]
                [version(0x00000001)]
                interface IRevealHoverLight : IInspectable
                {
                }

                [exclusiveto(Microsoft.UI.Private.Media.RevealHoverLight)]
                [uuid(94C0A3BA-1F5F-5FFB-BCA3-F14F9993D71F)]
                [version(0x00000001)]
                interface IRevealHoverLightFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Private.Media.RevealHoverLight** value);
                }

                [exclusiveto(Microsoft.UI.Private.Media.RevealTestApi)]
                [uuid(5E2186C5-5119-5550-87CA-14BD6FF8D72A)]
                [version(0x00000001)]
                interface IRevealTestApi : IInspectable
                {
                    [propget] HRESULT TargetTheme([out] [retval] Microsoft.UI.Xaml.ApplicationTheme* value);
                    [propput] HRESULT TargetTheme([in] Microsoft.UI.Xaml.ApplicationTheme value);
                    [propget] HRESULT BackgroundLight([out] [retval] Microsoft.UI.Composition.SpotLight** value);
                    [propget] HRESULT BorderLight([out] [retval] Microsoft.UI.Xaml.Media.XamlLight** value);
                    [propget] HRESULT BorderWideLight([out] [retval] Microsoft.UI.Xaml.Media.XamlLight** value);
                    [propget] HRESULT BackgroundLightMinSize([out] [retval] DOUBLE* value);
                    [propput] HRESULT BackgroundLightMinSize([in] DOUBLE value);
                    [propget] HRESULT BackgroundLightMaxSize([out] [retval] DOUBLE* value);
                    [propput] HRESULT BackgroundLightMaxSize([in] DOUBLE value);
                    HRESULT GetSpotLight([in] Microsoft.UI.Xaml.Media.XamlLight* value, [out] [retval] Microsoft.UI.Composition.SpotLight** result);
                    HRESULT GetHoverLightOffsetExpression([in] Microsoft.UI.Private.Media.RevealHoverLight* value, [out] [retval] Microsoft.UI.Composition.ExpressionAnimation** result);
                    HRESULT GetAsRevealBorderLight([in] Microsoft.UI.Xaml.Media.XamlLight* value, [out] [retval] Microsoft.UI.Private.Media.RevealBorderLight** result);
                    HRESULT GetAsRevealHoverLight([in] Microsoft.UI.Xaml.Media.XamlLight* value, [out] [retval] Microsoft.UI.Private.Media.RevealHoverLight** result);
                    HRESULT BorderLight_ShouldBeOn([in] Microsoft.UI.Private.Media.RevealBorderLight* value, [out] [retval] boolean* result);
                    HRESULT HoverLight_ShouldBeOn([in] Microsoft.UI.Private.Media.RevealHoverLight* value, [out] [retval] boolean* result);
                    HRESULT HoverLight_IsPressed([in] Microsoft.UI.Private.Media.RevealHoverLight* value, [out] [retval] boolean* result);
                    HRESULT HoverLight_IsPointerOver([in] Microsoft.UI.Private.Media.RevealHoverLight* value, [out] [retval] boolean* result);
                }

                [exclusiveto(Microsoft.UI.Private.Media.XamlAmbientLight)]
                [uuid(FB26A06A-DF17-5D74-8DBF-3DEA4FA35138)]
                [version(0x00000001)]
                interface IXamlAmbientLight : IInspectable
                {
                    [propget] HRESULT Color([out] [retval] Windows.UI.Color* value);
                    [propput] HRESULT Color([in] Windows.UI.Color value);
                }

                [exclusiveto(Microsoft.UI.Private.Media.XamlAmbientLight)]
                [uuid(E46587EB-7608-51FE-851A-FCB2B6CC26EF)]
                [version(0x00000001)]
                interface IXamlAmbientLightFactory : IInspectable
                {
                    HRESULT CreateInstance([in] IInspectable* baseInterface, [out] IInspectable** innerInterface, [out] [retval] Microsoft.UI.Private.Media.XamlAmbientLight** value);
                }

                [exclusiveto(Microsoft.UI.Private.Media.XamlAmbientLight)]
                [uuid(A547BC0E-A73D-58DD-B5F0-1E22656BDD5D)]
                [version(0x00000001)]
                interface IXamlAmbientLightStatics : IInspectable
                {
                    [propget] HRESULT ColorProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    [propget] HRESULT IsTargetProperty([out] [retval] Microsoft.UI.Xaml.DependencyProperty** value);
                    HRESULT SetIsTarget([in] Microsoft.UI.Xaml.DependencyObject* object, [in] boolean value);
                    HRESULT GetIsTarget([in] Microsoft.UI.Xaml.DependencyObject* object, [out] [retval] boolean* result);
                }

                [activatable(0x00000001)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass AcrylicTestApi : Microsoft.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Private.Media.IAcrylicTestApi;
                }

                [activatable(0x00000001)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Private.Media.IMaterialHelperTestApiStatics, 0x00000001)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass MaterialHelperTestApi : Microsoft.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Private.Media.IMaterialHelperTestApi;
                }

                [composable(Microsoft.UI.Private.Media.IRevealBorderLightFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass RevealBorderLight : Microsoft.UI.Xaml.Media.XamlLight
                {
                    [default] interface Microsoft.UI.Private.Media.IRevealBorderLight;
                }

                [activatable(0x00000001)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass RevealBrushTestApi : Microsoft.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Private.Media.IRevealBrushTestApi;
                }

                [composable(Microsoft.UI.Private.Media.IRevealHoverLightFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass RevealHoverLight : Microsoft.UI.Xaml.Media.XamlLight
                {
                    [default] interface Microsoft.UI.Private.Media.IRevealHoverLight;
                }

                [activatable(0x00000001)]
                [marshaling_behavior(agile)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass RevealTestApi : Microsoft.UI.Xaml.DependencyObject
                {
                    [default] interface Microsoft.UI.Private.Media.IRevealTestApi;
                }

                [composable(Microsoft.UI.Private.Media.IXamlAmbientLightFactory, public, 0x00000001)]
                [marshaling_behavior(agile)]
                [static(Microsoft.UI.Private.Media.IXamlAmbientLightStatics, 0x00000001)]
                [threading(both)]
                [version(0x00000001)]
                runtimeclass XamlAmbientLight : Microsoft.UI.Xaml.Media.XamlLight
                {
                    [default] interface Microsoft.UI.Private.Media.IXamlAmbientLight;
                }
            }
        }
    }
}
